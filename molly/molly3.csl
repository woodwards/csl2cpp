!************************ Molly Ingredient Input ********************************
!Derived from a version of Molly closest to Lee's Book with errors fixed
!and with arrays for feed and animal inputs.
PROGRAM MOLLY
Constant version = 8.9555
Constant numVersion=5.2555 
Constant MyPi = 3.1555

INITIAL ! Documentaion only section to enable collapsing. The real initial follows right after...
!

!Molly5x
!Added a medium particle pool (MPart) to the rumen model to better represent particle
!outflow rates. Changed Sp and Lp names to SPart and LPart for consistency. 4-21-13, MDH
!Found one instance of DaysinMilk used to trap small numbers and changed to DayMilk
!Added some if statements to define several variables including RumDM at T=0 to avoid use before definition, i.e. IHor, MDH
!Added calculations of water balance and urine output including a bladder integral to determine time of day fo urination.
!
! Molly 8.8 Gil Nov 2012 
!   Improvements for Extended Lactation:
!   kLhorPp replaced with fMamCellsPaPp that increases mam cells proliferaion as opposed 
!      to kLhorPp which increased Lhor so a cow can sustain a multi-year lactaion (3y or more).
!      cells proliferation will peak with day-length-rate-of-change so the udder and 
!      milk yield of successive years would peak - as before - together with DayLength. 
!   Required Intake pushed up as days lengthens to support the udder 
!      recovery during successive summers (Currently yield does not effect required intake
!      since we moved away from RFEED4, to avoid the cirularity of yield <-> intake)
!   PpLatitudeFactor introduced It is modulated to be zero at latitudes under 
!      <23> (to be refined) as we do not want any PP effect in latitudes where daylength 
!      is 11-13 hours) and also saturated at latitudes above <50> (to be refined), as we 
!      do not want the PP effect at lat 60 to be significantly higher than at lat 40).
!   ObesityFactorLhor introduced, cows gaining LW above certain (high) BCS will suffer a  
!      decline in LHOR (rather than just flattening). This is essential to get reasonable 
!      fit to DairyNZ's EL trial data (where the better fed Friesian cows consistently 
!      produces less milk, and obesity is the commonly assumed cause), in order to enable
!      the finer fit of the PP effect
!
! Molly 8.7555 Gil Nov 2012
!      Lactation callibration parameter values incorporated in the code
!
! Molly 8.7555 Gil Nov 2012
!   UdderFillFactor: introduced to allow extra reduction in 1X yield 
!      around peak lactaion creating more flexibility for the model by 
!      simulating the pressure in the udder as limiting yield (while so  
!      far we've considered only the low frequency as a limiting factor)
!      However this avenue was estiomated as negligable by the optimiser 
!      so I intend to remove it in future versions.
!   
!   MilkingFrequencyAdjusted: introduced to enable slower recovery upon 
!      transition from 1x to 2x, as the model is to fast to recover.
!   
!   Q_likelihood_to_die_relative_to_A: was removed as it was consitently 
!      estimated as 1 (which is a "do nothing" value, being a multiplier)
!   
!   dNEP: (daily NEP) added as NEP became momentary  
!      when intermittent milking was introduced
!   
!   MilkingHours: array filled with 4 times a day so Molly 
!      can now change MF between 1 and 4 woithout crashing
!   
!   DailySummary: timing slightly changed X.99 to ensure it is done 
!      before the day step stop (for WFM) which occurs around Y.00 +- MAXT)
!
!
! Molly 8.7555 Gil 29 Aug 12
!    Mindy supplementation finalised (preliminary attraction factor)
!    Most changes are in intermittent_eating_deriv.csl
!
! Molly 8.7 Gil July? 2012
!   Merge of Molly 8.5 and 8.6
!
! Molly 8.7555 GL Aug 2012
!    Folder structure changed so projects Mindy , Molly etc co-exist and share the common files
!
! Molly 8.5555 GL  July 2012
!    Merge with branch 'MindyStart'onGit.
!    That is, changes made by Mark early 2012 "Molly86 for Mindy" wer incorporated in the master 
!    version which is  the big merge Mark + Gil March 2012 made to compile and run by Gil
!    Conflict wer in these files:
!    	Files/Intermittent_Eating_Init.csl
!    	Files/Intermittent_Eating_deriv.csl
!   	Files/Molly.apj
!    	Files/Molly_ProximateExpand_In_Deriv.csl
!    	Files/Molly_ProximateExpand_In_Init.csl
!    	Molly.csl
!
! Molly 8.6 MDH Dec 2011 **** BRANCHED FROM 8.4555 ****
!   Changes for Mindy
!

! Molly 8.5555 Gil May 2012 
!    Lhor eqautions in MamCell_DairyNZ_in_deriv.scl were changed to use cAa / cAaBase instead of AA / AaBase.
!    Some integer numeric literals (e.g. 1) in double percision equations were changed to 1.0 in DairyNZ
!    include files (FdRat, MamCells). csl's behaviour in those cases was unperdictable until the change!!!
!
! Molly 8.5555 Gil April 2012 Gil Merged code made working
!		First daily summary at t = 0 instead of T = 1
!    Some variables initialisations to zero added e.g. dMilkProd
!		MamEnz equation moved to MamCells_MDH_in_deriv.csl / MamCells_DairyNZ_in_deriv.csl
!
! Molly 8.5555 March 2012 MDH/Gil Merged code
!
! Molly 8.5555 March 2012 Gil
!     Prepearation for merging with Mark
!     Latest interim parameter values (Fdrat_DairyNZ_constants.csl; Mamcells_dairyNZ_in_deriv.csl)
!     Molly.csl: Got rid of the warnings about re-computing parameters but ConceiveNow, DryOffNow now need to be reset to zero by the m file / WFM. 
!     Added AbortPregNow constant top allow for abortion through M file (more doc inside)
!     Fdrat_DairyNz.csl:  Separated Dry and lactation cow maintenance requirement 
!
!		 WFM recent callibration (interim) main parameter values that are NOT in the code are:
!         BcsBase = 3.2555	 (in code = 3)	
!         MilkProductionAgeAdjustment = 0.7555 (2y old)	|  0.9555	(3y old) |  1 (4+y old)  |  (in code = 1)
!			   vmAaPmVis	    0.002555 (Freisian) | 	0.002555 (Jersey)	0.001555 (Holstein) | (in code = 0.002555)
!         vmGlLmVisPart	0.001555 (Freisian) | 	0.001555 (Jersey)	0.001555 (Holstein) | (in code = 0.001555)
!			
! Molly 8.5555 Feb 2012 Gil
!     FdRatMolly calculations (Fdrat_DairyNZ.csl) converted to MJ rather than kgDM. IntakeVersion = 8.5555
!     FdRatMolly (Fdrat_DairyNZ.csl): compensatory feeding introduced (cows under / over target weight request / more / less feed)
!     LHOR / MamCells code extracted to include files
!         Old code MamCells_MDH_*.csl
!         New code MamCells_DairyNZ_*.csl
!     Revised lactation model (MamCells_DairyNZ*.csl), around LHOR and MamCells, improves predictions on 1x,3x and feed restricted periods
!     iFdRat (FdRat_MDH_in_init) restored (was iFdRat = 10.0 for a while...)
!     iFdRat (FdRat_DairyNZ_in_init) now calculated using the same code as FdRat, to reduce LW jump on day1 due to FdRat jump.
!     Pregnancy code moved up in the init section, because FdRat_DairyNZ requires to know pregnancy in order to calculate iFdRat and FdRat
!     Recomended MamCellsPart settings:  2 * KgMilkSolidsExpectedIn270Days - 140
!
! Molly 8.4555  May 2011 Gil
!     Completely new FdRatMolly calculations replacing RFEED4 etc. IntakeVersion = 8.4555
!     MatureMamCellsPart and age adjustment removed. Age adjustment responsibility handed back to WFM / user.
!     MamCellsPart is again the constant to change for production.
!     KgMilkSolidsExpectedIn270Days introduced, represents the genetic merit in the new required intake calculations
!     Recomended MamCellsPart settings: 1.4 *KgMilkSolidsExpectedIn270Days - 140.
!
!
! Molly 8.4555  3rd March 2011 Gil
!     WtUter equation: DayMilk changed to MOD(DayMilk+3000.0,3000.0)
!     to correct the wrong assumption that when non preg DayMilk is positive
!     as DayMilk = -21 give WtUter = 465kg(!) (When dry cow gets pregnant) 
!     WtUter should always be 0 - 10kg. The +1000.0 is only needed due to Acsl's
!     weird behaviour of the MOD function
!
! Molly 8.5 PG Feb 2011
!    Include ProximateExpand (init / deriv) csl files instead of classic_nutr
!    Many digestive constants changed
!
! Molly 8.4555 Gil Jan 2011
!    MatureMamCellsPart is now the initialization constant, while MamCellsPart is derived from it.
!    (adjsting for age)
!     
!   FdRat_CCP_IN_Deriv.csl renamed to FdRat_DairyNZ.csl plus code revised.
!
!    kMamCellsQA initial value and use changed. 
!
!    Revised formula for FMamCellsQA. For twice a day milking should yield NO change 
!    it does yield changes for once and thrice a day. Too sensitive and needs further improvement.
!    (attempts to fix the very low sensitivity of previous version to milking frequency)
!    
!    Pablo's Walking code added but NOT incorporated (because it disturbed the intake / energy expanditure too much, needs work)
!
!
! Molly 8.3 GL May 2010  
!  Pregnancy:
!    made conceptus weight / gravid uterus dependent on cow age and breed
!    Added 
!      WeightConcBreedFactor
!      WeightConcAgeFactor
!      iAgeinYears
!      ageInYears
!    WtGrvUter used to always grow to 91 kg regrdless of cow age / size
!    This seems to suit only mature American H cows.
!    Defaults have not changed so
!    For mature American Holstein LEAVE as it is iAgeinYears = 4.0 ; WeightConcBreedFactor = 1.0.
!    For mature NZ Frisian set WeightConcBreedFactor to 0.7555 to get final GU 67kg (DairyNZ data)
!    For mature NZ Jersey  set WeightConcBreedFactor to 0.4555 to get final GU 43kg (DairyNZ data)
!    For 2 years old change iAgeinYears. This will drive WeightConcAgeFactor to be 
!   	87.5% (all breeds) for 2y olds (DairyNZ data)
!   	97.5% (all breeds) for 2y olds (DairyNZ data)
!    As the default age is now 4 default GU will remain unchanged (AgeFactor is calculated to 1.0 for 
!    the defult age = 4, and breedFactor is initialized to 1.0))
!
! Molly 8.2 GL
!  Meal feeding:
!     (with JM) Meal feeding available (equal size equally spaced only).
!      Default is continous feeding with:
!         FDTM  = 1.0 !! Length in days of one meal  
!         FDINT = 1.0 !! Length of interval between meals in days 
!      for two meals of approx half an hour every 12 hours set
!         FDTM  = 0.02  
!         FDINT = 0.5
!
!  Timers of Lactation and pregnancy:
!     Introduced new timer system for gestation and lactation. 
!     Deleted DIM include files as the new system should cater for all users
!     Recomended to intialise only StartDayGest to the day of pregnancy.
!     Possible but not recomended to start with negative StartDIM instead.
!     Not recomended to start Molly in milk as results are way off the rsults of 
!     an eqivalent Molly that starts before calving (Old problem).
!     By Default GestLength=283, DaysOpen=82, DaysDry = 82 so Molly will be 
!        pregnant 283 days followed by DaysOpen = 82 
!        lactating 283 days followed by DaysDry = 82 
!     for control from the m file over conception / dry off use:
!        DryOffNow = 1.0 to dry her off on the spot (but make sure DaysDry is zero to not take effect
!        ConceiveNow = 1.0 to get her pregnant on the spot (but make sure DaysOpen is very big enough to not take effect)
!
!Molly5v
!Altered milk out to use a schedule statement so as to not miss milking times.
!Found that OtGutCont calc does not work properly with intermitten FdRat. Switched to
!	intakeDay, 5-12-09, MDH
!Changed the representation of daylength to improve accuracy. 5-12-09, MDH
!Added an additional daylength calc that included twilight for use with the within day
!	intake equation, 5-12-09, MDH
!Added another intake equation that will support within day simulation of intake patterns
!	and feeding grain separately from forage, MDH 4-12-09
!Changed the representation of DayGest to allow simulation of an abortion by resetting DaysOpen
!	and Preg in the middle of a run. MDH 4-16-09

!Molly5u
!Changed Nint to Nintake to avoid problem with reserved keyword in Xtreme, 3/13/09
!Found that kMinH will assume negative values when udder fill exceeds MilkMax.
!	Milk production is also a proplem with periodic milking as dmilk is
!	directly affected by kminh and thus changes over the course of a day.
!	Made a pool for kMinH to dampen the effect on active cells.  This 
!	maintains responsiveness to udder fill but removes hour to hour variation.
!	Milk yield is now represented by dMilkProd.  Apr 23, 2008 MDH
!Fixed problems with DIM and GestDay calculations to allow cycling through
!	multiple lactations. Apr. 21, 2008 MDH
!Revised and added to the Intake Prediction Equations
!	NRC is the default dry cow equation with no other choices at this time.
!	IntakeEqn=1, Roseler et al while lactating.  Apr 21, 2008

!Molly5t
!Changed the Include statement for Ingredient inputs to revised scheme in 5t files.
!Added vectors for experimental bias for passage of DM, OM, Ha, NDF, ADF, Lipid
!	MiNP, NitP, and NaNMNP, 12-23-07, MDH

!	Checking_Stability_Nutr_Inputs_CCP_In_Init.csl and 
!	Checking_Stability_Nutr_Inputs_CCP_In_Deriv.csl
!	because cAc and cGl not calculated in Initial section. CCP 8-29-07

!Molly5s2
!Added code so that ME in calories can be converted to ME in Joules, CCP 8-20-07

!Molly5s1
!Altered BCS conversions, see Molly3 bk p. 14, CCP 7-26-07
!Discovered that Mark's BW includes WtGrvUter. Therefore use BW now, and remove LW 
!	from code, CCP 7-25-07

!Molly5s - Mark's latest version
!Introduced INCLUDE files DIM_Gest_CCP_In_Init.csl, DIM_Gest_CCP_In_Deriv.csl, 
!	Includes code to calculate WtUter when cow does not conceive, CCP 5-30-07
!iBW calculation from iLW and WtGrvUter added, CCP 5-23-07
!Changes to align Dexcel's Molly with Mark's 5s: 
!	Comment re Molly5q4 and 5q6 changed, CCP 5-14-07
!	Parameter changes, see Molly5s.cmd_, CCP 5-22-07:
!		K1MamCells=0.009
! 		K2MamCells=0.4555
!		uTMamCells 0.03 to 0
! 		MAMCELLSF(2)=180.3555, sent by WFM
! 		LAMBDAMAMCELLS 0.002555 to 0.002555
! 		LAMBDAMAMCELLSF(2)=-0.0009555, sent by WFM
! 		PMAMENZCELL 11.8555 to 12.4555
! 		VMGLLMVISPART 0.001555 to 0.001555
! 		KVMGLLMDECAY 0.1555 to 0.1555
! 		KVMGLLMDEG 0.0003555 to 0.0003555
! 		KVMGLLMSYN 0.03555 to 0.04555
! 		VMAAPMVIS 0.002555 to 0.002555
! 		VMFATSADIP 0.4555 to 0.3555   
! 		KGLCD 0.01555 to 0.01555
! 		KBLDURU 2162.5555 to 2133.5555
! 		XMAMENZLHOR 0.5555 to 0.6555
! 		KDAYLENGTH 0.2555 to 0.1555		
! 		LHORPPF(2)=0.1555, sent by WFM
! 		KBASOTH 2.2555 to 2.1555
! 		KAHORGL 3.0e-3 to 0.003555
! 		THETA2 2.0 to 5.9555
! 		KCHOR1GL 3.0e-3 to 0.003555
! 		THETA4 1.0 to 4.1555
!	Mark's code for DayGest & DIM not used, since these are sent by Wfm.
!	LW not equal to BW now - removed, CCP 5-22-07
!Removed the following INCLUDE files and incorporated them into the main code:
!	DIM_CCP_In_Init.csl, InitCond_CCP.csl, Genotype_Effect_CCP.csl, 
!	Check_iBW_iBCS_CCP.csl, DIM_CCP_In_Deriv.csl,MamEnz_CCP.csl, MUN_CCP.csl. CCP 5-22-07
!
!Molly5s
!Added vectors to hold experimental bias adjustement factors for CP, Fat, NDF,
!	ADF, and Starch, 12-18-07, MDH
!Added MUN calculations. 4-14-07
!Changed PUN to BldUr to avoid confusion with true PUN needed to calculated MUN
!Gl, Ac, Aa, Fa, and Ur volume factors are flaky with GrvUter as they run off of
!	EBW which changes dramatically the day of calving.  Changed these factors
!	to use NonUterEBW which resolved the problem. MDH 4-14-07
!Added gravid uterus calculations based on the Ferrell model. MDH 4-5-07

!Molly5r
!Altered representation of AHor, AHor1, CHor, and CHor1 such that each has its
!	own rate constant and changed Theta on CHor such that Theta4 is used for both
!	CHor and CHor1 and Theta3 is used for Ahor1.  Now Theta 2 and 3 increase anabolic
!	responses and Theta4 increases catabolic responses. 11-22-06 MDH

!Molly5q15
!Added 5q12 changes, CCP 5-10-07
!Some 'pruning' done, CCP 5-10-07
!Included check that iBW, iBCS don't give iWtAdip <= 0, see 'Check_iBW_iBCS_CCP.csl', CCP 5-10-07
!Altered code so that iFdRat not equal to 1e-8, and therefore gives a more realistic
!	value for iRumVol, which in turn reduces the jump in BW between t=0 and t=1.
!	See FdRat_CCP_In_Deriv.csl and FdRat_CCP_In_Deriv.csl, CCP 5-9-07

!Molly5q13
!MetabPP calculated incorrectly. See Marks's email 'MetabPP, 6/4/07'. CCP 4-11-07 

!Molly5q12
!Mun added to code as an INCLUDE, MUN_CCP.csl. See p 7 of N notebk.
!	Relevant parameters/constants not refitted though. How am I going to do this?
!	Need to consult with Mark. CCP 3-28-07

!Molly5q11
!PunVol changed to VolPun to be consistent with naming of other metabolites.
!	VolPun for T > 1.0e-6 changed to match VolPun for T <= 1.0e-6. 
!	cPun changed from (Pun/PunCor)/VolPun to Pun/VolPun, CCP 2-5-07
!Parameter changes, see emails: 	'Copy of <RE: Ruminal pH>' 1-10-07, 
!						'RE: parameters and manuscript' 1-12-07
!		K2MamCells 0.04555 to 0.4555
!		K1MamCells 0.01 to 0.009
!		MamCellsF 162.9555 to 163.3555 for NA, see Genotype_Effect_CCP.csl, sent by WFM	
!		lambdaMamCells 0.002555 to 0.002555
!		lambdaMamCellsF -0.0008 to -0.0007555 for NA, see Genotype_Effect_CCP.csl, sent by WFM 
!		uTMamCells 2.8555e-08 to 0.03
!		PMamEnzCell 12.5555 to 11.8555
!		VmGlLmVisPart 0.001555 to 0.001555
!		kVmGlLmDecay 0.1555 to 0.1555
!		kVmGlLmDeg 0.0003555 to 0.0003555 
!		kVmGlLmSyn 0.03555 to 0.03555
!		VmAaPmVis 0.002555 to 0.002555
!		VmFaTsAdip 0.4555 to 0.4555
!		KGlCd 0.01555 to 0.01555
!		KPunU 2162.7 to 2162.5555
!		xMamEnzLHor 0.5555 to 0.5555
!		KDayLength 0.2555 to 0.2555
!		LHorPPF 0.1555 to 0.1555 for NA, see Genotype_Effect_CCP.csl, sent by WFM 
!		KbasOth 2.2555 to 2.2555	
!	CCP 1-12-07		 		

!Molly5q10
!KCeCs, KHcCs restored as f(RumpH) on Mark's advice (email: 'RE: ME of feeds + EL runs',
!	12-13-06). Need to revisit this issue.
!KCeCs and KHcCs fixed at 61.7555, 25.6555 regardless of RumpH, CCP 12-12-06 

!Molly5q9
!Molly not recognising MAMCELLSF(1), LAMBDAMAMCELLSF(1), LHORPPF(1).
!	Changed to MAMCELLSF, LAMBDAMAMCELLSF, LHORPPF respectively.    
!	See Genotype_Effect_CCP.csl also. CCP 12-11-06

!Molly5q8
!DIM, sign (AX reserved words) replaced by DayMilk and signe respectively, 
!	just to be safe. See:
!	Molly5q8.csl, DIM_CCP_In_Init.csl, FdRat_CCP_In_Init.csl,	
!	DIM_CCP_In_Deriv.csl, FdRat_CCP_In_Deriv.csl, MamEnz_CCP.csl. 			
!	CCP 11-29-06
!MamCells eqn changed as per Mark's email, 11-23-06,
!	'RE: MamCells Calc and Initialising lactation', CCP 11-27-06. 
!Provision added so that Molly does not crash when feed intake
!	<= 0, see FdRat_CCP_In_Init.csl, FdRat_CCP_In_Deriv.csl,
!	CCP 11-10-06

!Molly5q7
!Calculation of MamCellsF(1), lambdaMamCellsF(1), LHorPPF(1) changed
!	for Wfm, incorporated as an Include, see 'Genotype_Effect_CCP.csl', CCP 9-29-06
!numVersion changed to version for Wfm, CCP 9-29-06
!Incorporated 'Checking_Stability_Nutr_Inputs_CCP_5q7.csl' as an Include.
!	Besides checking for feed nutrient values < 0, and for cGl, cAc
!	< 0, it has code to trap and correct div/0 for the 5 feed 
!	nutrients where this could be a problem, CCP 9-18-06
!For Classic and Proximate nutrient schemes kPiAa, kHaCs, KCeCs1, KHcCs1 constants.
!	For Ingredient nutrient scheme (Mark uses this), they are variables. CCP 9-18-06
!	As suggested by Mark, see his email 'RE: cmd file', 9-20-06, 10.02 am, I take 
!	means from ExtLact5p Inputs Printout. Need to revisit this issue.
!Forset=0, mixset=1, conset=0 for all feeds in WFM, CCP 9-25-06.
!	See Email 'MixSet, etc', 25/09/2006, 01.5555 p.m.
!	Need to revisit this issue, see Email 'RE: cmd file', 15/09/2006, 06.4555 a.m.
!'INCLUDED' files introduced, CCP 9-14-06: 
!	Initial: DIM_CCP_In_Init.csl, InitCond_CCP.csl, Genotype_Effect_CCP.csl,
!	Molly_Classic_Nutr_CCP.csl, FdRat_CCP_In_Init.csl, Checking_Stability_Nutr_Inputs_CCP.csl
!	Derivative: DIM_CCP_In_Deriv.csl, FdRat_CCP_In_Deriv.csl, MamEnz_CCP.csl
!	Dynamic: Checking_Stability_Nutr_Inputs_CCP.csl
!Following Constant changes made as per Molly5q3.cmd_, Sept 3, CCP 9-13-06
!	IALG 5 to 8 
!	MAXT 0.006555 to 0.01 
!	OthDnaMx 0.1555 to 0.09
!	VisDnaMx 0.1555 to 0.09 
!	FHcCs1 0.6555 to 0.4555, see Molly_Ingredient_In_Deriv.csl
!	KFatPi 0.03 to 0.0007555
!	KAmabs 12.4 to 23.06555
!	KabsAc 10.5 to 6.2555
!	KabsBu 10.5 to 10.3555
!	KabsPr 10.5 to 11.6555
!	FKRuAdf 10.0 to 59.7555, see Molly_Ingredient_In_Init.csl
!	FKRuP 0 to 3.6555, see Molly_Ingredient_In_Init.csl
!	FKRuSt 5.0 to 3.01555, see Molly_Ingredient_In_Init.csl
!	LgutDCFa 0.9 to 0.6555
!	LgutDCHa 0.7 to 0.8555
!	LgutDCHb 0.1 to 0.1555
!	LgutDCPi 0.4 to 0.6555
!	kMamCellsQA 0.7555 to 0.3
!	LHorCor 10 to 20
!	BCSTarget 2.5 to 3.0
!	FMamCellsQACr 0.5 to 1
!	K2MamCells 0.1555 to 0.04555
!	xLHorSensAdip 4.0 to 2.9555
!	VmAaPOthOth 300 to 223.2555
!	iPMamCellsA 0.5 to 0.7555 
!	K1MamCells 0.009 to 0.01 
!	fLm 0.04555 to 0.04555 
!	KbasVis 3.5 to 8.8555
!	VmTsFaAdip 0.1 to 0.06555
!	MamCellsPart 1000 to 792
!Following 17 parameters set from Molly5q3_MamCells_Pub_Summary.xls,
!	Solution 2 (see email RE: cmd file, 15/09/2006, 06.4555 a.m.)
!	CCP 9-15-06
!	MamCellsF(2) 0 for NZ, 162.9555 for NA	
!	lambdaMamCells 0.002 to 0.002555
!	lambdaMamCellsF(2) 0 for NZ, -0.0008 for NA
!	uTMamCells 0.03 to 2.8555e-08
!	PMamEnzCell 10 to 12.5555
!	VmGlLmVisPart 0.002555 to 0.001555
!	kVmGlLmDecay 0.03 to 0.1555
!	kVmGlLmDeg 0.0005 to 0.0003555 
!	kVmGlLmSyn 0.005 to 0.03555
!	VmAaPmVis 2.5E-3 to 0.002555
!	VmFaTsAdip 0.1555 to 0.4555
!	KGlCd 20.0E-3 to 0.01555
!	KPunU 857.1 to 2162.7
!	xMamEnzLHor 1.0 to 0.5555
!	KDayLength 0.0 to 0.2555
!	LHorPPF(2) 0 for NZ, 0.1555 for NA
!	KbasOth 2.6555 to 2.2555					
!FeedInFlag introduced to enable FdRat input from WFM.
!	See FdRat_CCP_In_Init.csl, FdRat_CCP_In_Deriv.csl, CCP 9-8-06
!If cows dry for prolonged periods (iMamLmF or MamLm = 0.00001), then
!	dMilk becomes very small and eventually is treated as zero. Effects 
!	propLm, fPm, fTm1 because dMilk is a divisor in their eqns.
!	iMamLmF/MamLm set to zero for dry cow and dMilk = dMilk + 1e-8 in 
!	the above eqns. Minimal effect on previous work, CCP 9-1-06
!Added code so that program stops if feed fractions < 0.
!	See 'Checking_Stability_Nutr_Inputs_CCP.csl'. No effect on previous work, CCP 9-1-06
!Added code so that program stops if cGl or cAc <= 0.
!	See 'Checking_Stability_Nutr_Inputs_CCP.csl'
!	No effect on previous work, CCP 9-1-06
!Code added by Robin McDougall, AX support, for debugging.
!	No effect on previous work, CCP 9-1-06
!iBCS added to the 'initialisation' Procedural in a similar way to iDMilk.
!	Means that first BCS is the observed, CCP 9-1-06
!Daily and total milk yield in litres also, CCP 9-1-06
!BCSTarget = 5.0 NZ scale (Holmes et al, 2002), which is equivalent to US 3.1.
!	Will not effect previous work since BCSTarget then = 3.0 US, CCP 9-1-06
!iBCS, BCSTarget now given in NZ scale, CCP 9-1-06
!RumBuCor instead of RumPrCor in eqn for iRumBu. Both set to 1 so no problems 
!	with previous work, CCP 8-31-06
!if(GlobalDMIEqn.eq.0) changed from if(GlobalDMIEqn.ne.0).
!	No effect on previous work, CCP 8-31-06

!Molly5q6
!Extracted the several feed input schemes to external files and use an INCLUDE
!statement to pull the desired code in. This greatly simplified the code.
!8-23-06, MDH

!Molly5q4
!Extracted the several feed input schemes to external files to simplify the code.
!Currently need to cut and paste the sections in. This version has the
!nutrient input scheme. 8-23-06, MDH

!Molly5q3
!Need to add various BCS prediction equations to be consistent with NZ system.  
!	Also need to add gravid uterus equations for weight and nutrient expenditure.
!Fixed inappropriate use of breed factor on KLHorPP to affect KDaylength, 8-18-06
!Updated Methane equations to correct an error that was fixed 2/2/95
!	by KC which was after I got my version of Molly.
!Fixed some MiCor and LPartCor factors.  Both set to 1 so no problems 
!	with previous work, 8-18-06 per CCP
!Changed the effects of LHor from mammary cell cycling to Penzcell

!Molly5q
!Added photoperiod effects

!Molly5p
!Changed MamCellsF from a multiplier to an addend, MDH 4-24-06
!Added MamCellsF(5) as an expt effect to MamCellsPart, MDH 4-21-06
!Altered the representation of the Vm for lactose such that it is representated
!using Dijkstras milk curve equation.  This allows for lesser lactose yield relative
!to protein and fat in early and late lactation and more at peak lactation.
!Changed kMinH effects from the individual milk component enzymes to the
!active and quiescent proportion fluxes.
!MDH 3-6-06

!Molly5o4
!Altered MamCells representation such that total MamCells is calculated from
!the equation of Dijkstra et al., the proportion of active cells is calculated
!using the approach of Vetharaniam et al. and Enzyme activity per cell is as
!originally represented. 2-27-06

!Molly5o3
!Removed grass, legume, corn silage scheme for setting kCeCs and kHcCs.  Forgot to
!	remove and thus it was over-riding the calculation using RuAdf, 9-20-04.
!Added intercepts to rate constant calcs for ruminal degradation of Pi, Ha, and Ce
!	and made ruminal retention times a constant to allow fitting. 9-19-04
!Added vectors to allow application of fixed effects for laboratory, 9-16-04

!Molly5o2
!Made the mean ruminal retention time and intercept for kPiAa calc constants so
!they could be fitted to data. 9-16-04
!Changed CP content of urea from 285 to 292 per J. Fadel comment, 9-2-04
!Added the code to support ingredient inputs. 7-12-04

!Molly5o1
!Added the newer Event array, fixed an error in calculating Nintake, removed duplicate
!iMilkAve definitions, removed EmptyEventAnimal reference, changed InitCond to the
!newer 5 element size, and added StartDIM code. 7-9-04

!Changed fNnFd to represent Nucleic Acids plus nonurea NPN as originally
!intended. MDH, 3/7/2000

!Added Parity and enabled discrimination by parity in DMI predictions
!and in MamCells and KLHor. MDH, 3-2-00

!Increased array size for events to allow 50 events.  MDH 11-16-99

!This version has new calculations for initial conditions
!including rumen DM, liquid and total volume, EBW and
!partitioning of EBW to adipose(Adip), lean body mass(Oth),
!and visceral(Vis) fractions.   8/99   NES  

!Coding revisions for consistency and enhanced understanding,
!as described below, initiated on 5/25/99.  NES

 !This is an aggregated version of the 550 kg cow described by
!Smith(1970) and Baldwin and Smith(JDS 54:583(1971)).
!This version was developed to simulate overall energy transactions,
!within day patterns of nutrient use, longer term day to day patterns
!of nutrient use throughout a lactation or growth cycle and
!as an aid in the design of energy balance experiments.
!  The body weight of the cow is 550 kg.  Her empty body weight(EBW)
!is 500 kg. Lean body mass (Oth) is 350 kg and includes skin, brain,
!kidney,muscle,skeleton and minor tissues. Adipose tissue (Adip) is
!75 kg and is comprised of triacylglyceride(Ts,60kg) and cytoplasmic
!elements (wtcytAdip=15kg). Visceral weight (wtVis) is 75kg and includes
!blood, gut, liver, heart and mammary. Note that wtOth and wtAdip would 
!be expected to decrease in early lactation while wtVis would increase.
!   Nutrient inputs were calculated for a 50:50 forage/concentrate
!ration and are continuous in the reference (default) state. Milk
!production is 30 kg/day and energy balance is zero. Milk has
!3.5, 4.8, and 3.3% and 41.2, 23.4 and 22.4 MJ, respectively, 
!of fat (expressed as tripalmitin and equivalent to 3.7% of true
!milk fat),lactose and protein.  Input/output comments prior to
!each subsection of the model refer to this specific
!feeding/production condition. 

  !This version has provisions which accommodate
!1.  Different feeding frequencies e.g. one or more meals 
!   per day or continuous feeding.
!2.  A wide range of diets specified as input by users
!3.  Alternative feeding strategies including specification of  
!   amounts of feed offered and conditional changes in  
!   feedstuffs offered.
!4.  Provisions for abomasal infusion of casein, BST, T3, 
!   and insulin administration. 
 
!The default for this version is set for mid-lactation within day 
!simulations.  For long term simulation runs overlays 
!to increase pool sizes and reset mammary parameters are required. 

!Explanation of coding, 5/25/99
! 1.Most entities described with 2 to 5 letter codes with first 
!letter in caps and rest small.
! 2.Compartments:
!Rum	 Rumen	   Abo    Abomasum	   Milk Milk
!IntSm Sm intestine  IntLrg Large intestine  Fec Fecal
!Vis	 Viscera	   Adip   Adipose		   Mam Mammary
!Liv	 Liver         Git    Gastrointestine  Hrt Heart
!Bld	 Blood	   Mus    Muscle		   
!Oth Other(lean body mass)
! 3.Factors, initial conditions, rate constants, etc.:
!Cor	Correction factors	Hcomb	 Heat of combustion
!c	Concentrations		Vol	 Volume
!d	Differential equation	Vm	 Vmax(metabolic capacity)
!i	Initial condition		K	 Rate or affinity constant
!Mwt	Molecular weight		F	 Adjust/scaling factor(Bwt,etc)
!Ave	Average			f	 Fraction (eg. kg/kg, etc.)
! 4.Metabolites, nutrients, etc.:
!	
! 5.Other coding:
!	Liq	Liquid		Hor	Hormone		Enz	Enzyme 			 
END ! doc
    
INITIAL   

!BASIC UNITS
!TIME IN DAYS
!POOL SIZES IN KG(LPart,SPart,SolDM,IndigFd,Ha,Hb,Pi,As,Mi) OR
!MOLES
!CONCENTRATIONS IN MOLES/KG or LITER
!MOLECULAR WEIGHTS IN KG/MOLE
!FLUXES IN KG OR MOLES PER DAY 

!*********************** PHYSICAL CONSTANTS ****************************
 !MOLECULAR WEIGHTS(Mwt)in Kg/Mole 
 !Fl=long chain fatty acids,Am=ammonia,Wa=water,Ch=choline 
CONSTANT MwtSc=0.1555,MwtOa=0.1555,MwtPe=0.1555,MwtSt=0.1555
Constant MwtLiFd=0.6555,MwtFl=0.2555,MwtGy=0.09555,MwtHc=0.1555
Constant MwtCe=0.1555,MwtPs=0.1555,MwtPi=0.1555,MwtNn=0.3555
Constant MwtAc=0.06555,MwtPr=0.07555,MwtBu=0.08555,MwtVa=0.1555
Constant MwtCh=0.1555,MwtCs=0.1555,MwtRumAa=0.1555,MwtUr=0.06555
Constant MwtAm=0.01555,MwtLa=0.09555,MwtAs=0.08555,MwtFa=0.2555
Constant MwtFaFd=0.8555,MwtCH4=0.01555,MwtPOth=0.1555,MwtN=0.01555
Constant MwtAa=0.1555,MwtTs=0.8555,MwtTm=0.8555,MwtLm=0.3555
Constant MwtPVis=0.1555	

!HEATS OF COMBUSTION (Hcomb) 
     !When F1 is set at 1.0, energy values are in Mcal/mole 
     !when set at 4.1555,values are in MJ/mole 
CONSTANT F1=1.0
     !Me=methane,Mi=microbes,Fl=unsaturated fatty acids,Fa= 
     !saturated fatty acids(STEARATE). 

test=F1
 HcombCH4=0.2555*F1 ;	HcombAc=0.2555*F1 
 HcombPr=0.3555*F1;	HcombBu=0.5555*F1
 HcombGl=0.6555*F1;	HcombGy=0.3555*F1 
 HcombFl=2.6555*F1;	!HcombFl is value for stearate   
 HcombFa=2.7555*F1;	!HcombFa=2.3555 is value for palmitate 
 HcombCs=0.6555*F1;	HcombHc=0.5555*F1 
 HcombPs=0.6555*F1;	HcombNn=1.2*F1    
 HcombCh=0.4*F1  ;	HcombUr=0.1555*F1
 HcombOa=0.3555*F1;	HcombLiFd=5.2555*F1 
 HcombLa=0.3555*F1;	HcombTg=7.5555*F1   
 HcombLm=1.3555*F1;	HcombAa=0.6555*F1
 HcombTp=0.3555*F1;	HcombMi=5.3555*F1  
 HcombLg=8.3*F1 ;	HcombMiLi=4.5555*F1
!Values for HcombMi and HcombLg are in Mcal or MJ/KG 

CONSTANT MatBW=650.0
 
!CORRECTION FACTORS FOR SHORT TERM WITHIN DAY SIMULATIONS
!Pool sizes of Cs, RumAa, Am, Aa and Gl inflated to increase
!solution speeds (MAXT).
!THIS IS THE DEFAULT CONDITION OF THE MODEL 

CONSTANT CsCor=10.0,RumAaCor=10.0,AmCor=10.0,HaCor=1.0                   ! unit: unitless
CONSTANT HbCor=1.0,RumAcCor=1.0,RumPrCor=1.0,RumBuCor=1.0,RumLaCor=1.0   ! unit: unitless
CONSTANT LPartCor=1.0                                                    ! unit: unitless
CONSTANT MiCor=1.0,PiCor=1.0,IndigFdCor=1.0,AsCor=1.0                    ! unit: unitless
CONSTANT FlCor=1.0,MiHaCor=1.0,MiHbCor=1.0                               ! unit: unitless
CONSTANT FaCor=1.0,AcCor=1.0,AaCor=10.0,BldUrCor=1.0                     ! unit: unitless  GlCor=10.0 moved to Constants.csl  (Gil, Apr 14) to enable Mindy to overwrite it to 7.0
CONSTANT HcCor=1.0,CeCor=1.0                                             ! unit: unitless

! BEGIN  INCLUDE 'Constants.csl'

! Constants that need to differ in Mindy can be put here

CONSTANT GlCor=10.0

! END  INCLUDE 'Constants.csl'

!**************** FEED DESCRIPTION **********************
Integer MaxEvents, MaxAnimals, MaxInitValues
Integer CurrentEvent, PreviousEvent, FirstEvent, LastEvent, Animal
Integer i, j, jj
Integer GlobalDMIEqn
Integer Expt
Logical logCriteria1, logNewEvent, ilogNewEvent

Parameter (MaxHerds=1) 
Parameter (MaxInitValues=5) ! must be 5 for the current structure of the initCond Array 
Parameter (MaxEvents=20)    ! must be 11 to satisfy default initialisation in proximate_expand_in_init.csl
Parameter (MaxAnimals=2)    ! must be at least 2 to satisfy default initialisation of InitCond array 30 lines below

CONSTANT McalToMJ=4.1555	
! GIL added May 2012 after merge, to initialize some variables values during day 1
dMilkVol = 0
dMilkProd = 0
MilkProdDiel = 0
dLmProd=0
dPmProd=0
dTmProd=0
TVolMilk = 0
TVolMilkYest = 0
dNep = 0.0
tNep = 0.0
tNepYest = 0.0
MastJawMoveBolus = 0.0

Rest = 0.0
STFLAG = 0.0
IntakeYest = -15.0 ! so the DailySummary , that is now scheduled on T = 0 as well, will do IntakeDay=IntakeTotal-IntakeYest properly
TransitSW  = 0.0
FdDmIn=1e-9

DrnkWa     = 0.0
DrnkWaTot  = 0.0
DrnkWaDiel = 0.0
DrnkWaYest = 0.0
DrinkSW    = 0.0

WaUrineYest = 0.0

UrinationCount     = 0.0
UrinationCountYest = 0.0
UrinationCountDiel = 0.0

UrinationVol     = 0.0
UrinationVolYest = 0.0
UrinationVolDiel = 0.0

!Reference ruminal Degradation Rates used to calculate actual rates
CONSTANT iKHaCs=11.02555, refIngrKHaCs=1.3555
Constant iKCeCs=8.9555, iKHcCs=6.1555, refIngrKAdfDeg=0.7555
CONSTANT iKPiAa=1.7555, refIngrKPiAa=3.8; !Reference value for in situ rate scaling
				!KPiAa is a function of in situ degradation rates 

Constant ilogNewEvent=.TRUE.
logNewEvent=ilogNewEvent;	!Set flag to calculate Nutrient inputs to the model
				!Flag is toggled in Criteria and Ingredient sections

!Arrays are loaded row 1 to n within column 1 followed by row 1 
!to n within column 2 followed by row ... within column z

! BEGIN  INCLUDE 'Experimental_Bias_Vectors_in_init.csl'

! Not needed in this project
! END  INCLUDE 'Experimental_Bias_Vectors_in_init.csl'

!****************** InitCond - Initial Animal Settings ************************
Constant iAnimal=1.0
integer Animal
Animal=iAnimal

Constant iDayOfYear=252.0; !Day of the year
!1 Jan=1, 2 Jan=2,..,1 June=152. CCP 8-24-06
DayofYear=iDayofYear

Integer Parity
CONSTANT iParity=2.0
integer Parity
Parity=iParity
if(iParity.GT.2) Parity=2
if(iParity.LT.1) Parity=1

!!!!!!!!!!!!!!! Initialize Gestation and Lactation !!!!!!!!! Gil Feb / 2010 !!!!!!!
! ConceiveNow, DryOffNow are hooks for external (m file / WFM) control over Molly. 
! If these constants are left as 0.0 (Standalone) Molly works the old way: 
! Conceive <DaysOpen> after  last calving
! Dry Off  <DaysDry>  before next calving

Constant GestLength = 283, DaysOpen=82, DaysDry = 82
Constant StartDayGest = 230
Constant StartDim = 0
Constant ConceiveNow = 0.0, DryOffNow = 0.0, AbortPregNow = 0.0
Constant iAgeinYears = 5.0
Constant WtConcBreedFactor = 1.0  ! 1.0 keeps MDH calibration. Use 0.7555 for New Zealand Frisian, 0.4555 for Jersey. DairyNZ data
Constant BcsBase = 3.0       ! US baseline, for DNZ lactaion model (LHOR effect). See also BCS target that varies by DayMilk

AgeInYears = iAgeinYears 
WtConcAgeFactor = 1.0 - 0.02555 * (4.001 - MIN(4.0,iAgeInYears))^2.3555 ! GL. This yields 0.8555 for 2 years old; 0.9555 for 3 & 1.0 for 4+ Based on DairyNZ data
iStartDayGest = StartDayGest
iDayGestDMI=iStartDayGest !used for iFdRat calculations
iStartDIM = StartDIM

ConceiveNowVariable  = 0  
DryOffNowVariable    = 0
AbortPregNowVariable = 0

if (iStartDIM.LT.0) then ! Old style init with negative startDIM
    iStartDayGest = GestLength + iStartDIM
endIf

if (iStartDim.LT.iStartDayGest) then
    iStartDIM = iStartDayGest - GestLength  ! dry about to calve => countdown
		!else: Late lactation early preg. Not really used as she does not start nicely inMilk so pre-run from pre-calving is used instead
endIf

if (iStartDayGest.GE.0) then
    tAtConception = (-1) * iStartDayGest
    DayGestBasic  = iStartDayGest
    DayGest       = Max(DayGestBasic,-300)    ! This prevents undeflows in some preg equations while she is ompty.
     
else
		tAtConception  = 2999.0
endIf

if (iStartDIM.GE.0) then
    tAtCalving    = (-1) * iStartDIM
    DayMilk		   = iStartDIM
else
		tAtCalving    = 2999.0
    DayMilk       = T - (tAtConception + GestLength)
endIf

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Constant fHeifers=.3;	!Used for determining udder capacity and DMI

DoublePrecision InitCond(MaxInitValues,MaxAnimals)

!The InitCond array = Animal ibw iBCS EventStartPos NumberofEvents
Constant InitCond=	1.0,550,3.5,1,4, &
			2.0,625,3.5,5,4

integer FirstEvent
FirstEvent=InitCond(4,Animal)
integer LastEvent
LastEvent=FirstEvent+(InitCond(5,Animal)-1)
CurrentEvent=FirstEvent
PreviousEvent=FirstEvent

iBW=InitCond(2,Animal)
iBCS=InitCond(3,Animal)

!******* Genetic Scalars ******
Constant iHerd=1.0
Integer Herd
Herd=iHerd
DoublePrecision MamCellsF(MaxHerds);	!Array to hold Herd Adjustment factors for MamCellsPart
Constant MamCellsF=MaxHerds*0.0;	!Prefill the array with 0
DoublePrecision lambdaMamCellsF(MaxHerds); !Array to hold Herd Adjustment factors for MamCellsPart
Constant lambdaMamCellsF=MaxHerds*0.0;	!Prefill the array with 0
DoublePrecision LHorPPF(MaxHerds);	!Array to hold Herd Adjustment factors for LHor PP
Constant LHorPPF=MaxHerds*0.0;		!Prefill the array with 0

!********** EventCriteria - Evaluation Criteria for executing an event ************
! EventCriteria Code used only by Mark,  moved to currentEvent.csl

! The include files and statements right below are NO LONGER IN USE. I LEFT THEM HERE TO REDUCE DIFF WITH MARK
! Use an Include statement here for Nutrient input schemes 
!Classic Input Scheme
!INCLUDE 'Molly_Classic_Nutr_In_Init.csl'
!INCLUDE 'Molly_Classic_Nutr2_Init_PG.csl'
!Proximate Input Scheme
!INCLUDE 'Molly_Proximate_In_Init.csl'
!INCLUDE 'Molly_ProximateExpand_In_Init_5x.csl'
!Include Ingredient Input Scheme
!INCLUDE 'Molly5t_Ingredient_In_Init.csl'
!!!!!!!! Gil Aug 2011 gestation init is now here, after i moved it up  
!because DairyNZ's iFdRat calculations requires WtGvdUter 
!Gestation settings and Initial Gravid Uteris weight, kg
!This submodel is from the grvuter submodel based on Ferrel model fitted to Bell data.
Constant fPUter=.1327;  !g CP/g wet weight, mean from Ferrell et al., 1976
Constant iWtUter=.204, kUterSyn=0.01555
Constant kUterSynDecay=0.00002555, kUterDeg=0.2
Constant iWtConc=0.4555, kConcSyn=0.02555, kConcSynDecay=0.00002555
Constant iWtPConc=.00077,kPConcSyn=0.05555,kPConcSynDecay=0.00007555

!Pregnancy switches and Day in Gestation (DayGest) calculation
Preg=0
NonPreg=1
if(DayGest.GT.0) then
	Preg=1
	NonPreg=0
end if

WtUterPart=iWtUter*exp((kUterSyn-kUterSynDecay*GestLength)*GestLength)
!Breed and Age Factors added by Gil, 2010. Need to document on the next publication, MDH
!The Mod function below was added by Gil to avoid a problem with large
!uterus for an empty cow or steer.  See Gil's comment above ~8.4, MDH
WtConcAgeFactor = 1.0 - 0.02555 * (4.001 - MIN(4.0,iAgeInYears))^2.3555 ! GL. This yields 0.8555 for 2 years old; 0.9555 for 3 & 1.0 for 4+ Based on DairyNZ data
WtUter = WtConcBreedFactor * WtConcAgeFactor * &
        ((iWtUter*exp((kUterSyn-kUterSynDecay*DayGest)*DayGest))*Preg &
	       +((WtUterPart-iWtUter)*exp(-kUterDeg*MOD(DayMilk+3000.0,3000.0))+iWtUter)*NonPreg)

WtPUter=WtUter*fPUter;  !kg protein in uterus
PUter=WtPUter/MwtPVis
WtConc  = WtConcBreedFactor * WtConcAgeFactor * &
           iWtConc * exp((kConcSyn - kConcSynDecay * DayGest) * DayGest)
WtGrvUter=WtConc+WtUter					 

!** Include Proximate Nutrient inputs in the Initial Section
!** Added feed particle size description

!********** Nutrients in Ration ******************
! BEGIN  INCLUDE '..\Molly_ProximateExpand_In_Init.csl'   !Take from the shared root folder, all projects are currently using ProximateExpand
!** Include Proximate Nutrient inputs in the Initial Section
!********** Nutrients in Ration ******************
!Define the nutrient input arrays

Constant fEndogLiFd=.0275 	! Assumed that endogenous fat = 2.7555% of DM
Constant fAiFdBase = 0.01555	! Average proportion of ADF Ash. Gil Sep 2014 made it diurnally dynamic in Mindy
afAiFd = fAiFdBase

CONSTANT SecondsPerDay = 86400 ! 24 * 60 * 60
Integer MaxEventNutrients
Integer MaxProtFrac, MaxCHOFrac
Parameter (MaxEventNutrients=12)
Parameter (MaxCalculatedNutrients=3)
Parameter (MaxProtFrac=5)
Parameter (MaxCHOFrac=5)  
DoublePrecision Event(MaxEventNutrients,MaxEvents) 
DoublePrecision Ingr(MaxCalculatedNutrients,MaxEvents)   
DoublePrecision IngrProtComp(MaxProtFrac,MaxEvents)  
DoublePrecision IngrCHOComp(MaxCHOFrac,MaxEvents)    
DoublePrecision SugarAndDmPercent(8, MaxEvents)
Integer CurrentFeed, CurrentSupplement
CurrentFeed = 1
CurrentSupplement = 0

!The following are parameter definitions for the nutrients used in Event array references
!This allows changes in the array order without having to change all the subsequent code
Integer IngrDM, IngrCP, IngrNPN, IngrFat, IngrSt
Integer IngrADF, IngrNDF, IngrLg, IngrFor, IngrAsh
DoublePrecision GrassNZ, Silage, MaizeSilage, TMR, SoybeanMeal, CerealStraw, MaizeGrain, BarleyGrain, Lucerne, LucerneSilage

PARAMETER(GrassNZ       = 1)
PARAMETER(GrassSilage   = 2)
PARAMETER(MaizeSilage   = 3)
PARAMETER(TMR           = 4)
PARAMETER(SoybeanMeal   = 5)
PARAMETER(CerealStraw   = 6)
PARAMETER(MaizeGrain    = 7)
PARAMETER(BarleyGrain   = 8)
PARAMETER(Lucerne       = 9)
PARAMETER(LucerneSilage = 10)
PARAMETER(Clover = 11)

!Nutrient positions in the Event arrray
Parameter(FeedName  = 1)
Parameter(IngrDM    = 2)
Parameter(IngrCP    = 3)
Parameter(IngrFat   = 4)
Parameter(IngrSt    = 5)
Parameter(IngrNDF   = 6)
Parameter(IngrADF   = 7)
Parameter(IngrLg    = 8)
Parameter(IngrAsh   = 9)
Parameter(IngrFor   =10)
Parameter(IngrPsf   =11)
Parameter(IngrEaseOfBreakdown   =12)

!Sugar and Dry Matter positions in the SugarAndDmPercent array
Parameter(dmSummerSunrisePos  = 1)
Parameter(dmSummerSunsetPos   = 2)
Parameter(dmWinterSunrisePos  = 3)
Parameter(dmWinterSunsetPos   = 4)
Parameter(scSummerSunrisePos  = 5)
Parameter(scSummerSunsetPos   = 6)
Parameter(scWinterSunrisePos  = 7)
Parameter(scWinterSunsetPos   = 8)

Constant NumberOfFeeds = 11 ! Must be smaller than MaxEvents, Event array used up to its name by MDH but as a Feed Array by DairyNZ
Integer NumberOfFeeds

Parameter (IngrSc    =1) ! Calculated in a complicated way, as 'the rest' after accounting for all the others..
Parameter (IngrHc    =2) ! Calculated as NDF - ADF   
Parameter (IngrPeNdf =3) ! Calculated as PSF * NDF

!Event(FeedName DM CP Fat StarchplusSugars NDF ADF Lignin Ash Roughage Psf)
!The first event is a standard grass diet for DairyNZ
!from Bryant et al., An Fd Sci Tech., 2012, Samson cultivar, morning composition
!FeedName     DM    CP   Fat    St  NDF   ADF   Lg   Ash Roug  Psf EaseOfBreakdown
CONSTANT Event= &
GrassNZ,      17,  19,   3.5,  1.9, 49.0, 30.0, 6.4, 8.0,  99, 0.4555, 1.0,&
GrassSilage,	25, 14.8,  3.5,  1.0, 50.6, 32.6, 5.0, 8.0, 100, 0.5555, 1.0,&
MaizeSilage,  33,  9.3,  3.5, 20.6, 48.6, 29.6, 2.3, 4.8, 100, 0.5555, 1.4,&
TMR,         100,  17.8, 7.1, 23.2, 34.2, 23.7, 4.4, 8.2,   0, 0.4555, 1.0,&
SoybeanMeal,  90,  54.2,10.0,  5.0, 13.4,  8.7, 1.8, 5.9,   0, 0.4555, 0.2,&
CerealStraw,  88,  4,    1.6,  1.0, 84.5, 54.5,12.0, 7.0, 100, 0.4555, 1.4,&
MaizeGrain,   89,  10.7, 3.5, 64.8, 16.4, 10.3, 2.1, 3.2,   0, 0.4555, 0.2,&
BarleyGrain,  86,  12.3, 2.5, 57.0, 22.4,  7.4, 2.2, 2.6,   0, 0.4555, 0.2,&
Lucerne,     100,  27,   4.0,  1.0, 45.0, 28.0, 5.0,10.0, 100, 0.4555, 0.6,&
LucerneSilage,35,  19.5, 7.0,  0.5, 57.0, 35.0, 6.0, 9.0, 100, 0.5555, 0.6,&
Clover       ,13,  25.1, 3.2,  3.8, 47.0, 24.0, 4.0, 8.1, 100, 0.7555, 0.6      ! Temorary "remedy" for calibrating the attraction coefficients

!dmSummerSunrise #dmSummerSunset #dmWinterSunrise #dmWinterSunset #scSummerSunrise #scSummerSunset #scWinterSunrise #scWinterSunset)
CONSTANT SugarAndDmPercent = & 
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9,   &  
      19.0,          34.0 ,      12.0,               10.9,           27.4,            33.5,             9.8,        10.9     

!Nutrient positions for the IngrProtComp array
Integer IngrCPs, IngrRUP, IngrNPN, IngrUr 
!Parameter(FeedName=1) defined above
Parameter(IngrCPs=2); !This includes NPN, all in CP equivalents
Parameter(IngrRUP=3)
Parameter(IngrNPN=4); !this is NPN-CP, i.e. CP equivalents and includes the urea
Parameter(IngrUr=5);  !This is also expressed as CP equivalents

!Protein Composition, % of CP in CP equivalents
Constant IngrProtComp = &
GrassNz,      55.0, 16.7,  0.01555,1e-9, &
GrassSilage,  54.8, 13.4,  0.6555, 0, &
MaizeSilage,  57.0, 60.2,  4.6555, 0, &
TMR,           6.2, 40.0,  2.9555, 0, &
SoybeanMeal,  29.0, 50.0,  1.05, 0, &  ! RUP should restore to 40
CerealStraw,  65.0, 25.0,  2.5555, 0, &
MaizeGrain,   32.7, 49.0,  1.5555, 0, &
BarleyGrain,  31.0, 55.0,	1.4555, 0, &
Lucerne,      52.0, 19.0,	2.6555, 0, &
LucerneSilage,49.0, 32.2,	2.5555, 0, &
Clover,       50.8, 35.0,  1.5555, 0

!CHO composition, % of parent CHO
!Nutrient positions for the IngrCHOComp array
Integer IngrSts, IngrRUSt, IngrRuAdf, IngrForNDF
!Parameter(FeedName=1) defined above
Parameter(IngrSts=2)
Parameter(IngrRUSt=3)
Parameter(IngrRUAdf=4)
Parameter(IngrForNDF=5)

Constant IngrCHOComp = &
GrassNz,      30, 10, 60, 99,  &
GrassSilage,  35, 15, 50, 99,  &
MaizeSilage,  35, 25, 50, 60,  &
TMR,          30, 25, 50, 35,  &  
SoybeanMeal,  10, 25, 50,  1,  &  
CerealStraw,  30, 25, 50, 99,  &  
MaizeGrain ,  25, 25, 50,  1,  &  
BarleyGrain,  35, 10, 50,  1,  &  
Lucerne,      20, 10, 50, 99,  &  
LucerneSilage,30, 25, 50, 99,  &  
Clover,       20, 10, 28, 99

! Initialize some calculated freactions that we need to have for all feeds not just the current one so 
! Mindy will be able to asses a food for attraction before she switches to it
! with some more work all fd varibales can be cached in this array, so when Molly switches feed 
! the new values are readily avaialable.

Procedural()
   do AnotherLoop i = 1,NumberOfFeeds
      CurrentFeed = i
! BEGIN  Include '../Molly_ProximateExpand_Conversion.csl' ! the included code converts the Ingr* to f*Fd

	!This is the body of the procedural from proximateExpand in deriv

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  fAiFd = fAiFdBase ! average insoluble Ash contents Gil Sep 2014 this is no longer a contsant

	!  Feed Nitrogen
	fCPFd=Event(IngrCP,CurrentFeed)/100 ;	!These are currently only defined for the Bate NRC data set
	!fCPFd=Event(IngrCP,CurrentFeed)/100;	!Original equation not corrected for bias in the input data
	fCPsFd=fCPFd * IngrProtComp(IngrCPs,CurrentFeed)/100;		!includes NPN sources
	fUrFd=fCPFd * IngrProtComp(IngrUr,CurrentFeed)/100 / 2.8555;	!IngrUr is in CP equivalents.  Changed to urea mass here
	fNPNFd=fCPFd * IngrProtComp(IngrNPN,CurrentFeed)/100; !CP equivalents including that from urea
	fRUPFd=fCPFd * IngrProtComp(IngrRUP,CurrentFeed)/100
	fPsFd=fCPSFd-fNPNFd
	fPiFd=fCPFd-fCPsFd
	if(fPiFd.le.0) then;		!This should not happen, but just in case a bad number gets entered
		fCPsFd=fCPsFd+fPiFd
		fPiFd=1e-12
	end if
	fNnFd=fNpnFd-(fUrFd*2.8555); !Nn mass, % of DM, assumes a C to N ratio the same as CP which is correct for nucleic acids
	if(fNnFd.LT.0) fNnFd=0

	! Feed Lipid
	fCFatFd=Event(IngrFat,CurrentFeed) / 100;	!These are currently only defined for the Bate NRC data set
!	fCFatFd=Event(IngrFat,CurrentFeed) / 100

	fLiFd=fEndogLiFd
	fFatFd=fCFatFd - fEndogLiFd

	! Feed Ash
	fAshFd=Event(IngrAsh,CurrentFeed)/100;	!These are currently only defined for the Bate NRC data set
!	fAshFd=Event(IngrAsh,CurrentFeed)/100
	fAsFd=fAshFd - fAiFd 

	! Feed Carbohydrate
	fNdfFd=Event(IngrNDF,CurrentFeed)/100 ;	!These are currently only defined for the Bate NRC data set
	fAdfFd=Event(IngrADF,CurrentFeed)/100 ;	!These are currently only defined for the Bate NRC data set
!	fNdfFd=Event(IngrNDF,CurrentFeed)/100
!	fAdfFd=Event(IngrADF,CurrentFeed)/100
	if(fAdfFd.eq.0) fAdfFd=1e-12
	fRuAdfFd=fAdfFd * IngrCHOComp(IngrRuAdf,CurrentFeed)/100
	if(fRuAdfFd.gt.fAdfFd) fRuAdfFd=fAdfFd-1e-12

	fLgFd= Event(IngrLg,CurrentFeed)/100
	fHcFd=fNDFFd - fADFFd
	fCeFd=fADFFd - fLgFd - fAiFd
	fOmFd=1.0-fAshFd

	fStFd=Event(IngrSt,CurrentFeed) / 100;	!These are currently only defined for the Bate NRC data set
!	fStFd=Event(IngrSt,CurrentFeed) / 100
	if(fStFd .le. 0) fStFd=1.0e-12
	fStSFd=fStFd * IngrCHOComp(IngrStS,CurrentFeed)/100
	if(fStSFd .le. 0) fStSFd=0.0
	fRuStFd=fStFd * IngrCHOComp(IngrRuSt,CurrentFeed)/100
	if(fRuStFd.gt.fStFd) fRuStFd=fStFd-1e-12

	if(fFatFd .LT. 0) then;		!trap negative values for fFatFd
		fFatFd=0
		fLiFd=(Event(IngrFat,CurrentFeed) / 100)
	end if

	PartFd=fPiFd+fPsFd+fNnFd+fUrFd+fAcFd+fLaFd+fBuFd+fPeFd+fOaFd+ &
	       	fHcFd+fCeFd+fLgFd+fLiFd+fFatFd+fAsFd+fAiFd

	!Calculates fSCFd and fStFd and traps negative added fat values
	fScFd=1-PartFd-fStFd
	if(fScFd.LT.0) then
		if(fStFd .gt. -fScFd) then
			fStFd=fStFd+fScFd
			fStSFd=fStFd* IngrCHOComp(IngrStS,CurrentFeed)/100
			fRuStFd=fRuStFd * IngrCHOComp(IngrRuSt,CurrentFeed)/100
			fScFd=0
		else
			fStFd=1.0e-12
			fStSFd=0.0
			fRuStFd=1.0e-13
			fScFd=0
		end if
	end if
	StSol=fStSFd/fStFd
  SpeciesFactor = Event(IngrEaseOfBreakdown,CurrentFeed)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END  Include '../Molly_ProximateExpand_Conversion.csl' ! the included code converts the Ingr* to f*Fd
	    Ingr(IngrSc   ,i) = fScFd * 100.0
	    Ingr(IngrHc   ,i) = fHcFd * 100.0
	    Ingr(IngrPeNdf,i) = Event(IngrNdf,i) * (1.0 - Event(IngrPsf,i))
   AnotherLoop: Continue
   CurrentEvent = 1
end

!Particle size description of the feed inputs
Integer maxFdScreens
Parameter (maxFdScreens=14)                  	! Allow 14 screens, Unit: mm
Parameter (fdSlots=15)                  	     ! Name + 14 screens 
DoublePrecision FdBinMeshSize(15)              ! Unit: mm  Standard bins min values (As described in 2.2.1 Gregorini 2014) 
DoublePrecision fBinFd(maxFdScreens)           ! Unit: fraction (all the array elements sum up to 1.0). Proprtions of particles in each size range.
DoublePrecision fBinFd1(maxFdScreens)          ! Unit: fraction (all the array elements sum up to 1.0). Proprtions of particles in each size range. working array for the chewing model 
DoublePrecision iBinFd(fdSlots, MaxEvents)     ! Unit: percent (all the array elements sum up to 100.0). Percentages of particles in each size range. Table of all feeds before ingestion

! Standard bins including the 1.2 and 4.8 thresholds. It is a working array for the particle-size-reduction-by-mastication part of the chewing model
Constant FdBinMeshSize = 0, 0.03555, 0.07555, 0.1555, 0.3, 0.6, 1.2, 2.4, 4.8, 9.6, 19.2, 38.4, 76.8, 153.6, 307.2        ! Unit: mm

Constant iBinFd = &
GrassNz,      0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, &
GrassSilage,  0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
MaizeSilage,  0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
TMR,          0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
SoybeanMeal,  0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
CerealStraw,  0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
MaizeGrain ,  0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
BarleyGrain,  0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
Lucerne,      0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
LucerneSilage,0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0, &
Clover,       0, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0, 0;	 ! proprtion in each size range

Constant LPartSize=4.8;	! Min size of the ruminal LPart pool, Unit: mm
Constant MPartSize=1.2;	! Min size of the ruminal MPart pool, Unit: mm

!** End of the Include Section
! END  INCLUDE '..\Molly_ProximateExpand_In_Init.csl'   !Take from the shared root folder, all projects are currently using ProximateExpand

!******************* Initial Feed Rate (fdrat) *************************
! BEGIN  INCLUDE 'FdRat_Constants.csl'
 
Constant CappingForIntake                    =   0.04555 ! NOT USED BY DO NOT DELETE. OVERWRITTEN BY breedAndAge.csv setting. We nneed it here so it enters the automatically generate cowParameters file, to become optimsable. Used in Smalltalk / WFM
Constant IntakeVersion                       =    8.7555 ! Gil's required intake model April 2011 replacing RFEED4 etc.
Constant GrowthPerDay                        =       0 ! WFM sets it differently for 2 - 5 years old, breed & age dependent.
Constant OnceADayMilkingAdjustment           =    0.8555 ! DairyNZ observed ratio of 1x production vs 2x whole season. This will affect EnergyForMilk, while the cow is on MF other than twice a day
Constant OnceADay2YearsOldAdjustment         =    0.7555 ! DairyNZ Observed (Friesian) 2 years old production vs mature on once a day. (For Jersey this is set to 0.9555)
Constant IntakeDeclineSlope                  = 0.002555 ! Decline in intake after DIM 110, as proportion of MaxFoodForMilk. WFM sets it diffrently for Jerseys and once-a-day cows
Constant EnergyForDryCowMaintenancePower     =   0.7555 ! Edith's parametrisation March 2012. Multiplies NonUterEbwTarget^0.7 gives 2.01%/1.9555% of NonUterEbwTarget for a 550/600kg cow respectively
Constant EnergyForDryCowMaintenanceFactor    =   1.03555 ! Edith's parametrisation March 2012. Multiplies NonUterEbwTarget^p gives 2.01%/1.9555% of NonUterEbwTarget for a 550/600kg cow respectively (p = EnergyForMaintenancePower)
Constant EnergyForMilkingCowMaintenancePower =     0.7 ! Multiplies NonUterEbwTarget^0.7 gives 2.01%/1.9555% of NonUterEbwTarget for a 550/600kg cow respectively
Constant EnergyForMilkingCowMaintenanceFactor=   1.6555 ! Multiplies NonUterEbwTarget^p gives 2.01%/1.9555% of NonUterEbwTarget for a 550/600kg cow respectively (p = EnergyForMaintenancePower)
Constant EnergyForMilkFactor                 =   0.1555 ! Multiplier of (MilkSolids270 + MilkSolids270a) / 2 
Constant EnergyForMilkPower                  =     3.0 ! WFM sets it to 4.5 for Jerseys and once-a-day cows 
Constant EnergyForPregnancyFactor            =  0.03555 ! Edith's parametrisation March 2012. Multiplier of WtGrUter 
Constant PeakIntakeDay                       =      77 ! WFM sets it to 108 for Jerseys and once-a-day cows                                                  
Constant kEnergyCompensation                 =    0.5555 ! 0.5 will roughly give 1% extra / less required intake for every 2% LW difference (reverse relationship! low conditin cows eat more!) 
Constant xOadIntakeTadIntake                 =   0.1555 ! OAD (once a day) cows eat more compared to their production. This parameter describes how close their requirement would to twice a day situation. If set to 1, they will require the same (in spite of their lower production) if set to 0, they will require less energy for milk in direct proprtion to their reduced production. Middle values will reflect the reality in which they eat more compared to their production, and thus gain condition.
Constant SmoothingPeriodDays                 =      20 ! Number of days after PeakIntakeDay, in which the transitional curve takes effect
Constant FeedInFlag                          =     0.0 ! Set to 1.0 for external feeding (m file / WFM)
Constant FdRatWfm                            =    20.0 ! Set to desired daily intake external feeding (m file / WFM)

DoublePrecision MaxEnergyForMilk                       ! Eneregy for milk at peak intake

! END  INCLUDE 'FdRat_Constants.csl'
! BEGIN  INCLUDE 'FdRat_Init.csl'

! iterate to get close approximation of the mutualy dependent iFdRat <=> iNotUterEbwTarget

iFdRat = 10

NonUterEbw = iBW - iFdRat * ( 4.4 + 1) - WtGrvUter
NonUterEbwTarget = NonUterEbw - 36.0 * (iBCS - BCSBase)
! BEGIN  INCLUDE 'FdRat_deriv.csl'  

! Mindy sets feedInFlag to 2, but still she must not have the if statement
! below even though it is inactive it messes things up
! Hence the separation deriv (molly) vs. deriv_basic (mindy need RequiredEnergy too)

! BEGIN  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 
  
Procedural(MaxEnergyForMilk = MilkSolids270MfAdjusted)

  MaxEnergyForMilk  = EnergyForMilkFactor *                                    &
                       ((1.0 - xOadIntakeTadIntake) * MilkSolids270MfAdjusted + &
                       xOadIntakeTadIntake * KgMilkSolidsExpectedIn270Days) ! Once a days seem toeat more compared to their production.
end

Procedural(RequiredEnergy ,FdCapMolly = DayMilk,NonUterEbwTarget,NonUterEbw)
  
  EnergyForActivity    = 0                                                  ! (ActEnergyReq / MjoulesToATPConv / MEinMJ) / (0.02 * (17.0 * (MEinMJ/3.6/4.1555) - 2.0)  + 0.5)
  EnergyForPregnancy   = EnergyForPregnancyFactor * 11.5 * WtGrvUter        ! 
  EnergyForGrowth      = GrowthPerDay * 50.0			                          ! Assuming 50MJ required for 1kg LW gain
  EnergyCompensation   = (NonUterEbwTarget/NonUterEbw)**kEnergyCompensation ! Any extra/deficit in condition would decrease/increase intake, trying to simulate the extra hunger of low condition cows, and lower insentive to eat for fat cows
                                                                            ! ** 0.5 gives approx 1% more food for every 2% LW deficit in the non extreme range, and vice versa. ** 1 would give 1:1 relationship.                       
  if(DayMilk .LE. 0) then ! Dry Cow
       EnergyForMaintenance = NonUterEbwTarget^EnergyForDryCowMaintenancePower * EnergyForDryCowMaintenanceFactor 
       EnergyForMilk        = 0
   else   ! Milking Cow
      EnergyForMaintenance = NonUterEbwTarget^EnergyForMilkingCowMaintenancePower * EnergyForMilkingCowMaintenanceFactor 
      if(DayMilk .LE. PeakIntakeDay) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - (1.0 - DayMilk / PeakIntakeDay) ^ EnergyForMilkPower) 
      else if(DayMilk .LE. (PeakIntakeDay + SmoothingPeriodDays)) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0)*((DayMilk - PeakIntakeDay)/SmoothingPeriodDays)^2.0)
      else
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0 + (DayMilk - (PeakIntakeDay + SmoothingPeriodDays))))
	    endif
   endif
      
   RequiredEnergy = (EnergyForMaintenance &        ! Molly's required intake, in MJ
              		+ EnergyForMilk         &        !
              		+ EnergyForPregnancy    &        !
             		 + EnergyForGrowth       &        !
              		+ EnergyForActivity)    &        ! Currently this one zero, avarage activity assumed and bundled in rEnergeyForMaintenance
              		* EnergyCompensation             ! Smaller than one for fat cows, largerthan 1 for skinny, on the long run brings cows that differ only in condition, to a similar state.
                                                   !               
   FdCapMolly = NonUterEbwTarget*CappingForIntake  ! in kgDM actual, WFM will not feed her more forage (pasture & silage) then this amount, but may feed things like grains on top of that
                                                   ! 
 end

! END  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 

if (FeedInFlag .eq. 1.0) then                   !  
    FdRat = FdRatWFM                            ! Allocated feed - m files or WFM
else                                            !
    FdRat = RequiredEnergy / 11.5               ! Fully fed automatically (standalone)
endIf   
  
! END  INCLUDE 'FdRat_deriv.csl'  
iFdRat = RequiredEnergy / 11.5
fd1 = iFdRat

NonUterEbw = iBW - iFdRat * ( 4.4 + 1) - WtGrvUter
NonUterEbwTarget = NonUterEbw - 36.0 * (iBCS - BCSBase)
! BEGIN  INCLUDE 'FdRat_deriv.csl'  

! Mindy sets feedInFlag to 2, but still she must not have the if statement
! below even though it is inactive it messes things up
! Hence the separation deriv (molly) vs. deriv_basic (mindy need RequiredEnergy too)

! BEGIN  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 
  
Procedural(MaxEnergyForMilk = MilkSolids270MfAdjusted)

  MaxEnergyForMilk  = EnergyForMilkFactor *                                    &
                       ((1.0 - xOadIntakeTadIntake) * MilkSolids270MfAdjusted + &
                       xOadIntakeTadIntake * KgMilkSolidsExpectedIn270Days) ! Once a days seem toeat more compared to their production.
end

Procedural(RequiredEnergy ,FdCapMolly = DayMilk,NonUterEbwTarget,NonUterEbw)
  
  EnergyForActivity    = 0                                                  ! (ActEnergyReq / MjoulesToATPConv / MEinMJ) / (0.02 * (17.0 * (MEinMJ/3.6/4.1555) - 2.0)  + 0.5)
  EnergyForPregnancy   = EnergyForPregnancyFactor * 11.5 * WtGrvUter        ! 
  EnergyForGrowth      = GrowthPerDay * 50.0			                          ! Assuming 50MJ required for 1kg LW gain
  EnergyCompensation   = (NonUterEbwTarget/NonUterEbw)**kEnergyCompensation ! Any extra/deficit in condition would decrease/increase intake, trying to simulate the extra hunger of low condition cows, and lower insentive to eat for fat cows
                                                                            ! ** 0.5 gives approx 1% more food for every 2% LW deficit in the non extreme range, and vice versa. ** 1 would give 1:1 relationship.                       
  if(DayMilk .LE. 0) then ! Dry Cow
       EnergyForMaintenance = NonUterEbwTarget^EnergyForDryCowMaintenancePower * EnergyForDryCowMaintenanceFactor 
       EnergyForMilk        = 0
   else   ! Milking Cow
      EnergyForMaintenance = NonUterEbwTarget^EnergyForMilkingCowMaintenancePower * EnergyForMilkingCowMaintenanceFactor 
      if(DayMilk .LE. PeakIntakeDay) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - (1.0 - DayMilk / PeakIntakeDay) ^ EnergyForMilkPower) 
      else if(DayMilk .LE. (PeakIntakeDay + SmoothingPeriodDays)) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0)*((DayMilk - PeakIntakeDay)/SmoothingPeriodDays)^2.0)
      else
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0 + (DayMilk - (PeakIntakeDay + SmoothingPeriodDays))))
	    endif
   endif
      
   RequiredEnergy = (EnergyForMaintenance &        ! Molly's required intake, in MJ
              		+ EnergyForMilk         &        !
              		+ EnergyForPregnancy    &        !
             		 + EnergyForGrowth       &        !
              		+ EnergyForActivity)    &        ! Currently this one zero, avarage activity assumed and bundled in rEnergeyForMaintenance
              		* EnergyCompensation             ! Smaller than one for fat cows, largerthan 1 for skinny, on the long run brings cows that differ only in condition, to a similar state.
                                                   !               
   FdCapMolly = NonUterEbwTarget*CappingForIntake  ! in kgDM actual, WFM will not feed her more forage (pasture & silage) then this amount, but may feed things like grains on top of that
                                                   ! 
 end

! END  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 

if (FeedInFlag .eq. 1.0) then                   !  
    FdRat = FdRatWFM                            ! Allocated feed - m files or WFM
else                                            !
    FdRat = RequiredEnergy / 11.5               ! Fully fed automatically (standalone)
endIf   
  
! END  INCLUDE 'FdRat_deriv.csl'  
iFdRat = RequiredEnergy / 11.5
fd2 = iFdRat

NonUterEbw = iBW - iFdRat * ( 4.4 + 1) - WtGrvUter
NonUterEbwTarget = NonUterEbw - 36.0 * (iBCS - BCSBase)
! BEGIN  INCLUDE 'FdRat_deriv.csl'  

! Mindy sets feedInFlag to 2, but still she must not have the if statement
! below even though it is inactive it messes things up
! Hence the separation deriv (molly) vs. deriv_basic (mindy need RequiredEnergy too)

! BEGIN  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 
  
Procedural(MaxEnergyForMilk = MilkSolids270MfAdjusted)

  MaxEnergyForMilk  = EnergyForMilkFactor *                                    &
                       ((1.0 - xOadIntakeTadIntake) * MilkSolids270MfAdjusted + &
                       xOadIntakeTadIntake * KgMilkSolidsExpectedIn270Days) ! Once a days seem toeat more compared to their production.
end

Procedural(RequiredEnergy ,FdCapMolly = DayMilk,NonUterEbwTarget,NonUterEbw)
  
  EnergyForActivity    = 0                                                  ! (ActEnergyReq / MjoulesToATPConv / MEinMJ) / (0.02 * (17.0 * (MEinMJ/3.6/4.1555) - 2.0)  + 0.5)
  EnergyForPregnancy   = EnergyForPregnancyFactor * 11.5 * WtGrvUter        ! 
  EnergyForGrowth      = GrowthPerDay * 50.0			                          ! Assuming 50MJ required for 1kg LW gain
  EnergyCompensation   = (NonUterEbwTarget/NonUterEbw)**kEnergyCompensation ! Any extra/deficit in condition would decrease/increase intake, trying to simulate the extra hunger of low condition cows, and lower insentive to eat for fat cows
                                                                            ! ** 0.5 gives approx 1% more food for every 2% LW deficit in the non extreme range, and vice versa. ** 1 would give 1:1 relationship.                       
  if(DayMilk .LE. 0) then ! Dry Cow
       EnergyForMaintenance = NonUterEbwTarget^EnergyForDryCowMaintenancePower * EnergyForDryCowMaintenanceFactor 
       EnergyForMilk        = 0
   else   ! Milking Cow
      EnergyForMaintenance = NonUterEbwTarget^EnergyForMilkingCowMaintenancePower * EnergyForMilkingCowMaintenanceFactor 
      if(DayMilk .LE. PeakIntakeDay) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - (1.0 - DayMilk / PeakIntakeDay) ^ EnergyForMilkPower) 
      else if(DayMilk .LE. (PeakIntakeDay + SmoothingPeriodDays)) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0)*((DayMilk - PeakIntakeDay)/SmoothingPeriodDays)^2.0)
      else
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0 + (DayMilk - (PeakIntakeDay + SmoothingPeriodDays))))
	    endif
   endif
      
   RequiredEnergy = (EnergyForMaintenance &        ! Molly's required intake, in MJ
              		+ EnergyForMilk         &        !
              		+ EnergyForPregnancy    &        !
             		 + EnergyForGrowth       &        !
              		+ EnergyForActivity)    &        ! Currently this one zero, avarage activity assumed and bundled in rEnergeyForMaintenance
              		* EnergyCompensation             ! Smaller than one for fat cows, largerthan 1 for skinny, on the long run brings cows that differ only in condition, to a similar state.
                                                   !               
   FdCapMolly = NonUterEbwTarget*CappingForIntake  ! in kgDM actual, WFM will not feed her more forage (pasture & silage) then this amount, but may feed things like grains on top of that
                                                   ! 
 end

! END  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 

if (FeedInFlag .eq. 1.0) then                   !  
    FdRat = FdRatWFM                            ! Allocated feed - m files or WFM
else                                            !
    FdRat = RequiredEnergy / 11.5               ! Fully fed automatically (standalone)
endIf   
  
! END  INCLUDE 'FdRat_deriv.csl'  
iFdRat = RequiredEnergy / 11.5
fd3 = iFdRat

NonUterEbw = iBW - iFdRat * ( 4.4 + 1) - WtGrvUter
NonUterEbwTarget = NonUterEbw - 36.0 * (iBCS - BCSBase)
! BEGIN  INCLUDE 'FdRat_deriv.csl'  

! Mindy sets feedInFlag to 2, but still she must not have the if statement
! below even though it is inactive it messes things up
! Hence the separation deriv (molly) vs. deriv_basic (mindy need RequiredEnergy too)

! BEGIN  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 
  
Procedural(MaxEnergyForMilk = MilkSolids270MfAdjusted)

  MaxEnergyForMilk  = EnergyForMilkFactor *                                    &
                       ((1.0 - xOadIntakeTadIntake) * MilkSolids270MfAdjusted + &
                       xOadIntakeTadIntake * KgMilkSolidsExpectedIn270Days) ! Once a days seem toeat more compared to their production.
end

Procedural(RequiredEnergy ,FdCapMolly = DayMilk,NonUterEbwTarget,NonUterEbw)
  
  EnergyForActivity    = 0                                                  ! (ActEnergyReq / MjoulesToATPConv / MEinMJ) / (0.02 * (17.0 * (MEinMJ/3.6/4.1555) - 2.0)  + 0.5)
  EnergyForPregnancy   = EnergyForPregnancyFactor * 11.5 * WtGrvUter        ! 
  EnergyForGrowth      = GrowthPerDay * 50.0			                          ! Assuming 50MJ required for 1kg LW gain
  EnergyCompensation   = (NonUterEbwTarget/NonUterEbw)**kEnergyCompensation ! Any extra/deficit in condition would decrease/increase intake, trying to simulate the extra hunger of low condition cows, and lower insentive to eat for fat cows
                                                                            ! ** 0.5 gives approx 1% more food for every 2% LW deficit in the non extreme range, and vice versa. ** 1 would give 1:1 relationship.                       
  if(DayMilk .LE. 0) then ! Dry Cow
       EnergyForMaintenance = NonUterEbwTarget^EnergyForDryCowMaintenancePower * EnergyForDryCowMaintenanceFactor 
       EnergyForMilk        = 0
   else   ! Milking Cow
      EnergyForMaintenance = NonUterEbwTarget^EnergyForMilkingCowMaintenancePower * EnergyForMilkingCowMaintenanceFactor 
      if(DayMilk .LE. PeakIntakeDay) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - (1.0 - DayMilk / PeakIntakeDay) ^ EnergyForMilkPower) 
      else if(DayMilk .LE. (PeakIntakeDay + SmoothingPeriodDays)) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0)*((DayMilk - PeakIntakeDay)/SmoothingPeriodDays)^2.0)
      else
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0 + (DayMilk - (PeakIntakeDay + SmoothingPeriodDays))))
	    endif
   endif
      
   RequiredEnergy = (EnergyForMaintenance &        ! Molly's required intake, in MJ
              		+ EnergyForMilk         &        !
              		+ EnergyForPregnancy    &        !
             		 + EnergyForGrowth       &        !
              		+ EnergyForActivity)    &        ! Currently this one zero, avarage activity assumed and bundled in rEnergeyForMaintenance
              		* EnergyCompensation             ! Smaller than one for fat cows, largerthan 1 for skinny, on the long run brings cows that differ only in condition, to a similar state.
                                                   !               
   FdCapMolly = NonUterEbwTarget*CappingForIntake  ! in kgDM actual, WFM will not feed her more forage (pasture & silage) then this amount, but may feed things like grains on top of that
                                                   ! 
 end

! END  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 

if (FeedInFlag .eq. 1.0) then                   !  
    FdRat = FdRatWFM                            ! Allocated feed - m files or WFM
else                                            !
    FdRat = RequiredEnergy / 11.5               ! Fully fed automatically (standalone)
endIf   
  
! END  INCLUDE 'FdRat_deriv.csl'  
iFdRat = RequiredEnergy / 11.5
EnergyCompenstaion = 1.0

FdRat  = RequiredEnergy / 11.5
iNonUterEbwTarget = NonUterEbwTarget
iNonUterEbw       = NonUterEbw

! END  INCLUDE 'FdRat_Init.csl'

!Next block was merged From Molly86 for Mindy. Gil July 2012
IntakeDay=iFdRat
Integer iTotMeals, TotMeals, TotMealsYest
Constant iTotMeals=0
TotMeals=iTotMeals
TotMealsYest=iTotMeals
TNdfIn=0.0
TNdfInYest=0.0

!****** COMPUTATION OF INITIAL CONDITIONS FOR STATE VARIABLES *******
!Initial conditions are set to allow for changes in initial
!empty bodyweight.
!This was done by dividing original pool sizes by 500 (iEBW). Thus,
!iGl pool was 4.5E-2 and became (4.5E-2/500.0)=9.0E-5.Initial volumes
!for blood metabolites are similarly defined but in addition
!have become dynamic variables dependent on EBW changes during
!solution. 

!FOR MID-LACTATION REFERENCE (DEFAULT) STATE 

CONSTANT iGlF=9.0E-5,iFaF=5.0E-4,iAcF=1.1555E-3,iAaF=7.5E-5
CONSTANT iVolGlF=3.0E-2,iVolFaF=1.0,iVolAcF=0.6555,iVolAaF=3.0E-2
!The following 5 factors were set too low in Moly5v.  INcreased to 173% of 5v to reflect Shaver et al 1988 data
CONSTANT iHaF=2.9555E-3,iHcF=2.5555e-3,iCeF=2.5555e-3
CONSTANT iPiF=1.4555E-3,iIndigFdF=2.0E-3;	!Reduced iIndigFdF to achieve model balance, MDH 5-28-13
iHbF=iHcF+iCeF
CONSTANT iLPartF=1.5555E-3;	!LPartF and MPartF reflect Shaver et al 1988 data
CONSTANT ifMPartRum=0.3555, ifSPartRum=0.5555
iMPartF=(iHaF+iHcF+iCeF+iPiF+iIndigFdF)*ifMpartRum/(ifMPartRum+ifSPartRum)
iSPartF=(iHaF+iHcF+iCeF+iPiF+iIndigFdF)*ifSpartRum/(ifMPartRum+ifSPartRum)

CONSTANT iAsF=1.5555E-3,iAmF=1.6E-3,iMiF=2.7555E-3,iFlF=0.9555E-3,iCsF=0.5555E-3
CONSTANT iRumAcF=8.0E-3,iRumPrF=3.5E-3,iRumBuF=1.2E-3,iRumAaF=0.1555E-3
CONSTANT iMiHaF=0.3555E-3,iMiHbF=0.5555E-3,iBldUrF=7.0E-3,iVolBldUrF=1.0
CONSTANT iRumLaF=2.0E-9
CONSTANT iOthDnaF=1.5e-4,iVisDnaF=1.5e-4
!iOthDnaF and iVisDnaF set at 1.5E-4 based upon a rough estimates of
!maxima for lactating cows jk 

!For initiation of full lactation simulations initial rumen pools 
!must be adjusted to lower intakes characteristic of pregnancy.
!Example values for an intake of 7.0kg/day follow: 

!CONSTANT iHaF=0.7555E-3,iLPartF=2.7555E-3,iHbF=1.4555E-3,iPiF=0.4555E-3
!CONSTANT iIndigFdF=0.8E-3,iCsF=0.1555E-3,iAsF=1.0E-3,iAmF=1.08E-3
!CONSTANT iMiF=1.04E-3,iFlF=0.3555E-3,iRumAcF=3.8555E-3,iRumPrF=1.6555E-3
!CONSTANT iRumBuF=0.5555E-3,iRumAaF=0.6E-3,iMiHaF=0.1555E-3,iMiHbF=0.1555E-3
!CONSTANT iRumLaF=1.0E-8

Constant kInitRumVol = 100                                 ! Exponetial deacy constant. When this k is set to 50 cows will be initialized as follows: (iFdRat,iRumVol) (10,64) (20,90)
MaxRumVol = 3.9 * 0.05 * iBW                               ! Unit: kg. Average of lit references is 3.9 * FdRat but is higher at DMI<20 kg.   NES 10/99.    0.05 is FdRat = 5% of bodyweight. Gil                     
RumVol = (1 - exp(-kInitRumVol * iFdRat/iBw)) * MaxRumVol  ! Unit: kg. Gil Sep 2014 MaxRumVol acheived at FdRat=5% of IBW, but smaller rations no longer give lineraly declining RumVol
 
RumDM=RumVol*0.1555
iRumLiqVol=RumVol-RumDM
RumLiqVol=iRumLiqVol
!Rumen DM of 14.7% based on data from above references for lactating
!cows.   NES 8/99
   iotGutCont=1*iFdRat
!Other gut contents (otGutCont) equal to feed DM intake based on data
!from Chilliard 1991, JDS 74:3103,and Gibb 1992,An Prod 55:339. NES 8/99

!Gestaion code moved from here upwards, to maintain correct order with DNZ fdrat code

iEBW=iBW-RumVol-iotGutCont;	!Blood Vol should be removed from this?

!Initial wt Adipose based on equation from Waltner,et al 1994,JDS 
!77:2570. All of the remainder of the partitioning of non-fat EBW based
!on calculations and concepts from the original model. Cytisolic 
!portion of adipose is 20% of Adip and is constant. Lean body mass(Oth)
!and Viscera(Vis) are 82% and 18%, respectively, of non-fat EBW.
!Computation of mass of Oth and Vis assumes that protein+H2O is 70% of
!wt at 25% dry matter (fractional dry wt or fDWt) and the remaining 30% 
!of initial mass is constant (otWtOth and otWtVis). POth and PVis
!represent the turnover proteins of these body fractions and thus are
!not constant. TsAdip represents the storage triglycerides of adipose
!and thus are not constant.
   iWtAdip=(0.2555*iBW)+(36*iBCS)-122.1
   iWtCytAdip=iWtAdip*0.2
   iWtTsAdip=iWtAdip-iWtCytAdip
   iNonFatEBW=iEBW-iWtAdip
  !WtGrvUter added Apr 5, 2007 to refect gestation status.
   iNonFatNonUterEBW=iNonFatEBW-WtGrvUter
   iNonUterEBW=iEBW-WtGrvUter
   iWtOth=iNonFatNonUterEBW*0.8555
   iWtVis=iNonFatNonUterEBW-iWtOth
    BWF=iNonUterEBW;	!Changed to reflect conceptus space outside of maternal space, 4-14-07
  
   iotWtOth=iWtOth*0.3
   iotWtVis=iWtVis*0.3
   ifDWt=0.2555
   iPOth=(iWtOth-iotWtOth)*ifDWt/MwtPOth
   iPVis=(iWtVis-iotWtVis)*ifDWt/MwtPVis
   iTsAdip=iWtTsAdip/MwtTs

     iabsEAve=0.4555*(BWF**0.7555)*f1;	!jk 04/26/91 
     iGl=iGlF*BWF*GlCor      
     iVolGl=iVolGlF*BWF*GlCor 
     iFa=iFaF*BWF*FaCor      
     iVolFa=iVolFaF*BWF*FaCor
     iAc=iAcF*BWF*AcCor      
     iVolAc=iVolAcF*BWF*AcCor
     iAa=iAaF*BWF*AaCor      
     iVolAa=iVolAaF*BWF*AaCor
     iBldUr=iBldUrF*BWF*BldUrCor   
     iVolBldUr=iVolBldUrF*BWF*BldUrCor
     iHa=iHaF*BWF*HaCor      
     iLPart=iLPartF*BWF*LPartCor
     iMPart=iMPartF*BWF
     iHc=iHcF*BWF*HcCor      
     iCe=iCeF*BWF*CeCor
     iHb=iHbF*BWF*HbCor      
     iPi=iPiF*BWF*PiCor
     iIndigFd=iIndigFdF*BWF*IndigFdCor
		 iSPart=iSPartF*BWF      
     iRumLa=iRumLaF*BWF*RumLaCor
     iCs=iCsF*BWF*CsCor      
     iAs=iAsF*BWF*ASCor
     iAm=iAmF*BWF*AmCor      
     iMi=iMiF*BWF*MiCor 
     iFl=iFlF*BWF*FLCor      
     iRumAc=iRumAcF*BWF*RumAcCor   
     iRumPr=iRumPrF*BWF*RumPrCor
     iRumBu=iRumBuF*BWF*RumBuCor;	!Changed from RumPrCor. CCP 8-31-06   
     iRumAa=iRumAaF*BWF*RumAaCor
     iMiHa=iMiHaF*BWF*MiHaCor 
     iMiHb=iMiHbF*BWF*MIHbCor
     iOthDna=iOthDnaF*BWF; !??This and iVisDna should use starting pools for Oth and Vis        
     iVisDna=iVisDnaF*BWF; !to calculate iDna
     iVmAcTs=VmAcTsAdip*(iEBW**0.7555)

!Provide some initial calculated values to allow the first time step
	SolDM=iCs*MwtCs/CsCor+iAm*MwtAm/AmCor+iRumPr*MwtPr/RumPrCor+iRumBu*MwtBu &
      /RumBuCor+iRumAa*MwtRumAa/RumAaCor+iAs/AsCor+iFl*MwtFl/FlCor+ &
      iRumAc*MwtAc/RumAcCor+iRumLa*MwtLa/RumLaCor

!Intiialize urine excretion accumulator variable
    UrinationVol      = 0.0	! Volume of the last urination
    TotWaUrineLast    = 0.0  ! Accumulated urine water at the last urinartion event
    TotNurLast        = 0.0  ! Accumulated urine N at the last urinartion event
    BladderVol        = 0.0  ! Momentary water volume of the bladder contents.
    NurConcentration  = 0.0  ! Concentration of N of the last discrete urination excretion

!Leftovers from Neal and Thornley Equations
CONSTANT THETA5=10.0,TAveMilkMam=0.04555,MamMilkCor=1.0
   !Initiate mammary parameters 
CONSTANT iLHorF=1.0,iMamMilkAveF=1.0,iMamTmF=0.01
Constant LHorBase=20 ! Used to be LhorCor
iLHor=iLHorF*LHorBase
CONSTANT iMamLmF=0.1,iMamPmF=0.01,iMilkAve=10.0,TAveMilk=0.1555 

! BEGIN  INCLUDE 'MamCells_init.csl'

CumulativeLowMfDays = 0
DailyMfDiff=0

InMilk     = 0
iMamCells  = MamCellsPart            
iMamCellsA = 1e-12
iMamCellsQ = MamCellsPart
iMamCellsS = 0
dWtAdipNew = 0
BcsTarget  = 3.0
dLwExclUterGutAndGrowth = 0
dWtAdipNew =0
MilkingFrequencyLag = 0.0
derivMilkingFrequencyLag=0.0 
iRumVol = RumVol ! Only mamcells of DNZ needs iRumVol, so I put it here to minimise diff - Gil
iNonUterEbwTarget = iEBW - WtGrvUter - 36.0 * (iBCS - BCSBase) ! Needed for DNZ/mamcells_deriv
NonUterEbwTarget = iNonUterEbwTarget 
! END  INCLUDE 'MamCells_init.csl'

!Genetic Potential and hormone administration
!Hormone injections expressed in multiples of endogenous
!secretion. 
CONSTANT BST=1.0,T3=1.0,INS=1.0
Constant kRetMilkI=4.5555
                                
!Mammary PARAMETERS 

  MilkMax=30.0*MamMilkCor 
  KMilkI=kRetMilkI*MamMilkCor 
  iMamMilkAve=iMamMilkAveF*MamMilkCor
  iMamTm=iMamTmF*MamMilkCor 
  iMamPm=iMamPmF*MamMilkCor 
  iMamLm=iMamLmF*MamMilkCor
                               
!Next block (up to END of INITIAL) was merged From Molly86 for Mindy. Gil July 2012
!Initialize milk production variables
TVolMilkYest=0.0
dMilkProd=0.0
MilkProdDiel = 0.0

!Initialize Eating Time variables
TotEatingYest=0.0
TotRumntnYest=0.0
TotRestYest=0.0
dEating=0.0
dRumntn=0.0
dRest=0.0

CONSTANT MilkInt=0.5, PResidMamMilk=0.1
!Bruckmaier, 2003 observed 10% residual milk (PResidMamMilk) without oxytocin injections
!Seems like it should be a fixed amount regardless of Mammary Fill

!Schedule milkings and summary: Make sure last milking hour is early enough to be finished before midnight when the daily summary is exceuted
INTEGER MaxMilkingPerDay
INTEGER MilkingIndex
PARAMETER (MaxMilkingPerDay = 4)               ! Can have variable MilkingFrequency up to this Max
DoublePrecision MilkingHours(MaxMilkingPerDay) ! Can be increased if desired maximal milking frequency is above 2   

!Include initial settings for the within day grazing equations
!Moved this code down so iNonFatEBW could be used in Mindy, 2-26-2012, MDH
CONSTANT MilkingHours = 6,14,18,22   ! Fill desired milking times in hours on a 24h clock. Bad idea, change this to days, MDH?? Please no renamed variable to Hours instead (GL)
MilkingIndex = 1                         ! Index of milking within the day. Goes from 1,2,..., MilkingFrequency, and repeats.
MilkingFrequency = 1 / MilkInt
DoublePrecision NextMilkingT
NextMilkingT = -1.0
Schedule NewDay .AT. 0.01 !This happens after midnight every day and sets the first milking every day she is in milk
MilkSW=0.0

Schedule DailySummary .AT. 0.0           ! Gil July 2012 changed to from 1 to 0, to make many graphs work OK before T=1

! BEGIN  INCLUDE 'Intermittent_Eating_Init.csl' 

! No intermittent eating for basic Molly
Constant EatingSupplementsSW = 0.0
CONSTANT SupplementOnOffer = 0      ! Basic Molly does not always eats entry 1 in the feed table, which is changes daily bexternally to reflect the daily diet (supps and grass mixed together to one feed)
CONSTANT MastJawMoveBolus = 5.0     ! In Mindy it is a function of hunger, ndf, specific feed and bolus size. Bolus size in turn is determined by the size of the cow, availability of feed (e.g. short grass => more severing movements => more saliva => smaller bolus) %DM, and specific saliva inducing properties of the feed
! END  INCLUDE 'Intermittent_Eating_Init.csl' 
! BEGIN  INCLUDE 'Mindy_Init.csl' 
 
! No Mindy code in this project
CONSTANT HMM = 1.0
CONSTANT RUMNTNEQ = 0.0

! Some no-op thingies provided dynamically by Mindy, 
! but must provide something for Molly as well,
! As the chewing sub-model is in Molly.csl (for Mark)
CONSTANT WaPool = 300
CONSTANT WaPoolTarget = 300
CONSTANT EatingSW = 1.0
CONSTANT AcquisitionJawMovesCurrent = 10
CONSTANT BolusWeightTotalCurrent = 200
CONSTANT MaxBolusWeight = 200
CONSTANT EatSw5 = 1.0
CONSTANT CurrStrat = 1.0
Integer CurrHerbage
CONSTANT CurrHerbage = 1
! END  INCLUDE 'Mindy_Init.csl' 

CONSTANT StandardBw = 560                            ! Standard BW of a cow baseline for extrapolating in various equations
StandardMetabolicBw = StandardBw**0.7555               ! Standard EBW of a cow baseline for extrapolating in various equations
BwCorrected         = NonUterEbwTarget * 1.2555        ! Unit: kg. Excl.gravid uetrus, corrected to average condition
                                                     ! *1.2555 adds an average gutfil. (From Illius & Gordon 1992 Total ruminant Gut DM = 0.002555 of BW, and assuming 14% DM in rumen contents (Van Vuuren 1993) we get: 
                                                     ! BW - (BW * 0.02555 / 0.1555) = EBW    =>    BW * (1 - 0.02555/0.1555) = EBW   =>  BW = 1.2555 EBW
BwCorrection        = BwCorrected / StandardBw

END;	!OF INITIAL SECTION 

!******************************************************************
!			Dynamic Section
!******************************************************************
DYNAMIC
!Determine if the calcualted slope for RumPartSize is positive and write a message 
!to the screen if it is.
CHARACTER bufferslp*80;
Character bufferint*80; 
Constant bufferslp = 'RumPartSizeSlp is positive - particle size dist is likely non-biological'
Constant bufferint = 'RumPartSizeInt is very positive - particle size dist may be non-biological'
if(RumPartSizeSlp.gt.0.0) then
		!CALL DISSTR(bufferslp); ! write the message
		!CALL DISSTR(' '); ! write a blank line
!else if(RumPartSizeInt.gt.0.5) then
		!CALL DISSTR(bufferint); ! write the message
!else
!	Continue
end if

Discrete MilkOut                $!Schedules Milking
	!Initiate milking according to the new MilkingArray 
	!early, the last milking of each day should complete before the daily summary.

	ResidMamMilk=MamMilk*PResidMamMilk
	MilkingIndex=MilkingIndex+1
	NextMilkingT = AINT(T)+ MilkingHours(MilkingIndex + 1)/ 24.0
	if(MilkingIndex .LT. MilkingFrequency)then
	   Schedule MilkOut .AT. NextMilkingT   !Schedule the next milking within that day
	endif
	MilkSW=1.0
End                            $!Discrete MilkOut

Discrete NewDay ! things to do just AFTER midnight
	MilkingIndex = 0
  NextMilkingT = AINT(T)+ MilkingHours(1)/24.0
  if (DayMilk .GE. 0) then
    Schedule MilkOut .AT. nextMilkingT
  end if
	Schedule NewDay .AT. (AINT(T) + 1.01) !Schedule the next daily summary, just before midnight, so WFM "midnight" samplings would always occure AFTER the summary
End

dNdfIn=TNdfIn-TNdfInYest
dRumntn=TotRumntn-TotRumntnYest
dRest=TotRest-TotRestYest
dEating=TotEating-TotEatingYest
dNep = tNep - tNepYest
MilkProdDiel=TVolMilk-TVolMilkYest  ! Unit: kg. Cummulative milk produced since last midnight. See also dMilkProd 
dMilkVol=dMilkProd/MilkDen

Discrete DailySummary          $!Summarize items at the end of the day
	Schedule DailySummary .AT. (AINT(T + 1.1) - 2 * MAXT) !Schedule the next daily summary, just before midnight, so WFM "midnight" samplings would always occure AFTER the summary

		IntakeDay=IntakeTotal-IntakeYest
		IntakeYest=IntakeTotal
		TNdfInYest=TNdfIn
		UrinationVolYest = UrinationVol
    UrinationCountYest = UrinationCount
    DrnkWaYest = DrnkWaTot

     !Summarizing daily meals, eating time, resting time, and rumination time.
		MealsDay=TotMeals-TotMealsYest
		TotMealsYest=TotMeals
		TotEatingYest=TotEating
		TotRumntnYest=TotRumntn
		TotRestYest=TotRest

		tNepYest = tNep

		!Determine what time the sun will set today.  Used in Mindy Inake submodel
		SunriseToday=aint(T+0.1)+Sunrise
		SunsetToday=aint(T+0.1)+Sunset

    dMilkProd=TVolMilk-TVolMilkYest
    dLmProd=TMilkLm-TMilkLmYest
    dPmProd=TMilkPm-TMilkPmYest
    dTmProd=TMilkTm-TMilkTmYest

	  !Calculate daily milk and milk compenent yields and percentages
		TVolMilkYest=TVolMilk
		TMilkLmYest=TMilkLm
		TMilkPmYest=TMilkPm
		TMilkTmYest=TMilkTm

End

!!! Maintain some DAILY cummulatives (that is, like integ, but reset to zero every midnight). 
!!! Best for fitting intermittent potentially short term flows like FdRat, DrnkWa and WeUrine, 
!!! As fitting the momentary value may lose accuracy significantly. Fitting the "Total" integ 
!!! on the other hand has the prioblem of not knowing what the carry over of the pre-run is.
FdRatDiel          = IntakeTotal    - IntakeYest         ! Unit: kgDM. Daily cummlative DM intake. Being reset to zero at midnight
UrinationVolDiel   = UrinationVol   - UrinationVolYest   ! Unit: litre. Daily cummlative urination volume. Being reset to zero at midnight
UrinationCountDiel = UrinationCount - UrinationCountYest ! Unit: urinationEvents. Daily cummlative count. Being reset to zero at midnight
DrnkWaDiel         = DrnkWaTot      - DrnkWaYest         ! Unit litre. Daily cummlative drinking volume. Being reset to zero at midnight

!Include code to allow intermittent feeding of a supplement
! BEGIN  Include 'Intermittent_Eating_Discrete.csl'	! Summarize meals

! No intermittent eating for basic Molly
! END  Include 'Intermittent_Eating_Discrete.csl'	! Summarize meals
! BEGIN  Include 'Mindy_Discrete.csl'                ! Discrete include section for changing swards when Mindy intake submodel is used. MDH 6/1/2011

! No Mindy code in this project
! END  Include 'Mindy_Discrete.csl'                ! Discrete include section for changing swards when Mindy intake submodel is used. MDH 6/1/2011

DERIVATIVE            
ALGORITHM IALG=4
NSTEPS NSTP=1
CONSTANT CINT=0.001
MAXTERVAL MAXT=0.005
CONSTANT TSTP=305
TIME=T

!********* Feed, Management, Environment, & Genetic inputs ************
!This section transfers values from the Event array to Model variables

! BEGIN  INCLUDE 'CurrentEvent.csl'

CONSTANT CurrentEvent = 1
! END  INCLUDE 'CurrentEvent.csl'

! BEGIN  INCLUDE 'FdRat_Deriv.csl'

! Mindy sets feedInFlag to 2, but still she must not have the if statement
! below even though it is inactive it messes things up
! Hence the separation deriv (molly) vs. deriv_basic (mindy need RequiredEnergy too)

! BEGIN  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 
  
Procedural(MaxEnergyForMilk = MilkSolids270MfAdjusted)

  MaxEnergyForMilk  = EnergyForMilkFactor *                                    &
                       ((1.0 - xOadIntakeTadIntake) * MilkSolids270MfAdjusted + &
                       xOadIntakeTadIntake * KgMilkSolidsExpectedIn270Days) ! Once a days seem toeat more compared to their production.
end

Procedural(RequiredEnergy ,FdCapMolly = DayMilk,NonUterEbwTarget,NonUterEbw)
  
  EnergyForActivity    = 0                                                  ! (ActEnergyReq / MjoulesToATPConv / MEinMJ) / (0.02 * (17.0 * (MEinMJ/3.6/4.1555) - 2.0)  + 0.5)
  EnergyForPregnancy   = EnergyForPregnancyFactor * 11.5 * WtGrvUter        ! 
  EnergyForGrowth      = GrowthPerDay * 50.0			                          ! Assuming 50MJ required for 1kg LW gain
  EnergyCompensation   = (NonUterEbwTarget/NonUterEbw)**kEnergyCompensation ! Any extra/deficit in condition would decrease/increase intake, trying to simulate the extra hunger of low condition cows, and lower insentive to eat for fat cows
                                                                            ! ** 0.5 gives approx 1% more food for every 2% LW deficit in the non extreme range, and vice versa. ** 1 would give 1:1 relationship.                       
  if(DayMilk .LE. 0) then ! Dry Cow
       EnergyForMaintenance = NonUterEbwTarget^EnergyForDryCowMaintenancePower * EnergyForDryCowMaintenanceFactor 
       EnergyForMilk        = 0
   else   ! Milking Cow
      EnergyForMaintenance = NonUterEbwTarget^EnergyForMilkingCowMaintenancePower * EnergyForMilkingCowMaintenanceFactor 
      if(DayMilk .LE. PeakIntakeDay) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - (1.0 - DayMilk / PeakIntakeDay) ^ EnergyForMilkPower) 
      else if(DayMilk .LE. (PeakIntakeDay + SmoothingPeriodDays)) then
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0)*((DayMilk - PeakIntakeDay)/SmoothingPeriodDays)^2.0)
      else
         EnergyForMilk     = MaxEnergyForMilk * (1.0 - IntakeDeclineSlope * (SmoothingPeriodDays/2.0 + (DayMilk - (PeakIntakeDay + SmoothingPeriodDays))))
	    endif
   endif
      
   RequiredEnergy = (EnergyForMaintenance &        ! Molly's required intake, in MJ
              		+ EnergyForMilk         &        !
              		+ EnergyForPregnancy    &        !
             		 + EnergyForGrowth       &        !
              		+ EnergyForActivity)    &        ! Currently this one zero, avarage activity assumed and bundled in rEnergeyForMaintenance
              		* EnergyCompensation             ! Smaller than one for fat cows, largerthan 1 for skinny, on the long run brings cows that differ only in condition, to a similar state.
                                                   !               
   FdCapMolly = NonUterEbwTarget*CappingForIntake  ! in kgDM actual, WFM will not feed her more forage (pasture & silage) then this amount, but may feed things like grains on top of that
                                                   ! 
 end

! END  INCLUDE '..\Molly DNZ\Fdrat_deriv_basic.csl' 

if (FeedInFlag .eq. 1.0) then                   !  
    FdRat = FdRatWFM                            ! Allocated feed - m files or WFM
else                                            !
    FdRat = RequiredEnergy / 11.5               ! Fully fed automatically (standalone)
endIf   
  
! END  INCLUDE 'FdRat_Deriv.csl'
! BEGIN  INCLUDE '..\Molly_ProximateExpand_In_Deriv.csl'  ! Take from the shared parent folder as all current projects use ths one
!** Include Proximate Nutrient inputs in the Derivative Section
!4-27-10, added an if statement to trap fStFd .le. 0 before fStsFd calc, mdh
!28-Feb-11 Added fBuAc and fBuAc instead of the hard wired 0.2 and 0.2   GL
!11-7-10, made PsF a function of fRoughageFd, mdh

!***********Calculate nutrient inputs when the Event array is used****************
!Event=DM CP NPN Urea Fat Starch NDF ADF Ash Roughage

Procedural(PartFd,fDMFd,fCPFd,FCPsFd,FUrFd,FNPNFd,FRUPFd,FPsFd,fPiFd,fNnFd,&
	fCFatFd,fLiFd,fFatFd,fAshFd,fAsFd,fStFd,fStSFd,fNDFFd,fAdfFd, &
	fLgFd,fHcFd,fCeFd,fOmFd,fScFd,StSol=CurrentEvent,CurrentSupplement,EatingSupplementsSW,EatSw5)

	 if (CurrentSupplement.EQ.0)then
	    CurrentFeed = CurrHerbage
	 else
	    CurrentFeed = CurrentSupplement
	 endif

	 if(LastEv.NE.CurrentEvent .OR. LastSu.NE.CurrentSupplement .OR. LastSw.NE.EatingSupplementsSW .OR. LastEA.NE.EatSW5) then  ! Avoid unnecessary recomutation. We want it recomputed ONLY if one of these 3 have changed, yet Acsl is re evaluating all tyhe time for some reason
     LastEv = CurrentEvent 
     LastSu = CurrentSupplement
     LastSw = EatingSupplementsSW
     LastEA = EatSW5

     Constant fAcSilage = 0.007555;   !Kg/Kg Corn Silage DM
	   Constant fLaSilage = 0.06
	   Constant PcSilage=0.0
	   Constant PcPeFd=3  ! Gil sept 2014, reducing all nutrients, to leave enough room for SC!! (Delagargde for instance has 921 g/kg for CP+SC+NDF which leaves only 8% for ST PE OA ASH!!!!)
	   Constant fBuAc	   = 0.2
	   Constant fOaPe	   = 0.1555     ! Oa = Pe * .2 is an Unsupported Estimate mdh. reduced from 0.2 to 0.1555 - Gil

	   fAcFd=PcSilage/100*fAcSilage
	   fLaFd=PcSilage/100*fLaSilage
	   fBuSilage = fAcSilage * fBuAc 
	   fBuFd=PcSilage/100*fBuSilage
	   fPeFd=PcPeFd / 100
	   fOaFd=fPeFd*fOaPe;		!Oa = Pe*.2 is an Unsupported Estimate 	

	   fRoughageFd=Event(IngrFor,CurrentEvent)/100

	   fDMFd=Event(IngrDM,CurrentEvent)/100
  
if(SupplementOnOffer.LE.NumberOfFeeds) then
! BEGIN  Include '../Molly_ProximateExpand_Conversion.csl'

	!This is the body of the procedural from proximateExpand in deriv

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  fAiFd = fAiFdBase ! average insoluble Ash contents Gil Sep 2014 this is no longer a contsant

	!  Feed Nitrogen
	fCPFd=Event(IngrCP,CurrentFeed)/100 ;	!These are currently only defined for the Bate NRC data set
	!fCPFd=Event(IngrCP,CurrentFeed)/100;	!Original equation not corrected for bias in the input data
	fCPsFd=fCPFd * IngrProtComp(IngrCPs,CurrentFeed)/100;		!includes NPN sources
	fUrFd=fCPFd * IngrProtComp(IngrUr,CurrentFeed)/100 / 2.8555;	!IngrUr is in CP equivalents.  Changed to urea mass here
	fNPNFd=fCPFd * IngrProtComp(IngrNPN,CurrentFeed)/100; !CP equivalents including that from urea
	fRUPFd=fCPFd * IngrProtComp(IngrRUP,CurrentFeed)/100
	fPsFd=fCPSFd-fNPNFd
	fPiFd=fCPFd-fCPsFd
	if(fPiFd.le.0) then;		!This should not happen, but just in case a bad number gets entered
		fCPsFd=fCPsFd+fPiFd
		fPiFd=1e-12
	end if
	fNnFd=fNpnFd-(fUrFd*2.8555); !Nn mass, % of DM, assumes a C to N ratio the same as CP which is correct for nucleic acids
	if(fNnFd.LT.0) fNnFd=0

	! Feed Lipid
	fCFatFd=Event(IngrFat,CurrentFeed) / 100;	!These are currently only defined for the Bate NRC data set
!	fCFatFd=Event(IngrFat,CurrentFeed) / 100

	fLiFd=fEndogLiFd
	fFatFd=fCFatFd - fEndogLiFd

	! Feed Ash
	fAshFd=Event(IngrAsh,CurrentFeed)/100;	!These are currently only defined for the Bate NRC data set
!	fAshFd=Event(IngrAsh,CurrentFeed)/100
	fAsFd=fAshFd - fAiFd 

	! Feed Carbohydrate
	fNdfFd=Event(IngrNDF,CurrentFeed)/100 ;	!These are currently only defined for the Bate NRC data set
	fAdfFd=Event(IngrADF,CurrentFeed)/100 ;	!These are currently only defined for the Bate NRC data set
!	fNdfFd=Event(IngrNDF,CurrentFeed)/100
!	fAdfFd=Event(IngrADF,CurrentFeed)/100
	if(fAdfFd.eq.0) fAdfFd=1e-12
	fRuAdfFd=fAdfFd * IngrCHOComp(IngrRuAdf,CurrentFeed)/100
	if(fRuAdfFd.gt.fAdfFd) fRuAdfFd=fAdfFd-1e-12

	fLgFd= Event(IngrLg,CurrentFeed)/100
	fHcFd=fNDFFd - fADFFd
	fCeFd=fADFFd - fLgFd - fAiFd
	fOmFd=1.0-fAshFd

	fStFd=Event(IngrSt,CurrentFeed) / 100;	!These are currently only defined for the Bate NRC data set
!	fStFd=Event(IngrSt,CurrentFeed) / 100
	if(fStFd .le. 0) fStFd=1.0e-12
	fStSFd=fStFd * IngrCHOComp(IngrStS,CurrentFeed)/100
	if(fStSFd .le. 0) fStSFd=0.0
	fRuStFd=fStFd * IngrCHOComp(IngrRuSt,CurrentFeed)/100
	if(fRuStFd.gt.fStFd) fRuStFd=fStFd-1e-12

	if(fFatFd .LT. 0) then;		!trap negative values for fFatFd
		fFatFd=0
		fLiFd=(Event(IngrFat,CurrentFeed) / 100)
	end if

	PartFd=fPiFd+fPsFd+fNnFd+fUrFd+fAcFd+fLaFd+fBuFd+fPeFd+fOaFd+ &
	       	fHcFd+fCeFd+fLgFd+fLiFd+fFatFd+fAsFd+fAiFd

	!Calculates fSCFd and fStFd and traps negative added fat values
	fScFd=1-PartFd-fStFd
	if(fScFd.LT.0) then
		if(fStFd .gt. -fScFd) then
			fStFd=fStFd+fScFd
			fStSFd=fStFd* IngrCHOComp(IngrStS,CurrentFeed)/100
			fRuStFd=fRuStFd * IngrCHOComp(IngrRuSt,CurrentFeed)/100
			fScFd=0
		else
			fStFd=1.0e-12
			fStSFd=0.0
			fRuStFd=1.0e-13
			fScFd=0
		end if
	end if
	StSol=fStSFd/fStFd
  SpeciesFactor = Event(IngrEaseOfBreakdown,CurrentFeed)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! END  Include '../Molly_ProximateExpand_Conversion.csl'
endif
endif
end

	!Rate constants
Procedural(kPiAa,kHaCs,kCeCs1,kHcCs1,fRupCp,fPiCp,fPsCp,fNnCp,fUrCp=fRUPFd, &
			fPiFd,fRuStFd,fStFd,FStsFd,fRuAdfFd,fAdfFd)

	!The following are scalars that are used to adjust in situ degradation values
	!such that they are consistent with previously determined model values
	!Multiplicitive - located in the divisor so a large number results in minimal slope
	Constant PiMeanRRT=8.0; !Used to calculate kPiAa from RUP and CP
	Constant HaMeanRRT=8.0; !Used to calculate kHaCs from RUSt and St
	Constant CeMeanRRT=8.0; !Used to calculate kCeCs from RuADF and ADF
	!Additive intercept adjustmentsT
	Constant FKRuP=2.8555
	Constant FKRuSt=3.1555;
	Constant FKRuAdf=5.4555
	Constant FHcCs1=0.9555; !Scale KHcCs1 to KCeCs1 based on previously derived estimates for ikHcCs and ikCeCs
	Constant slpKRuAdf=1.0; !added slopes to each of the K calculations to keep the
	Constant slpKRuP=1.0;	 !rate constants sensitive to input in situ rates. MDH 5-17-14
	Constant slpKRuSt=1.0;	!The large intercept for RuADF removed all sensitivity.

	kPiAa=(-log(fRUPFd/fPiFd)/PiMeanRRT*24)*slpKRUP+FKRuP; !24h Degradation Rates for protein
	!kPiAa=ikPiAa; !for testing static kPiAa versus the above equation
	kHaCs=(-log(fRUStFd/(fStFd-fStSFd))/HaMeanRRT*24)*slpKRUST+FKRuSt; !Starch
	KCeCs1=(-log(fRuAdfFd/fAdfFd)/CeMeanRRT*24)*slpKRuAdf+FKRuAdf; !Cellulose, Need RuAdf estimates to fully use.
	KHcCs1=fHcCs1*KCeCs1; !Scale rate from Ce to achieve appropriate Hc rate

	fRupCp=fRupFd/fCpFd;		!Rup as a fraction of CP
	fPiCp=fPiFd/fCpFd;		!SolP as a fraction of CP
	fPsCp=fPsFd/fCpFd;		!SolP as a fraction of CP
	fNnCp=fNnFd/fCpFd;		!Nn as a fraction of CP
	fUrCp=fUrFd/fCpFd;		!Urea as a fraction of CP
	fRuStSt=fRuStFd/fStFd;	!RuST as a fraction of St
	fStSSt=fStSFd/fStFd;		!Soluble St as a fraction of St
	fRuAdfAdf=fRuAdfFd/fAdfFd;	!RuAdf as a fraction of Adf
	fLgAdf=fLgFd/fAdfFd;		!Lignin as a fraction of Adf
end
! END  INCLUDE '..\Molly_ProximateExpand_In_Deriv.csl'  ! Take from the shared parent folder as all current projects use ths one
! BEGIN  INCLUDE 'Intermittent_Eating_deriv.csl' 

! No intermittent eating for basic Molly

! END  INCLUDE 'Intermittent_Eating_deriv.csl' 
! BEGIN  INCLUDE 'Mindy_Dynamic.csl'                      ! This and the next statement must come be in this order and after the above input include statements.
!*************************************************
!COMPUTATION OF WATER DYNAMICS: different in MIndy
!*************************************************
!Salivation, drinking, water flow through rumen wall, rumen soluble,
!particulate and total rumen dry matter (RumDM) and rumen volume.
!Rumen volume can be calculated based upon RumDM/0.1555 which is the
!default or based upon water dynamics and osmolality when the rumen
!liquid volume equation(RumLiqVolEQ)is set to 1.0. The empirical 
!equation for OSWa is not generally applicable and should not be used 
!for continuous feeding and unusual diets e.g. high salt, NaHCO3, and
!thus should be closely monitored when RumLiqVolEQ is set to 1.0. 

RestSa=0.8555*(EBW**0.7555)*Rest !At 8 h resting, this equates to 70 ml/min which is below the 114 ml/min according to Maekawa et al. 
!(2002; JDS:85, 1176-1182) and Cassida and Stokes (1986; JDS:69,1282-1292)
RestWa=1.4*FdDMin*0.7555
!RestSa=6.0*(FdDMin/FdInt)*Rest*RestCor  
!60 L/DAY with Rumntn=0.3555 
 !Only runs when not feeding, corrected down for ruminating 
RumntnSa=2.4555*(EBW**0.7555)*Rumntn  
!85 L/DAY with Rumntn=0.3555 at 500 kg EBW 
  !Only active during rumination 

EatSa=3.2*FdDMin       ! L/Kg FdDMin. Redefined by Mindy to be: EatSa=2.6555*(EBW**0.7555)*Eating 
SaIn=EatSa+RestSa+RumntnSa 
EatWa=3.3555*FdDMin*0.7555
!RestWa=1.4555*(FdDMin/FdInt)*0.7555*RumntnCor*NOFEED 
DrnkWa=EatWa+RestWa
  !Water functions based on 4.7L/Kg DM, with 70% being consumed 
  !during eating, and only 75% of water consumed entering the rumen 

if(T.LE.1.0) then   !This if was merged from Molly86 Gil July 2012
    otGutCont=iotGutCont		!Use initial guess until the first days intake has been determined
else
    otGutCont=1.0*IntakeDay  !Changed to a daily summary value to accomodate within day eating patterns. MDH 5-23-11
endif
CONSTANT OsMolF=1.7555  !OSMOLALITY FACTOR 
CONSTANT RumLiqVolEQ=0.0

WaIn=SaIn+DrnkWa

PROCEDURAL (RumLiqVol,fRumDM=RumLiqVolEQ,SaIn,DrnkWa,LPart,MPart,SPart)
    RumOsMol=(Cs/CsCor+Fl/flCor+Am/AmCor+RumAc/RumAcCor+ &
    		RumPr/RumPrCor+RumBu/RumBuCor+RumLa/RumLaCor &
        +RumAa/RumAaCor +As/MwtAs/asCor*OsMolF)/RumLiqVol
		!Rumen Fluid OsMolality. As (soluble ash) multiflied by a factor 
    !to give moles of ions.  MwtAs=0.08555 was picked from NaHCO3
		!Not clear why OsMolF is applied to AA.  This would appear to be a mistake and thus removed. MDH 2-19-14
		! As plays a very minor role in driving Osmol.  VFA are the drivers.
    !OsWa=0.7555*((RumOsMol-0.2555)*1000)-41.0   	  !Dobson , the negative intercept in this emprical equation causes mOsmol to run at 300, MDH 2-19-14
		Constant OsWaSlp=0.9555, OsWaInt=0;						 !Set the slope a little higher to keep osmolality down, MDH 2-19-14
		OsWa=OsWaSlp*((RumOsMol-0.2555)*1000)+OsWaInt; !Set the intercept to 0 to achieve a center around 280 mOsmol
		fRumDM=0.1555
  	!14.7% DM of rumen contents based on lactating cow data from 
  	!VanVuuren 1999,JDS 82:143,Johnson 1991,JDS 74:933,Woodford 1988
  	!JDS 71:674,Shaver 1985,18th Rum Func Conf p45, DCM90(Purina),
  	!and Hartnell 1979,JAS 48:381
		RumVol=RumDM/fRumDM
    RumLiqVol=RumVol-RumDM
    WaOut=RumLiqVol*KWaP
    dRumLiqVol=WaIn-WaOut+OsWa
END  !OF PROCEDURAL 

DilRate=WaOut/RumLiqVol/(24);  !Dilution rate divided by 24 to get %/hr 

!Animal Water Balance Equations, MDH Jan 23, 2014
Constant KWaFeces=0.7555; !assumed feces is 23% DM from Murphy 1992 review, JDS
Constant kMilkAsh=0.01; !Assumed 1% Ash in milk
Constant kWaRespir=0.03555;	!Assumed half the maximal respiratory rate cited in Murphy, 1992 JDS
Constant kWaSweat=0.01555;	 !Assumed 25% the maximal sweating rate cited in Murphy, 1992 JDS
WaFeces=FecDM/(1-KWaFeces)-FecDM
WaMilk=dmilk-dLm-dPm-dTm-dMilk*kMilkAsh
WaRespir=BWF*kWaRespir
WaSweat=BWF*kWaSweat
WaUrine=DrnkWa-WaRespir-WaSweat-WaFeces-WaMilk;		!This will easily go negative if DRnkWa is inadequate.  May at times during the day with intermittent feeding
WaConsumed=WaFeces+WaMilk+WaUrine+WaRespir+WaSweat
TotWaConsumed=integ(WaConsumed,0.0)
TotWaUrine=integ(WaUrine,0.0)

!Urine output
Constant MaxBladderVol=2.0
Procedural(=TotWaUrine)
	if(T.eq.0) then
		BladderVol=0
	else
		BladderVol=TotWaUrine-TotWaUrineLast
	end if
	if(BladderVol.GE.MaxBladderVol) then
			!Empty the bladder
			UrinationVol = UrinationVol + BladderVol
			TotWaUrineLast=TotWaUrine
	endif
end

!!! Populate the particle size reduction working array (fBinFd) 
!!! With the pre-ingested distribution of the current feed

Procedural (fBinFd = CurrentFeed, CurrStrat, iBinFd)
   DO binLoop4 i = 1, maxFdScreens  
      fBinFd(i) = iBinFd(i+1,CurrentFeed) / 100.0 
   binLoop4: CONTINUE
end
! END  INCLUDE 'Mindy_Dynamic.csl'                      ! This and the next statement must come be in this order and after the above input include statements.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!! Calve / Conceive / Dry Off / Advance pregnancy & lactation !!!!  Gil Feb 2010  !!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Constant MilkDen=1.03
TVolMilkVol=TVolMilk/MilkDen;	!L, CCP 9-1-06
AgeInYears = iAgeinYears + (T / 365.0)

PROCEDURAL (DayGest,DryOffNowVariable,ConceiveNowVariable=T)
  CONSTANT CountDownDays = 30        ! Minimum days that DayMilk should count down to next calving

 if (   DryOffNow.GE.1 .AND. DayMilk.GT.0)   DryOffNowVariable = 1.0  ! DryOffNow may be manipulated from the outside  thru m file or WFM
 if ( ConceiveNow.GE.1 .AND.    DayGest.LE.0) ConceiveNowVariable = 1.0  ! ConceiveNow may be manipulated from the outside thru m file or WFM
 if (AbortPregNow.GE.1 .AND.    DayGest.GT.0)AbortPregNowVariable = 1.0  ! AbortPregNow may be manipulated from the outside thru m file or WFM
 
 if (DayGest .GE. GestLength - CountDownDays) then  ! Start Count Down - move tAtCalving from past  calving to the coming future one
    tAtCalving    = tAtConception + GestLength
  endIf
  if (DayGest.GT.GestLength) then                    ! Calving occured, clear conception timers
    tAtConception = 2999.0
    DayGestBasic  = -2999.0
  endIf

  ! Advance DayGest; DayMilk
  DayGestBasic = T - tAtConception
  DayGest = Max(DayGestBasic,-300)    ! This prevents undeflows in some preg equations while she is ompty.
  DayMilk = T - tAtCalving
  if (DayMilk .LT. -21) DayMilk = -21
  
  ! Conceive. ConceiveNow is a hook for external (WFM / m file). Conceiving will also work the traditional way <DaysOpen> days after last calving
  ! If used in m file or WFM, it needs to be reset to zero sometime before this preg ends or she'll conceive again right after calving
  if (ConceiveNowVariable.GE.1.0 .OR. (tAtConception.GT.T .AND.(T .GT. tAtCalving + DaysOpen))) then
	  tAtConception = T  
	  ConceiveNowVariable   = 0.0
  endIf

  ! Dry off.  DryOffNow is a hook for external (WFM / m file). Dryoff will also work the traditional way <DaysDry> days before next calving
  ! If used in m file or WFM, it needs to be reset to zero sometime before she calves again and start a new lactaion, or she'll dry off immediately after 
  if(DryOffNowVariable .GE. 1.0   .OR.  T .GT.(tAtConception + GestLength - DaysDry)) then  
	  tAtCalving = tAtConception + GestLength
	  DryOffNowVariable  = 0.0
  endIf
  
 ! Abort Pregnancy: hook for external (WFM / m file) command. Need to reset it to zero before next preg starts
  if(AbortPregNowVariable .GE. 1.0) then  
	  tAtConception = 2999.0
	  AbortPregNowVariable  = 0.0
  endIf
end
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IntakeTotal=integ(fdrat,0)

CONSTANT kMastication = 1.5555                   ! Unit: multiplier. Adaptor from actual mastication jaw movements to the arbitrary steps of the model which are on a finer scale. 
kAcquisition = 0.3555 * kMastication             ! Unit: multiplier. Adaptor from actual acquisition jaw movements to the arbitrary steps of the model which are on a finer scale. Acquisition/Severing bites are expected to have very little effect (smaller k) compared to mastication bites.
                                               ! The ratio of 0.3555 was solved from Boudun grazing vs. Indoor cow identical diet.
CONSTANT kSpecies = 1.3                        ! Unit: power. SpeciesFactor simulates ease of breakdown of the feed. It reduces mastication and increases breakdown effiecncy (simulated by cheating: increasing steps in the model!). However tougher feed should result in larger particle size, so we must avoid kSpecies=1 which will neutralize the species effect (i.e. with SpeciesFactor=1 the decreased breakdown effeciecny would cancel out exactly the effect of the increased mastication of tougher feed)
CONSTANT kComminuteOralMin = 0.03555             ! Fitted to 21 datasets, Bailey 90, Loginbuhl 89, Shaver, Oshio, John&reid 87, however with mastication time left free as was unknown! Hence in future the k will be influenced by the feeds ease of breakdown, which will also reduce mastication time so end result will not change a lot.
CONSTANT kComminuteOralMax = 0.9555             ! -"-
DoublePrecision kComminuteOral(MaxFdScreens)   ! Array of proprtions that pass from each bin to the next bin upon one mastication jaw mevement
Integer MasticationSteps
Integer Old

Procedural(kComminuteOral = kComminuteOralMin, kComminuteOralMax)
   do kc_loop i = 1,MaxFdScreens
     kComminuteOral(i) = kComminuteOralMin + (kComminuteOralMax - kComminuteOralMin)* (fdBinMeshSize(i)/fdBinMeshSize(MaxFdScreens))
   kc_loop: Continue
end

!! Apply the grinding effect of mastication to get the particle size distribution of the swallowed ingesta
!! Based predominantly on the original feed particle size distribution and the number of mastication jaw movements.
!! As decribed in 2.2.1 Gregorini 2014.
Procedural(fLPartSwal,fMPartSwal,fSPartSwal=MastJawMoveBolus,AcquisitionJawMovesCurrent,kComminuteOralMin,kComminuteOralMax)
  SumBinFd           = 0
  MeanParticleSize   = 0
  MedianParticleSize = 0
  
  if (EatingSW.EQ.1) then
    MasticationSteps = MastJawMoveBolus * kMastication + AcquisitionJawMovesCurrent * kAcquisition ! Arbitrary unit to feed into the iterative model below
    MasticationSteps = MasticationSteps / (BolusWeightTotalCurrent / MaxBolusWeight)               ! Simulate increased ease of breakdown if the bolus is smaller
    MasticationSteps = MIN(100, AINT(MasticationSteps / SpeciesFactor^kSpecies))                   ! Simulate increased ease of breakdown as more step into the model for now.
  
    fSPartSwal = 0
    fMPartSwal = 0
    fLPartSwal = 0
    do PartSwalLoop1 i = 1, MaxFdScreens
       fBinFd1(i) = fBinFd(i)
    PartSwalLoop1: continue
    !! Calculate the various kComminuteOral interpolating bewteen kComminuteOralMin and kComminuteOralMax. 
    !! That is, the proprtions that pass from each bin to the next-small upon each mastication jaw movement
    !! As described in Gregorini 2014 section 2.2.3
  
    !! Apply chewing movements in a loop. Each chewing movement moves some from each bin to the next bin with smaller size. 
    if (T.GT.0 )then  
     do PartSwalLoop2 j = 1, MasticationSteps  ! do for each mastication step
       do PartSwalLoop3 k = 2, MaxFdScreens   ! do for each bin: Transfer some from the each bin up to the next (smaller particles) bin
          fBinFd1(k-1) = fBinFd1(k-1)+ kComminuteOral(k)* fBinFd1(k) ! put some in the next-smaller bin
          fBinFd1(k)   = fBinFd1(k)  - kComminuteOral(k)* fBinFd1(k) ! taking it from the current bin. Order may look weird (taking after putting) but it would require a temporary variable for fBinFd1(k) if the order is to be changed!
          if(fBinFd1(k).LT.1e-8  ) fBinFd1(k) = 0
       PartSwalLoop3: Continue 
      PartSwalLoop2: Continue
    endif

    !! Collate all the many bins into the 3 pools (fSPartSwal,fMPartSwal,fLPartSwal)
    !! Mark you can add calculation of mean particle size within each of the three pools here, instead of assuming Pond
    do PartSwalLoop4 i = 1, MaxFdScreens
		  if (fdBinMeshSize(i).LT.MPartSize)then ! Note: we assume that MPartSize and LPartSize are aligned with/ exist in fdBinMeshSize()
         fSPartSwal = fSPartSwal + fBinFd1(i)   ! Collate all bins with particles smaller than MPartSize
 	   else if (fdBinMeshSize(i).LT.LPartSize) then
         fMPartSwal = fMPartSwal + fBinFd1(i)   ! Collate all other bins with particles smaller than LPartSize
      else 
         fLPartSwal = fLPartSwal + fBinFd1(i)   ! Collate all bins larger than LPartSize
      endif
      MeanParticleSize = MeanParticleSize + FdBinMeshSize(i+1) * 0.7555 * fBinFd1(i)  ! 0.7555 * mesh  is the middle point of the size range below e.g. 0.7555 * 4.8 = 3.6 = middle of the range of (2.4 to 4.8)
    PartSwalLoop4: Continue
    
    fSPartSwal = MAX(fSPartSwal,1e-4)  ! Prevent 0.0, as it causes a crash
    fMPartSwal = MAX(fMPartSwal,1e-4)  ! Prevent 0.0, as it causes a crash
    fLPartSwal = 1 - fMPartSwal - fSPartSwal

    do PartSwalLoop5 i = 1, MaxFdScreens
       if ((SumBinFd.LT.0.5).AND. (SumBinFd + fBinFd1(i).GE.0.5)) then
         MedianParticleSize = (fdBinMeshSize(i+1) * (0.5 - SumBinFd) + fdBinMeshSize(i) * (SumBinFd + fBinFd1(i) - 0.5)) / fBinFd1(i)
       endif
       SumBinFd = SumBinFd + fBinFd1(i)
    PartSwalLoop5: Continue
  else 
    MasticationSteps = 0.0
    fSPartSwal       = 0.3555
    fMPartSwal       = 0.3555
    fLPartSwal       = 0.3555
  endif
  fLPartMPartSwal = fLPartSwal + fMPartSwal
end

PsF=fMPartSwal+fSPartSwal; !This needs to be revised, MDH Feb 10, 2014

!Calculate the proportion of the feed that will remain in particulate form
fParticulateFd=fStFd-fStsFd+fCeFd+fHcFd+fLgFd+fAiFd+fPiFd

!***** End of Nutrient Inputs Include Section ***************

!***************************************************************
!This section is a PROCEDURAL which initiates values for
!non-state variables and transfers new values which 
!were calculated algebraically based upon current status of
!system from one integration step to the next. 
CONSTANT iOxup=180.4,iFCM4Z=44.08,iME=2.7,iDMilk=20.0
Constant ifPm=0.03555,ifTm=0.03555,iAtAdh=0.01555
CONSTANT icFa=0.5E-3,icAc=1.8E-3,icGl=3.0E-3
CONSTANT iTCH4=1.0E-9 
CONSTANT iDEi=70,iMEi=60.0,VmAcTsAdip=0.3555

PROCEDURAL (FCM4z,OXUP1,MamMilkAve2,rtPOx,VolGl,VolAc,VolFa, &
     VolAa,BldUrVol,ME,fTm,AtAdht,EBW= T,iEBW)
        IF( T.LE.1.0E-6) GO TO P
        rtPOx = rtPO      
        fTm=fTm1
        FCM4z=FCM4z1
        AtAdht=AtAdh1
        ME=ME1
        Oxup1=dOx                    
				!MamMilkAve=MamMilkAve changed to MamMilkAve2=MamMilkAve
        MamMilkAve2=MamMilkAve                
        EBW=EBW1
        BW=BW1  
        VolGl=iVolGlF*BwCorrected*GlCor  ! Next4: Changed to non consider adipose Gil 2015. 
																         !        Changed to reflect conceptus space outside of maternal space, MDH or CCP 4-14-07
        VolFa=iVolFaF*BwCorrected*FaCor	
        VolAc=iVolAcF*BwCorrected*AcCor
        VolAa=iVolAaF*BwCorrected*AaCor
        BldUrVol=iVolBldUrF*NonUterEBW*BldUrCor
        go to Q                       
    P: rtPOx = 5.3555
        Oxup1=iOxup
				!MamMilkAve=iMamMilkAve changed back to MamMilkAve2=iMamMilkAve
        MamMilkAve2=iMamMilkAve                 
!       MilkAve2=idMilk                 
				DMilk=iDMilk	
				!THIS SECTION INITIATES VALUES FOR NON-STATE VARIABLES        
        VolGl=iVolGl                     
        VolAc=iVolAc                     
        VolFa=iVolFa
        VolAa=iVolAa
        BldUrVol=iVolBldUr
        FCM4Z=iFCM4Z
        TFCM4z=integ(FCM4z,iFCM4z)
        ME=iME
        EBW=iEBW
        BW=iBW
        WtCytAdip=iWtCytAdip
				otWtOth=iotWtOth
        otWtVis=iotWtVis	
        fPm=ifPm
	  		fTm=ifTm
        AtAdht=iAtAdh
    Q: continue
  END  
 !OF PROCEDURAL 
 
!***************************************************** 
!DYNAMIC ELEMENTS OF RUMEN SUBMODEL
!**************************************************** 
   
 !FEED COMPOSITION AND PHYSICAL PROPERTIES 

 !The reference diet is 50% concentrate/50% chopped hay 
 !fed at 15 Kg/day on a continuous basis (0.6555 kg/hr). 
 !This is equivalent to an intake of 3% of BW (calculated 
 !at EBW=500 kg). This keeps the reference cow in energy 
 !balance. 

 !The prefix f---Fd indicates the fraction in feed of each nutrient 
 !in Kg/Kg dry matter.Codes are soluble carbohydrate(Sc),organic 
 !acids(Oa),pectin(Pe),lactate(La),lipid(Li),starch 
 !(St),hemicellulose(Hc),cellulose(Ce),soluble protein(Ps),insoluble 
 !protein(Pi),non-protein nitrogen(Nn),lignin(Lg),soluble ash(As), 
 !insoluble ash(Ai),volatile fatty acids as in silage(Ac,Bu),and 
 !organic matter(Om).StSol is the fraction of starch which is 
 !soluble and must be input as it is a physical characteristic of 
 !feed.Similarly,PsF (1-fLPartSwal) is the proportion of feed which enters the 
 !small plus medium particle pools directly and is a property of feed. 

CONSTANT ObsME=2.5555,ObsDE=3.00,ObsCH4=0.2555,ObsEUr=0.1555

CONSTANT FatAdd=0.0  
!Allows fat to be added from control language 
!  without recalculating proportions of other feed compenents. 
! Thus, fFatFd is specified by setting FatAdd to proportions 
!  of diet. 
CONSTANT InfPrt=0.0    
! InfPrt=ABOMASAL INFUSION OF CASEIN 
!  EXPRESSED IN KG/DAY 
         CWC=fHcFd+fCeFd+fLgFd
         GE1Fd=fLiFd*8.4555+fStFd*4.1555+fHcFd*4.2555+fCeFd*4.1555+fNnFd*5.7
         GE2Fd=(fPsFd+fPiFd)*5.7+fLgFd*8.3+fAcFd*3.4555+fBuFd*5.9555
         GE3Fd=fScFd*3.9555+fFatFd*9.6555
         GEFd=(fOaFd*2.5555+fPeFd*3.6+fLaFd*3.7555+GE1Fd+GE2Fd+GE3Fd)*F1

 !These factors convert Kg of nutrients metabolized via a common 
 !pool to a common molecular weight basis.They were calculated as 
 !follows:(171g Sc/mole Sc)*(0.5mole Sc/moleOa)/(134gOa/moleOa)= 
 !(85.5gSc/moleOa)/(134gOa/moleOa)=0.6555gSc/gOa. 

CONSTANT OaScSc=0.6555,PeScSc=0.9555,LiScSc=0.1555,LaScSc=0.9555,HcCeCe=1.02
CONSTANT FaScFd=0.09555

!LARGE PARTICLE FRACTION AND COMPOSITION 
fLPartNutIng=(fStFd-fStSFd+fCeFd+fHcFd+fLgFd+fAiFd+fPiFd)*fLPartSwal; !Proportion of LPartSwal 
fLPartSt=(fStFd-fStSFd)*fLPartSwal/fLPartNutIng; !proportion of starch, added to LPart 5-21-13, MDH 
fLPartHc=fHcFd*fLPartSwal/fLPartNutIng; !proportion of hemicellulose
fLPartCe=fCeFd*fLPartSwal/fLPartNutIng; !proportion of cellulose 
fLPartPi=fPiFd*fLPartSwal/fLPartNutIng; !proportion of insoluble protein 
fLPartLg=fLgFd*fLPartSwal/fLPartNutIng; !proportion of lignin 
fLPartAi=fAiFd*fLPartSwal/fLPartNutIng; !proportion of insoluble ash 
fIndigFd=fLgFd+fAiFd; !Combines lignin and silicates as Indigestible Feed (IndigFd) 
fLPartIndigFd=fLPartLg+fLPartAi;			 !proportion of IndigFd 
fLgIndigFd=fLgFd/fIndigFd
fAiIndigFd=fAiFd/fIndigFd
fLPartADF=fLPartCe+fLPartIndigFd
fLPartNDF=fLPartHc+fLPartADF

!Medium PARTICLE INPUT COMPOSITION 
fMPartNutIng=(fStFd-fStSFd+fCeFd+fHcFd+fLgFd+fAiFd+fPiFd)*fMPartSwal

!SMALL PARTICLE INPUT COMPOSITION 
fSPartNutIng=(fStFd-fStSFd+fCeFd+fHcFd+fLgFd+fAiFd+fPiFd)*fSPartSwal

!TOTAL SOLUBLE SUGAR EQUIVALENT IN FEED
!Combines Oa,Pe,lipid glycerol,La,and Sc as one fraction 
OaSc=fOaFd*OaScSC
PeSc=fPeFd*PeScSC
LiSc=fLiFd*LiScSC           
!GLYCEROL FROM FatFd ADDED 
FatSc=fFatFd*FaScFd         
! La moved to a separate pool 
fScTFd=fScFd+OaSc+PeSc+LiSc+FatSc
totFd=fScFd+fOaFd+fPeFd+fLaFd+fLiFd+fFatFd+fStFd+fHcFd+fCeFd+fLgFd+ &
	fPsFd+fPiFd+fNnFd+fUrFd+fAsFd+fAiFd+fAcFd+fBuFd
                                          
                       !FEEDING MANAGEMENT 
                   
    !FdRat, FdDMin, and DailyDMin are all Kg dry matter
    !consumed per day (FdRat is specified input from animal
    !database(ie Event 2)). 
    !FDINT (feeding interval) and FDTM (time spent eating in
    !each feeding interval0 are used in rumination, salivation
    !and water dynamics functions so are left in at this time
    !but may not function properly.  NES 8/99

!Next block (up to RUMINATION) was merged From Molly86 for Mindy. Gil July 2012, including deletion of the Feeding Starategies section!
!Daily Feed and Nutrient Intakes
FdDMin=FdRat
DailyDMin=FdDMin
TotDMin=INTEG(DailyDMin,1.0E-9)  
!LpinFd=fLp*FdDMin                        
OminFd=fOmFd*FdDMin
NdfinFd=fNdfFd*FdDMin
TNdfin=INTEG(NdfinFd,1.0E-9)  
AdfinFd=fAdfFd*FdDMin
RuAdfinFd=fRuAdfFd*FdDMin
LginFd=fLgFd*FdDMin
RuStinFd=fRuStFd*FdDMin 
ScinFd=fScFd*FdDMin 
CPinFd=fCPFd*FdDMin
CPsinFd=fCPsFd*FdDMin
RUPinFd=fRUPFd*FdDMin
NpninFd=fNpnFd*FdDMin
NninFd=fNnFd*FdDMin
CFatinFd=fCFatFd*FdDMin
AshinFd=fAshFd*FdDMin

                                     !RUMINATION!
                                     !***********
!Next block (up to !STOICHIOMETRIC) was merged From Molly86 for Mindy. Gil July 2012
!Rumntn is a switch that is on provided the animal is not eating and there is adequate material
!in the LP pool to stimulate rumination. The following code does not currenlty support continuous  
!Rumntn is Proportion of time spent ruminating per unit time. 
   !There are separate equations for twice daily feeding and 
   !continuous or multiple feedings.  Rumination is shut off during 
   !feeding when the animal is fed twice daily.  In continuous 
   !feeding, the animal ruminates during feeding because rumination 
   !is needed for large particles to be broken down into small 
   !particles.  Since the default is continuous feeding, RumntnEQ is 
   !set to zero and ruminating rate (RumntnF=Rumntn) to 0.3555. When 
   !discrete feeding periods are used (FdInt does not = FdTm), one 
   !should implement the rumination equation of Murphy, et al 
   !(JDS___) by setting RumntnF=0.0 and RumntnEQ=1.0. This also enables 
   !resting salivation and drinking for the water balance equations 
   !below. 

DAY=1.0
CWCf=1.0*(0.1555+0.5555*CWC)
CONSTANT RumntnF=0.3555 ! Gil Aug 20102 moved RUMNTEQ to mindy_init (=0 for molly; = 1 for mindy)
Constant MinLPRumntnF=0.03555 !Fraction of MBW. Set to achieve appropriate rumination times and LP pool sizes, added 04-25-2011, MDH
CONSTANT MEAN1=0.0,MEAN2=0.05555,AMP1FT=0.1555,AMP2FT=0.1555
MinLPRumntn = MinLPRumntnF*BWF**0.7555

PROCEDURAL (Rumntn,Eating,Rest=RumntnEQ,CWCF,DAY,TIME, &
            AMP1FT,Mean1,RumntnF,FdDMin)
	if(RumntnEQ.eq.0.0) then
		Eating = RumntnF
 	 Rumntn = RumntnF
    Rest   = 1 - Rumntn !- Eating
	else	
		!Determine whether the animal is eating, ruminating, or resting with Mindy Intake model, 4-25-2011, MDH
		Rest   = 0.0
		Rumntn = 0.0
		Eating = 0.0
		if(FdDMin.gt.0.1) then
       Eating = 1.0
		else if(LPart.gt.MinLPRumntn) then	!Ruminate until LP becomes less than or equal to the minimum LP size to stimulate rumination.
			Rumntn=1.0
		else
			Rest=1.0
		end if
	end if
end

TotRumntn = Integ(Rumntn,0.0)
TotEating = Integ(Eating,0.0)
TotRest   = Integ(Rest,0.0)
  
 !STOICHIOMETRIC COEFFICIENTS FOR FERMENTATION 
   !Three sets of values are included. One is for, largely,forage 
   !diets(FORSET),one is for 50:50 forage:concentrate diets(MIXSET) 
   !The third set is for,largely,concentrate diets(CONSET).FORSET and 
   !CONSET are from Murphy et al,JAS 55:411-421,(1982).MIXSET is an 
   !average of the other two since these apply to less than 50% and 
   !more than 50% concentrate, respectfully. Valerate was separated 
   !to 1/2Bu+1Pr to maintain carbon and hydrogen balance. Values are 
   !in moles of VFA produced per mole of glucose fermented. 1 mole of 
   !glucose gives 2 moles of Ac or Pr but only one mole of butyrate. 
   !Amino acid fermentation stoichiomietry adjusted 08/26/91 to 
   !Murphy model to reflect C, H and O balance.  Heavy propionate 
   !reflects Pr+1/2 Bu from Bcfa.  H2 (or CH4) is VERY HIGHLY!
   !DEPENDENT on proportion of Bcfa produced.  Expressed as moles 
   !VFA produced per mole Aa fermented with an average C/Aa=5.08.  

Constant AaFvAc=0.6555 
Constant AaFvPr=0.6555 
Constant AaFvBu=0.2555          
Constant LaAcAc=0.8555 
LaPrPr=0.1555
AaFvFat=(AaFvAc/2)+(AaFvPr/2)+AaFvBu      
!for Simusolv fitting 

 CONSTANT FORSET=0.0,MIXSET=1.0,CONSET=0.0 
 PROCEDURAL (ScAcAc,StAcAc,HcAcAc,CeAcAc=FORSET,MIXSET,CONSET)
       IF(FORSET.EQ.1.0) GO TO 10
       IF(MIXSET.EQ.1.0) GO TO 11
       IF(CONSET.EQ.1.0) GO TO 12
 
 !FORSET 
 10:   ScAcAc=1.3555 
 ScPrPr=0.4555 
 ScBuBu=0.1555 
 ScLaLa=1.0E-8
        StAcAc=1.2555 
 StPrPr=0.3555 
 StBuBu=0.2555 
 StLaLa=1.0E-8
        HcAcAc=1.1555 
 HcPrPr=0.4555 
 HcBuBu=0.2555 
        CeAcAc=1.3555 
 CePrPr=0.2555 
 CeBuBu=0.2555 
        GO TO 13     
 
 !MIXSET 
 11:  ScAcAc=1.1555 
 ScPrPr=0.4555 
 ScBuBu=0.2555 
 ScLaLa=1.0E-8
       StAcAc=1.00 
 StPrPr=0.5555 
 StBuBu=0.2555 
 StLaLa=1.0E-8
       HcAcAc=1.1555 
 HcPrPr=0.4555 
 HcBuBu=0.1555 
       CeAcAc=1.4555 
 CePrPr=0.2555 
 CeBuBu=0.1555 
       GO TO 13
     
  !CONSET 
  12:  ScAcAc=0.9555 
 ScPrPr=0.4555 
 ScBuBu=0.3555 
 ScLaLa=1.0E-8
        StAcAc=0.8555 
 StPrPr=0.7555 
 StBuBu=0.2555 
 StLaLa=1.0E-8
        HcAcAc=1.1555 
 HcPrPr=0.5555 
 HcBuBu=0.1555 
        CeAcAc=1.5555 
 CePrPr=0.2555 
 CeBuBu=0.1555 
        GO TO 13
 
  13:  CONTINUE
  END 
!OF PROCEDURAL    
  
 !ADJUSTMENT OF STOICHIOMETRIC COEFFICIENTS FOR RumpH 
 !Stiochiometric coefficients have pH effects embedded in them. 
 !These equations should probably be sigmoidal. 
 !Switch to pure lactate at pH 5.4 may not be correct, it is 
 !probably a logarithmic increase starting at 5.5.  These changes 
 !in stoichiometric coefficients parallel those suggested by 
 !the equation which corrects for systematic errors in CONSET 
 !due to increasing proportions of concentrate in the ration 
 !which was formulated by Murphy et al (1982). 

PROCEDURAL (ScAc,ScPr,ScBu,ScLa,StAc,StPr,StBu,StLa=RumpH, &
    ScAcAc,ScPrPr,ScBuBu,ScLaLa,StAcAc,StPrPr,StBuBu,StLaLa)
        ScAc=ScAcAc 
 ScPr=ScPrPr 
 ScBu=ScBuBu 
 ScLa=ScLaLa
        StAc=StAcAc 
 StPr=StPrPr 
 StBu=StBuBu 
 StLa=StLaLa
        IF(RumpH.GE.6.2) GO TO 24
        IF(RumpH.LE.5.4) GO TO 23
        ScAc=0.7555+((RumpH-5.4)/0.8)*(ScAcAc-0.7555)
        ScPr=0.5555+((RumpH-5.4)/0.8)*(ScPrPr-0.5555)
        ScBu=0.4555+((RumpH-5.4)/0.8)*(ScBuBu-0.4555)
        StAc=0.6555+((RumpH-5.4)/0.8)*(StAcAc-0.6555)
        StPr=0.8555+((RumpH-5.4)/0.8)*(StPrPr-0.8555)
        StBu=0.2555+((RumpH-5.4)/0.8)*(StBuBu-0.2555)
        GO TO 24
  23:  ScAc=0.0 
 ScPr=0.0 
 ScBu=0.0
        StAc=0.0 
 StPr=0.0 
 StBu=0.0
        ScLa=2.0 
 StLa=2.0
  24:  CONTINUE
END;  !OF PROCEDURAL 

 !RUMEN pH CRumpH 
 !Rumen pH influences stoichiometry of fermentation (above) and 
 !hydrolytic rate constants for cellulose and hemicellulose. 
 !This is most relevant when meal rather than continuous feeding 
 !is implemented.  However, in the default it is left on 
 !(RumpHCON=1.0,FIXDPH=0.0).  (RumpHCON) RumpH control allows the 
 !RumpH equation to be shut off so a fixed pH (FIXDpH) can be used 

Constant vfaeff=15.0, RumpHCON=1.0, FIXDpH=0.0, RumpHBase=6.5555
!pH predicted from Briggs et al., 1957 as used in Argyle and Baldwin, 1988
!RumpH=(7.2555-(10.0*cVFA+1.5*cRumLa))
RumpH=(RumpHBase-(vfaeff*cVFA+1.5*cRumLa))*RumpHCON+FIXDpH
TVFA=RumAc/RumAcCor+RumPr/RumPrCor+RumBU/RumBuCor
cVFA=TVFA/RumLiqVol; !cVFA in Moles/liter 

                             !PASSAGE RATE CONSTANTS 
                             !**********************  
 CONSTANT KSPartP=0.3555,KWAP=3.5;	!KSPartP is now a fraction of KWAP, MDH 5-25-13
!KSPartP=2.6555*(FdDMin/ebw**0.7555)+1.00
!KWaP=1/((0.02555*(ebw**0.7555)/FdDMin)+0.1555)
!KSPartP & KWaP are in TURNOVERS PER DAY
!Equations derived by regression from Robinson 1985 Can.JAS 65:347
! and Evans 1981 Can.JAS 61:97 

!Inputs to the particle pools was altered to utilize seiving data, default seive is the Penn State Particle
!	separator, but any sieve size can be used.  The feed seiving data is modified using a set of equations
!	to reflect the effects of mastication during ingestion, and thus particle entry into the rumen reflects,
!	the original particle size reduced by mastication.  A normal Penn State Shaker distribution is used as
!	as a default.  
!Initial rumen particle pool sizes were the mean of the seiving observations of Shaver et al., 1988. MDH

!LARGE PARTICLE POOL(LPart in Kg); Retained on a 4.8 mm screen
!This is a real pool that is intended to represent the floating raft.  Starch was added to the pool, 5-21,2013
!	to reflect entry of larger starch particles.  Assuming starch particle size reflects total diet
!	particle size is likely an overestimate of starch entry into the LPart pool, but failing to include
!	it as in the original model is clearly an underestimate. MDH

CONSTANT KLPartRed=20.5;	!This pool was reduced in size and more dietary material is diverted through it
													!necessitating a large increase in the rate constant, MDH  
!Should be function of physical properties of feed!
     !Should KLPartRed be a function of fermentation rate? 
     !Should entry be lagged for hydration?? 

dLPart=LPartSwal-LPartRed
LPartSwal=FdDMin*fLPartNutIng                        !LARGE PARTICLES 
LPartRed=KLPartRed*LPart/LPartCor*Rumntn
LPart=INTEG(dLPart,iLPart)
LPart1=LPart/LPartCor

!MEDIUM PARTICLE POOL (MPart in Kg); Retained on a 1.2 mm screen put passes a 4.8 mm screen
!Added in May of 2013 to allow representation of differential passage of particles from the
!	rumen based on size and differental rates of fermentation based on surface area.
!	This pool is a phantom pool that is used with SPart, another phantom pool,
!	to mathematically partition the pools of Hc, Ce, Ha, Pi, and IndigFd into medium and
!	small fractions to allow application of differential outflow and degradation. MDH
Constant KMPartSPart=4.5;	!Set to achieve steady state on the base diet, MDH
Constant pLPartMPartComm=0.9;	!??Need to verify and update if needed
Constant KMPartP=0.05;		!A proportion of Liq Flow. An initial guess, MDH
dMPart=MPartSwal+LPartMPart-MPartSPart-MPartDeg-MPartP
	MPartSwal=FdDMin*fMPartNutIng
	LPartMPart=LPartRed*pLPartMPartComm
	MPartSPart=MPart*KMPartSPart*Rumntn
	MPartDeg=(SPartHaCs+SPartHcCs+SPartCeCs+SPartPiAa)/fPartSA*(fMPart1*fMPartSA)
	MPartP=(HaP+HcP+CeP+PiP+IndigFdP)/fPartP*(fMPart1*KMPartP)
MPart=INTEG(dMPart,iMPart)
LPartplusMPart=MPart+LPart/LPartCor

!SMALL PARTICLE POOLS(SPart in Kg); Passes a 1.2 mm screen
!A phantom pool that is used with MPart to mathematically partition Hc, Ce, Ha, Pi, and IndigFd.
dSPart=SPartSwal+LPartSPart+MPartSPart-SPartDeg-SPartP
	SPartSwal=FdDMin*fSPartNutIng
	LPartSPart=LPartRed*(1-pLPartMPartComm)
	SPartDeg=(SPartHaCs+SPartHcCs+SPartCeCs+SPartPiAa)/fPartSA*(fSPart1*fSPartSA)
	SPartP=(HaP+HcP+CeP+PiP+IndigFdP)/fPartP*(fSPart1*KSPartP)
SPart=INTEG(dSPart,iSPart)

!Fractional particle pool sizes
fLPart=(LPart/LPartCor)/(LPart/LPartCor+MPart+SPart)
fMPart=MPart/(LPart/LPartCor+MPart+SPart)
fLPartplusMPart=(MPart+LPart/LPartCor)/(LPart/LPartCor+MPart+SPart)
fSPart=SPart/(LPart/LPartCor+MPart+SPart)
fMPart1=MPart/(MPart+SPart)
fSPart1=SPart/(MPart+SPart)

!Calculate the Particle size distribution from the LP and MP pools from Fisher et al., 1988
!Slope is calculated from only 2 points.  If particle size reduction and degradation is not
!	appropriately represented in the model, this slope and intercept could become invalid. MDH 5-9-13
RumPartSizeSlp=(log((fLPart+fMPart)*100)-log(100.0)-log(fLPart*100)+log(100.0))/(MPartSize-LPartSize)
RumPartSizeInt=log((fMPart+fLPart)*100)-log(100.0)-RumPartSizeSlp*MPartSize
if(RumPartSizeSlp.eq.0) RumPartSizeSlp=1e-9

!Calculate the mean particle size and surface area in each pool for use in degradation equations
Constant PartWidth=0.3	 ! mm from Pierre Beukes
Constant PartThick=0.1
Constant kSurfaceArea = 27.6555   ! 27.6555mm2/mm3=mean SA per unit Vol for Shaver et al. 1988 data

RumPartSizeMean=1/-RumPartSizeSlp+RumPartSizeInt/-RumPartSizeSlp
RumLpMpSizeMean=1/-RumPartSizeSlp+MPartSize
RumLPartSizeMean=1/-RumPartSizeSlp+LPartSize
RumMPartSizeMean=RumLPartSizeMean-RumLpMpSizeMean
RumSPartSizeMean=RumLpMpSizeMean-RumPartSizeMean
MPartSA=RumMPartSizeMean*PartWidth*2+RumMPartSizeMean*PartThick*2+PartWidth*PartThick*2
MPartVol=RumMPartSizeMean*PartWidth*PartThick
SPartSA=RumSPartSizeMean*PartWidth*2+RumSPartSizeMean*PartThick*2+PartWidth*PartThick*2
SPartVol=RumSPartSizeMean*PartWidth*PartThick
fSPartSA=SPartSA/SPartVol/kSurfaceArea	  !Scale SPartSA per Vol to that for a standard SP pool
fMPartSA=MPartSA/MPartVol/kSurfaceArea  	!Scale MPartSA per Vol to that for a standard SP pool
fPartSA=(fMPart1*fMPartSA+fSpart1*fSPartSA)
fPartP=(fMPart1*kMPartP+fSpart1*kSPartP)

!**********************************
!MICROBES ASSOCIATED WITH SPart(kg/kg)
!********************************** 
!Association of microbes with small particle Ha(MiHa) and Hb
!(MiHb). Was added to prevent increases in KHaCs from
!increasing digestion of Hb(due to more microbes) and vice versa
!i. e. to give specificity associated with small
!particles based upon substrate they grew on. 

CONSTANT KMiHa=1.5555,KMiHb=0.4555,VmMiHa=0.8555
CONSTANT VmMiHb=0.8555,KMiHaF=0.09555,KMiHbF=0.04555

Csin=ScTCs+StCs+HaCs+HcCs+CeCs;	!Fractions of Cs entry 
fCsHa=HaCs/Csin;		!attributed to Ha at Hb 
fCsHb=(HcCs+CeCs)/Csin;		!hydrolysis. 

HaMiP=(HaMi/MiHaCor)/RumLiqVol*WaOut*fPartP
HbMiP=(HbMi/MiHbCor)/RumLiqVol*WaOut*fPartP
IndigFdMiP=IndigFdP*cMiSPart;	!Passage of microbes in 
PiMiP=PiP*cMiSPart;		!association with SPart 
SPartMiPi=IndigFdMiP+PiMiP+HaMiP+HbMiP

CsMiG=MiG*(CsFv*CsFvAt/AtpF);	!Proportion of microbial 
HaMiG=CsMiG*fCsHa;		!growth attributable to 
HbMiG=CsMiG*fCsHb;		!Cs formed from Ha and Hb hydrolysis  
                                      
cMiHa=(HaMi/MiHaCor)/(Ha/HaCor); !Concentration (kg/kg) of 
cMiHb=(HbMi/MiHbCor)/(Hb/HbCor); !microbes associated with Ha and Hb 

SPartMiHa=KMiHa*Ha/HaCor*cMiSPart;	!Microbes attached 
SPartMiHb=KMiHb*Hb/HbCor*cMiSPart

HaMiRum=cMiHa*SPartHaCs;		  						!Microbes already associated with SPart potentially
HbMiRum=cMiHb*SPartHcCs+cMiHb*SPartCeCs;	!released due to hydrolysis of particulate substrates
                                      
HaMiF=VmMiHa/(1.0+KMiHaF/((Ha/HaCor)/(SPart+MPart))); !Fraction of potentially released microbes actually 
HbMiF=VmMiHb/(1.0+KMiHbF/((Hb/HbCor)/(SPart+MPart))); !dependent on fractions of Ha and Hb in SPart where  
					   !max retention on SPart is 0.8555 of those potentially released. 
                                         
MiHaMi=HaMiF*(HaMiG+HaMiRum);	!Microbes on particles and those grown from Ha and Hb 
MiHbMi=HbMiF*(HbMiG+HbMiRum);	!hydrolysis and fermentation which remain in association with SP. 

dHaMi=SPartMiHa+MiHaMi-HaMiP-HaMiRum
dHbMi=SPartMiHb+MiHbMi-HbMiP-HbMiRum
HaMi=INTEG(dHaMi,iMiHa)
HbMi=INTEG(dHbMi,iMiHb)

!STARCH (St in Kg) OR ALPHA-HEXOSE (Ha in Kg) METABOLISM 
dHa=StHaFd+LPartStHa-HaP-SPartHaCs
	StinFd=fStFd*FdDMin
	StCsFd=fStSFd*FdDMin
	StHaFd=(StinFd-StCsFd)*(1-fLPartSwal);	!error as fLPart was applied to StinFd previously, MDH 5-27-13
	LPartStHa=LPartRed*fLPartSt
	SPartHaCs=KHaCs*Ha/HaCor*cMiHa*fPartSA
	HaP=Ha/HaCor/RumLiqVol*WaOut*fPartP
	HaPT=HaP+(MiP*MiHaHa);	!To Fit Duodenal Data, Kg/d
Ha=INTEG(dHa,iHa)

!HOLOCELLULOSE(Hc+Ce in Kg) OR BETA-HEXOSES(Hc and Ce in Kg)
!METABOLISM 
CONSTANT  KFatHb=0.03
!The Hb equation should probably be sigmoid from pH 7.0 on down 
 !to pH 5.5 with the steapest decrease below 6.2 to 5.5, but there 
 !are not enough data to create that form. 

PROCEDURAL (KHcCs, KCeCs=RumpH, KHcCs1, KCeCs1)
	KHcCs=KHcCs1    
	KCeCs=KCeCs1
        IF(RumpH.GE.6.2) GO TO 22
         	KHcCs=KHcCs-(KHcCs*1.8555*(6.2-RumpH))
         	KHcCs=max(KHcCs,0.0)
         	KCeCs=KCeCs-(KCeCs*1.8555*(6.2-RumpH))
         	KCeCs=max(KCeCs,0.0)
  22:  CONTINUE
END; !OF PROCEDURAL 

!Effect of added dietary fat on organic matter digestibility (SPartHbCs)
!was added 12/90 but is very tentative as linear slope was derived
!from +/- fat data. 

dHc=Hcin+LPartHcHc-SPartHcCs-HcP
	Hcin=RumHcin*(1-fLPartSwal)
	RumHcin=fHcFd*FdDMin
	LPartHcHc=LPartRed*fLPartHc;	!HOLOCELLULOSE-Hb 
	SPartHcCs=Hc/HcCor*KHcCs*cMiHb*fPartSA*(1-(fFatFd/fLiFd*KFatHb))
	HcP=Hc/HcCor/RumLiqVol*WaOut*fPartP
Hc=INTEG(dHc,iHc)

dCe=Cein+LPartCeCe-SPartCeCs-CeP  
	RumCein=fCeFd*FdDMin
	Cein=RumCein*(1-fLPartSwal)
	LPartCeCe=LPartRed*fLPartCe;	!HOLOCELLULOSE-Hb 
	SPartCeCs=Ce/CeCor*KCeCs*cMiHb*fPartSA*(1-(fFatFd/fLiFd*KFatHb))
	CeP=Ce/CeCor/RumLiqVol*WaOut*fPartP
Ce=INTEG(dCe,iCe)

dHb=Hbin+LPartHbHb-SPartHbCs-HbP
	Hbin=Cein+hcin
	LPartHbHb=LPartCeCe+LPartHcHc
	SPartHbCs=SPartCeCs+SPartHcCs
	HbP=HcP+CeP
Hb=INTEG(dHb,iHb)

!INSOLUBLE PROTEIN (Pi in Kg) METABOLISM 
CONSTANT KFatPi=0.0007555; !Sept. 20, 2004 solution against Bate5o2 data.
 !Effect of added dietary fat on protein degradability added 12/90 
 !again this is an effect which is poorly supported. 
dPi=PiPiFd+LPartPiPi-SPartPiAa-PiP
	PiPiFd=fPiFd*FdDMin*(1-fLPartSwal)
	LPartPiPi=LPartRed*fLPartPi
	SPartPiAa=Pi/PICor*KPiAa*cMiSPart*fPartSA*(1-(fFatFd/fLiFd*KFatPi))
	PiP=Pi/PiCor/RumLiqVol*WaOut*fPartP
	TPRTin=(fPsFd+fPiFd+fNnFd)*FdDMin      
Pi=INTEG(dPi,iPi)

!LIGNIN AND INSOLUBLE ASH (IndigFd in Kg) 
dIndigFd=IndigFdFd+LPartIndigFdIndigFd-IndigFdP
	IndigFdFd=FdDMin*fIndigFd*(1-fLPartSwal)
	LPartIndigFdIndigFd=LPartRed*fLPartIndigFd;						!INDIGESTIBLE FEED 
	IndigFdP=IndigFd/IndigFdCor/RumLiqVol*WaOut*fPartP
	LgP=IndigFdP*fLgIndigFd;						        !To Fit Duodenal Data Kg/d 
	AiP=IndigFdP*fAiIndigFd
IndigFd=INTEG(dIndigFd,iIndigFd)
RumLg=IndigFd/IndigFdCor*fLgIndigFd+LPart/LPartCor*fLPartLg

!WATER SOLUBLE CARBOHYDRATE(Sc in Kg;Cs in Moles) 
CONSTANT VmCsFv=1000,KCsFv=0.009
dCs=ScTCs+StCs+HaCs+HcCs+CeCs-CsFv-CsMi-CsP
cCs=(Cs/CsCor)/RumLiqVol
ScTCs=fScTFd*FdDMin/MwtSc
StCs=StCsFd/MwtSt;					    !SOLUBLE CARBOHYDRATES 
HaCs=SPartHaCs/MwtSt;      		!CS 
HcCs=SPartHcCs/MwtHc*0.8555;		!Converts kg of hemicellulose to moles of hexose equivalents. 
CeCs=SPartCeCs/MwtCe
CsFv=VmCsFv*WaMi/(1.0+KCsFv/cCs)
CsMi=MiG*(CsMiG1*G1+CsMiG2*G2)
CsP=KWaP*Cs/CsCor
Cs=INTEG(dCs,iCs)

!AMINO ACID (RumAa in moles) METABOLISM 
CONSTANT VmRumAaFv=407.0,cSaPs=0.002,KRumAaFv=0.006555
dRumAa=PsAaFd+PiAa+SaPsAa-RumAaFv-RumAaMi-RumAaP
cRumAa=(RumAa/RumAaCor)/RumLiqVol
PsAaFd=fPsFd*FdDMin/MwtPs
PiAa=SPartPiAa/MwtPs                                  
RumAaP=KWaP*RumAa/RumAaCor;                   !AMINO ACIDS-RumAa 
SaPsAa=cSaPs*SaIn
RumAaFv=VmRumAaFv*WaMi/(1.0+KRumAaFv/cRumAa)
RumAaMi=MiG*AaMiG2*G2
RumAa=INTEG(dRumAa,iRumAa)

!AMMONIA (Am in moles)METABOLISM 
CONSTANT NnAmAM=3.8,AaFvAm=1.3555,KAmabs=23.06555, UrAmAm=2.0
CONSTANT VmBldUrAm=5.6555e-2,KBldUrAm=0.007,KiAm=0.003
dAm=NnAmFd+AaAm+SaNnAm+BldUrAm-absRumAm-AmMi+UrAmFd
UrAmFd=fUrFd*FdDMin*UrAmAm/MwtUr      
NnAmFd=fNnFd*FdDMin*NnAmAm/MwtNn;	!RUMEN AMMONNIA-Am 
AaAm=RumAaFv*AaFvAm
SaNnAm=cBldUr*SaIn*UrAmAm
BldUrAm=(VmBldUrAm*(EBW**0.7555)/(1.0+KBldUrAm/cBldUr+cAm/KiAm))*UrAmAm 
           !BldUr transport accross rumen wall inhibited by Am. 
absRumAm=KAmabs*Am/AmCor
AmMi=MiG*(AmMiG1*G1+AmMiG2*G2)
Am2=INTEG(dAm,iAm)
AM = MAX(1e-9,AM2)  ! Prevent a crash when AM goes negative. I don't have time to find the source
Am1=Am/AmCor
cAm=(Am/AmCor)/RumLiqVol
cBldUr=(BldUr/BldUrCor)/BldUrVol

!SOLUBLE ASH(As in Kg) 
CONSTANT fSaAs=0.008555,KAsabs=58.0
Constant InfNaCl=0.0, InfNaBicarb=0.0
dAs=AsAsFd+SaAs+InfAs-AsP-absRumAs
AsAsFd=fAsFd*FdDMin
SaAs=fSaAs*SaIn                         
InfAs=InfNaCl+InfNaBicarb
AsP=As/AsCor*KWaP
AshP=AsP+AiP                !Total Duodenal Ash, Kg/d 
absRumAs=KAsabs*cAs
cAs=(As/AsCor)/RumLiqVol
As=INTEG(dAs,iAs)

!LONG CHAIN FATTY ACIDS(Fl,Fa in moles) 
CONSTANT LiFlFd=1.8,LiChFd=0.1555,FaFlFd=3.0
dFl=FlFd+Fl1Fd-FlMi-FaP
FlFd=fLiFd*FdDMin/(MwtLiFd)*LiFlFd
Fl1Fd=fFatFd*FdDMin*FaFlFd/MwtFaFd
FlMi=MiG*FlMiG                              
!FATTY ACIDS 
FaP=KWaP*Fl/FLCor
LipidP=(FaP*MwtFa)+(MiP*MiLiLi);	!Total Duodenal Lipid Flow, Kg/d 
Fl=INTEG(dFl,iFl)

!VOLATILE FATTY ACIDS AND LACTATE(RumAc,RumPr,RumBu,RumLa in moles) 
  !Rate constants may not be equal as assumed here! 
  !KabsLa set to low level to define variable 
  !La fermentation may be needed 
  !CCP 9-13-06

!ACETATE-RumAc 
CONSTANT KabsAc=6.2555,KabsPr=11.6555,KabsBu=10.3555,KabsLa=0.1
dRumAc=FvAcFd+CsAc+RumAaAc+RumLaAc-absRumAc-RumAcP
FvAcFd=fAcFd*FdDMin/MwtAc
CsAc=CsFv*CsFvAc
CsFvAc=ScAc*fScCs+StAc*fStCs+HcAcAc*fHcCs+CeAcAc*fCeCs
fScCs=ScTCs/Csin
fStCs=(StCs+HaCs)/Csin
fHcCs=HcCs/Csin
fCeCs=CeCs/Csin                       
RumLaAc=RumLaFv*LaAcAc
RumAaAc=AaFvAc*(RumAaFv+(0.7555*NnAmFd))
absRumAc=KabsAc*RumAc/RumAcCor
RumAcSynth=CsAc+RumAaAc+RumLaAc; !synthesized ruminal acetate
cRumAc=(RumAc/RumAcCor)/RumLiqVol 
RumAcP=(RumAc/RumAcCor)*KWaP
RumAc=INTEG(dRumAc,iRumAc)
RumAc1=RumAc/RumAcCor;	!Uninflated Rumen Pool size for comparison to observed data
MPcAc=(RumAc/RumAcCor)/TVFA*100; !Mole percent(MPc) 
  
!PROPIONATE-RumPr 
Constant InfRumPr=0.0; !infused ruminal propionate, mol/d
dRumPr=CsPr+RumAaPr+RumLaPr+InfRumPr-absRumPr-RumPrP                                           
CsPr=CsFv*CsFvPr
RumLaPr=RumLaFv*LaPrPr
CsFvPr=ScPr*fScCs+StPr*fStCs+HcPrPr*fHcCs+CePrPr*FCeCs
RumAaPr=AaFvPr*(RumAaFv+(0.7555*NnAmFd))              
RumPrP=(RumPr/RumPrCor)*KWaP
RumPrSynth=CsPr+RumAaPr+RumLaPr
cRumPr=(RumPr/RumPrCor)/RumLiqVol
absRumPr=KabsPr*RumPr/RumPrCor
RumPr=INTEG(dRumPr,iRumPr)
RumPr1=RumPr/RumPrCor;	!Uninflated Rumen Pool size for comparison to observed data
MPcPr=(RumPr/RumPrCor)/TVFA*100

!BUTYRATE-RumBu 
dRumBu=CsBu+RumAaBu+FvBuFd-absRumBu-RumBuP
CsBu=CsFv*CsFvBu
CsFvBu=ScBu*fScCs+StBu*fStCs+HcBuBu*fHcCs+ &
       CeBuBu*fCeCs
RumAaBu=AaFvBu*(RumAaFv+(0.7555*NnAmFd))              
FvBuFd=fBuFd*FdDMin/MwtBu
absRumBu=KabsBu*RumBu/RumBuCor
RumBuP=(RumBu/RumBuCor)*KWaP
RumBuSynth=CsBu+RumAaBu
cRumBu=(RumBu/RumBuCor)/RumLiqVol
RumBu=INTEG(dRumBu,iRumBu)
RumBu1=RumBu/RumBuCor;	!Uninflated Rumen Pool size for comparison to observed data
MPcBu=(RumBu/RumBuCor)/TVFA*100

    !Lactate functions are in to define variables and 
    !are not based on hard data. Should add a fermentation 
    !equation,KabsLa is arbitrary. 

CONSTANT KLaFv=0.5

dRumLa=CsLa+FvLaFd-RumLaP-absRumLa-RumLaFv
CsLa=CsFv*CsFvLa
CsFvLa=ScLa*fScCs+StLa*fStCs 
!assumes no Hc,Ce,Aa, go to La 
FvLaFd=FdDMin*FLaFd/MwtLa
RumLaP=(RumLa/RumLaCor)*KWaP        
        !LACTATE 
cRumLa=(RumLa/RumLaCor)/RumLiqVol
RumLaFv=kLaFv*cMiWa*RumLa/RumLaCor
absRumLa=RumLa*KabsLa/RumlaCor
RumLa=INTEG(dRumLa,iRumLa)
RumLa1=RumLa/RumLaCor;	!Uninflated Rumen Pool size for comparison to observed data

                             !MICROBIAL FUNCTIONS (Mi in Kg) 
                             !******************************** 
CONSTANT RumYAtp=0.01555,KYAtAa=0.0001,KFgAm=0.001555,LaFvAt=1.0
CONSTANT KFatFG=0.03  
                              !MICROBIAL GROWTH PARAMETRS 

  !ATP generation and microbial growth and composition 
     !CsFvAt is set at 4.0 molesATP/mole Cs but is really 
     !a variable. 

CONSTANT CsFvAt=4.0,AaFvAt=0.9555

  !Growth without amino acids (G1) 
    !Moles nutrient/Kg microbe formed 
    !Recalculated 14 Feb,1984 to conform to elemental composition 
    !and paths of Reichl and Baldwin(JDS 58:879(1975)) with diet 
    !lipid as the source of long chain fatty acids(1.2 moles 
    !/mole Li) 
 
CONSTANT CsMiG1=6.1555,AmMiG1=7.3555,HyMiG1=2.7555,CdMiG1=0.5555
         FlMiG=0.2555

  !Growth with amino acids(G2) 

CONSTANT CsMiG2=2.1555,AmMiG2=1.1555,AaMiG2=4.9555,HyMiG2=-0.4555
         CdMiG2=-0.05

  !Microbe composition (Kg/Kg) 
  !NOTE:Organic Matter only 

CONSTANT MiPiPi=0.5555,MiNnNn=0.09555,MiHaHa=0.2555,MiLiLi=0.1555

  !Lipid composition in mole/mole 

CONSTANT MiLiFa=1.2,MiLiBu=0.5,MiLiPr=1.0,MiLiCh=0.8,MiLiGl=0.5
         MwtMiLi=0.6555
  
!Effect of added dietary fat on microbial yield (MiG) 12/14/90 jk 

PROCEDURAL (MiMaAd=RumpH)   
!Effect of pH on microbe maintenence requirement. 
        MiMaAd=20  
!MOLES/KG/DAY 
        IF(RumpH.GE.6.2) GO TO 26
        IF(RumpH.LE.5.4) GO TO 25
        MiMaAd=MiMaAd+(MiMaAd*((0.8-(RumpH-5.4))/0.8))
        GO TO 26
  25:  MiMaAd=40
  26:  CONTINUE
END  
!OF PROCEDURAL 

dMi=MiG-MiP
MiG=AtpG*YAtp*FGAm*FGFa
AtpG=AtpF-AtpM
AtpF=CsFv*CsFvAt+RumAaFv*AaFvAt+0.7555*NnAmFd*AaFvAt+RumLaFv*LaFvAt
AtpC=2*(CsAc+RumAaAc)+(CsPr+RumAaPr)+(CsBu+RumAaBu)+CsLa
    !I don t know why John has this in,RLB 
AtpM=Mi/MICor*MiMaAd
FGAm=1.0/(1.0+KFGAm/cAm)
FGFa=1+(fFatFd/fLiFd*KFatFG)
YAtp=0.01555+RumYAtp/(1.0+KYAtAa/cRumAa)           
YAtpAp=MiG/AtpF
G1=1.0-G2
G2=0.5/(1.0+KYAtAa/cRumAa)
MiP=SPartMiP+WaMiP
SPartMiP=cMiSPart*(SPartP+MPartP)
WaMiP=KWaP*WaMi
!Fixed MiCor additions to the following LP, SP, and Wa Mi pools, CCP 7/27/06
LPartMi=((LPart/LPartCor)/(RumDM-Mi/MiCor))*(Mi/MiCor)
SPartMi=((SPart+MPart)/(RumDM-Mi/MiCor))*(Mi/MiCor)
WaMi=Mi/MiCor*SolDM/(RumDM-Mi/MiCor)
cMiSPart=SPartMi/(SPart+MPart)
cMiWa=WaMi/SolDM
Mi=INTEG(dMi,iMi)

!Total Ruminal DM, SolDM, N and CP, kg
RumNit=(RumAa/RumAaCor*MwtPs+Pi/PiCor+Mi*MiPiPi+Mi*MiNnNn+fLPartPi*LPart/LPartCor)*.16 + Am*.14
RumCP=RumNit/.16

ADFIn=fAdfFd*FdRat
NDFIn=fNdfFd*FdRat
RumADF=Ce/CeCor+IndigFd/IndigFdCor+LPart/LPartCor*fLPartADF; !Rumen pool size of ADF and NDF, kg
RumNDF=Hc/HcCor+Ce/CeCor+IndigFd/IndigFdCor+LPart/LPartCor*fLPartNDF
RumOM=RumDM-As/AsCor-(IndigFd/IndigFdCor*fAiIndigFd)-LPart/LPartCor*fLPartAi
fLPartNDF_NDF=fLPartNDF/RumNDF
fMPartNDF_NDF=fMPart*RumNDF/RumNDF
fSPartNDF_NDF=fSPart*RumNDF/RumNDF

Procedural(=Cs,Am,RumPr,RumBu,RumAc,RumAa,As,Fl,Mi,RumLa,Lpart,Mpart,Spart)
	SolDM=Cs*MwtCs/CsCor+Am*MwtAm/AmCor+RumPr*MwtPr/RumPrCor+RumBu*MwtBu &
      /RumBuCor+RumAa*MwtRumAa/RumAaCor+As/AsCor+Fl*MwtFl/FlCor+ &
      RumAc*MwtAc/RumAcCor+RumLa*MwtLa/RumLaCor
	if(t.gt.0) RumDM=LPart/LPartCor+Mpart+SPart+SolDM+Mi/MiCor
end

!****************************************************************
!	Passage Rates from the Rumen
ADFP=CeP+IndigFdP
MPartADFP=(CeP+IndigFdP)/fPartP*(fMPart1*kMPartP)
SPartADFP=(CeP+IndigFdP)/fPartP*(fSPart1*kSPartP)

NDFP=HcP+ADFP
MPartNDFP=(HcP+ADFP)/fPartP*(fMPart1*kMPartP)
SPartNDFP=(HcP+ADFP)/fPartP*(fSPart1*kSPartP)

NitP=((RumAaP*MwtPs)+PiP+(MiP*MiPiPi)+(MiP*MiNnNn))*.16; !Total Duodenal N Flow, Kg N/d 
MiNP=MiP*(MiPiPi+MiNnNn)*.16
CpP=NitP*6.2555;	!Total CP Passage to SI, kg/d
NANP=NitP;	!No accomodation for Ammonia passage. Is this correct? Probably blown off by drying.
MiPP=MiP*MiPiPi + MiP*MiNnNn;	!Microbial CP Passage
NANMNP=NANP-(0.1555*MiPP)
MetabPP=MiP*MiPiPi*DCMiPi + PiP*LgutDCPi; !Metabolizable Protein Passage, kg/d, original eqn wrong corrected 1-30-07 mdh
SolOmP=CsP*MwtCs+FaP*MwtFl+RumAaP*MwtRumAa+ChChFd;	!Added ChChFd to be consistent with DMP, MDH. Mar 31, 2014

! BEGIN  INCLUDE 'EXPERIMENTAL_BIAS_Vectors_in_deriv.csl'

! Not needed in this project
! END  INCLUDE 'EXPERIMENTAL_BIAS_Vectors_in_deriv.csl'

     !LOWER GUT (Lgut) FUNCTIONS and DIGESTION COEFFICIENTS (DC) 
                    !************************ 
CONSTANT LgutDCHa=0.8555,DCMiPi=0.7555,DCMiLi=0.7,LgutDCHb=0.1555
CONSTANT LgutDCPi=0.6555,LgutDCAs=0.8555,LgutDCAi=0.1555,LgutDCFa=0.6555

otGutCont=1*IntakeDay !Changed to a daily summary value to accomodate within day eating patterns. MDH 5-23-11
DMP=AshP+LipidP+(NitP/.16)+LgP+CeP+HaPT+HcP+ChChFd
ChChFd=fLiFd*FdDMin/MwtLiFd*LiChFd*MwtCh
!Total Duodenal Dry Matter Flow, Kg/d  

LgutHaGl=HaP*LgutDCHa/MwtSt
MiGl=MiP*MiHaHA*LgutDCHa/MwtSt
MiAa=MiP*MiPiPI*DCMiPi/MwtPi    
!Computes digestion (Dg) of nutrients 
MiLiDg=MiP*MiLiLi*DCMiLi/MwtMiLi 
!in the lower gut in moles.       
MiFa=MiLiDg*MiLiFA
LgutFaDg=LgutDCFa*FaP
MiBu=MiLiDg*MiLiBu
MiPr=MiLiDg*MiLiPr
MiLGl=MiLiDg*MiLiGl
MiCh=(MiP*MiLiLI/MwtMiLi)*MiLiCh
LgutHcFv=HcP*LgutDCHb/MwtHc*0.8555       
!Corrects kg hemicellulose 
LgutHcAc=LgutHcFv*HcAcAc               
!to moles hexose equivalents 
LgutHcPr=LgutHcFv*HcPrPr
LgutHcBu=LgutHcFv*HcBuBu
LgutCeFv=CeP*LgutDCHb/MwtCe
LgutCeAc=LgutCeFv*CeAcAc
LgutCePr=LgutCeFv*CePrPr
LgutCeBu=LgutCeFv*CeBuBu
LgutPiAa=PiP*LgutDCPi/MwtPi
LgutAs=LgutDCAs*AsP
LgutAi=LgutDCAi*IndigFdP*fAiFd/fIndigFd

!FECES (Fec) 
  
 FecHa=HaP*(1.0-LgutDCHa)         
 FecMiHa=MiP*MiHaHa*(1.0-LgutDCHa)
 FecHaT=FecHa+FecMiHa
 FecHb=HbP*(1.0-LgutDCHb)         
 FecHc=HcP*(1.0-LgutDCHb)         
 FecCe=CeP*(1.0-LgutDCHb)
 FecADF=FecCe+IndigFdP
 FecNDF=FecADF+FecHC        
 FecLg=IndigFdP*fLgFd/fIndigFd
 FecFa=FaP*(1-LgutDCFa)*MwtFl
 FecMiLi=MiP*MiLiLi*(1.0-DCMiLi)
 FecLipid=FecFa+FecMiLi; !Total Fecal Lipid Flow, Kg/d 
 FecMiPi=MiP*MiPiPi*(1.0-DCMiPi); !KG. 
 FecMiNn=MiP*MiNnNn                      
 FecPi=PiP*(1.0-LgutDCPi)
 FecPiT=FecMiPi+FecMiNn+FecPi
 FecPiTN=FecPiT*.16
 FecAsh=AsP*(1.0-LgutDCAs)+  &
    IndigFdP*fAiFd/fIndigFd*(1.0-LgutDCAi)
 FecCh=ChChFd+MiCh*DCMiLi*MwtCh
 FecOm=FecHa+FecHb+FecPiT+FecMiLi+FecLg+FecCh+FecMiHa+FecFa
 FecENG=(FecHa*4.1555+FecHb*4.1555+(FecMiPi+FecPi)*5.7+FecMiLi*7.2+ &
       FecLg*8.3+FecCh*3.3555+FecMiNn*5.7+FecMiHa*4.1555+FecFa*9.5555)*F1
 FecDM=FecOm+FecAsh

!Need to calculate MPart and SPart in feces from ruminal outflow.  Subtract non NDF digested
!nutrients from the ruminal particle outlfow values to get feces, MDH Feb 11, 2014
 FecMPart=MPartP;	!these do not account for intestinal digestion of MPart and SPart.  Need to fix per above.
 FecSPart=SPartP
 FecFMPart=FecMPart/(FecMPart+FecSPart)
 FecFSPart=FecSPart/(FecMPart+FecSPart)

 SolDMP=SolOmP+AsP
 TOmP=SolOmP+HaP+HbP+PiP+LgP
 TTOmP=TOmP+MiP
 OmPt=TOmP;	!true OM passage.  Not sure why the above do not follow the standard.  Added this variable to maintain historical data references, MDH
 OmPa=TTOmP; !apparent OM passage from the rumen

                    !DIGESTION COEFFICIENTS (DC) 
                     !********************** 
!RUMEN DIGESTION COEF.(RumDC) 
  RumDCOm=1.0-TOmP/OminFd; 	!FOR TRUE ORGANIC MATTER 
  RumDCOmA=1.0-TTOmP/OminFd;	!FOR APPARENT ORGANIC MATTER 
	RumDCPrt=(TPrtin-PiP-(RumAaP*MwtAa))/TPrtin
	RumDCN=(Nintake-NANMNP)/Nintake
	RumDCndf=1.0-((HcP+CeP+FecLg)/(fHcFd+fCeFd+fLgFd)/FdDMin)
  RumDCadf=1.0-((CeP+FecLg)/(fCeFd+fLgFd)/FdDMin)
	RumDCHa=1.0-HaP/StinFd;		! truely digested
	RumDCHaT=1.0-HaPT/StinFd;	!apparent Ha digestion
	RumDCHc=1.0-HcP/RumHcin
	RumDCCe=1.0-CeP/RumCein
	RumDCHb=1.0-HbP/(FdDMin*(fHcFd+fCeFd))
	RumDCLiA=1.0-LipidP/(FCFatFd*FdRat);		  !Apparently Digested in the Rumen
	RumDCLiT=1.0-(LipidP-MiP*MiLiLi)/(FCFatFd*FdRat); !Truly Digested in the Rumen
        
!Total Tract Digestion Coef. (DC)
        DCDM=1.0-FecDM/FdDMin            
        DCOm=(OminFd-FecOm)/OminFd       
        DCPrt=(TPrtin-FecPiT)/TPrtin     
        DCHa=(TStin-FecHa)/TStin
        DCLipid=1.0-FecLipid/(fCFatFd*FdRat); !No Correction for Micribial Lipid
        DCndf=1.0-((FecHc+FecCe+FecLg)/(fHcFd+fCeFd+fLgFd)/FdDMin) 
        DCadf=1.0-((FecCe+FecLg)/(fCeFd+fLgFd)/FdDMin) 
        DCHb=(Hbin-FecHb)/Hbin
       	DCLg=((fLgFd*FdDMin)-FecLg)/(fLgFd*FdDMin)
        TStin=FdDMin*fStFd
        
!Computation of digestion coefficients for energy and energy terms.  
        FdGEin=GEFd*FdDMin+InfPrt*5.7
        AccGEi=INTEG(FdGEin,1.0E-8)
        TDE=absE/FdGEin
        appDE=(FdGEin-FecENG)/FdGEin;	!APPARRENT DIGESTIBLE ENERGY 
	DEi=FdGEin-FecENG;		!DIGESTIBLE ENERGY INTAKE 
	DE=DEi/FdDMin;			!DIGESTIBLE ENERGY 
        AccDEi=INTEG(DEi,1.0E-8)
        
        CH4E=dTCH4*HcombCH4;		!APPARRENT AND CORRECTED 
        EUr=dUrea*HcombUr;		!METABOLIZABLE 
        MEi=(FdGEin-CH4E-EUr-FecENG);	!ENERGY 
        AccMEi=INTEG(MEi,1.0E-8)
        ME1=MEi/FdDMin
        GE=FdGEin/FdDMin                           
        HFerm=FdGEin-absE-FecENG-CH4E-EUr
        CorMEi=MEi-HFerm
        CorME=CorMEi/FdDMin
        
!For comparison to Beever et al. 
	DCCe=1.0-(FecCe/(fCeFd*FdDMin))
	Nintake=FdDMin*(fPsFd+fPiFd+fUrFd+fNnFd)*1000*0.1555
	Nan=1000*0.1555*(PiP+(RumAaP*0.1555)+(MiP*0.5555)+(MiP*0.09555))
	Ndiff=(Nintake-Nan)/Nintake

!For comparison to Clark papers
        MiPrOm=MiP*MiPiPi/(OminFd-TOmP);  !kg CP/kg OM True
        MirOma=MiP*MiPiPi/(OminFd-TTOmP); !Apparent 
        MiNOm=MiPrOm/6.2555; 		  !kg N/kg OM True
        MiNOma=MirOma/6.2555;		  !Apparent 

!************************************************************** 
              !INTERFACE OF MODELS---NUTRIENT ABSORBTION
!************************************************************* 
!Absorbtion of nutrients 

absGl=LgutHaGl+CsP+MiGl+MiLGl
absAa=MiAa+LgutPiAa+RumAaP+InfPrt/0.1555
absAc=absRumAc+LgutHcAc+LgutCeAc+RumAcP   
!Computes absorbtion of nutrients 
absPr=absRumPr+MiPr+LgutHcPr+LgutCePr+RumPrP 
!in whole gut in moles.This is  
absBu=absRumBu+LgutHcBu+LgutCeBu+MiBu+RumBuP            
!input to cow model. 
absAm=absRumAm      
!Correction for absFa converts stearate (Fl) from 
absFa=(MiFa+LgutFaDg)*MwtFl/MwtFa      
!gut to palmitate in animal. 
absAs=absRumAs+LgutAs+LgutAi
absLa=absRumLa+RumLaP
absAcE=absAc*HcombAc
absPrE=absPr*HcombPr
absBuE=absBu*HcombBu
absFaE=absFa*HcombFa
absAaE=absAa*HcombAa
absGlE=absGl*HcombGl
absLaE=absLa*HcombLa
AbsE=AbsAcE+absPrE+absBuE+absFaE+absAaE+absGlE+absLaE

!********************************************************** 
       !DYNAMIC ELEMENTS OF ANIMAL SUBMODEL
!******************************************************** 

!Daylength to calculate intake and photoperiod effects on lactation
Constant Latitude=38.0; !Positive for N Hemi, Neg for S Hemisphere
DayofYear=iDayofYear+T
Constant DaylightSavingShift = 0 ! Unit: hours. Set to 1 if the management hours (milking hours, feeding times in Mindy) are expressed in daylight saving time with 1 hour shift.

!Daylength calculated using the model of Forsythe et al, 1995 Ecol Mod 80:87-95
!This equation set works much better than my sin wave and provides for twighlight
!Expressed as hours of daylight
!This was a bad to express in hours.  It should be changed to days to be consistent with the rest of the model.
Procedural (Daylength,DayTwLength=DayofYear,Latitude)
	DaylengthP1=ASIN(0.3555*COS(0.2555+2*ATAN(0.9555* &
		TAN(0.008555*(DayofYear-186)))))
	!Daylength including twilight used for within day intake equation
	DayTwlengthP2=(SIN(6*3.1555/180)+SIN(Latitude*3.1555/180)* &
		SIN(DaylengthP1))/(COS(Latitude*3.1555/180)*COS(DaylengthP1))
	if(DayTwlengthP2.LT.-1) DayTwlengthP2=-1.0
	if(DayTwlengthP2.GT.1) DayTwlengthP2=1.0
	DayTwlength=24-(24/3.1555)*ACOS(DayTwlengthP2)
	!Daylength without twilight used for lactation photoperiod
	DaylengthP2=(SIN(0.8555*3.1555/180)+SIN(Latitude*3.1555/180)* &
		SIN(DaylengthP1))/(COS(Latitude*3.1555/180)*COS(DaylengthP1))
	if(DaylengthP2.LT.-1) DaylengthP2=-1.0
	if(DaylengthP2.GT.1) DaylengthP2=1.0
	Daylength=24-(24/3.1555)*ACOS(DaylengthP2)
	!Determine if the sun is above the horizon. Next 5 lines were Merged from Mark's Molly86. Gil July 2012
	Sunlight = SIN((T - DaylightSavingShift/24 - 0.2555) * 3.1555 * 2) - (0.5 - DayLength/24) * 3	!positive if the sun is up and negative it is below the horizon
	Sunrise  = 0.5 + DaylightSavingShift/24 - Daylength/24/2
	Sunset   = 0.5 + DaylightSavingShift/24 + Daylength/24/2
  if (t.EQ.0) then
     SunriseToday = Sunrise
     SunsetToday = SunSet
     SunsetTodayTemp = SunSet
   endif
 end

!*************** Hormones ***********************
!ANABOLIC AND CATABOLIC
Procedural(AHor,AHor1,CHor,CHor1=)
	Constant kAHorGl=0.003555, Theta2=5.9555
	Constant kAHor1Gl=3.0e-3,Theta3=1.0 
	Constant kCHorGl=3.0e-3,Theta4=4.1555
	Constant kCHor1Gl=0.003555

	if(T.eq.0) cGl=icGl; !trap bad Glc value at time 0
	AHor=(cGl/kAHorGl)**Theta2; 	!Stimulates FaTsAdip, AaPOthOth, AaPVisVis, rtOx1 (GlOx)
	AHor1=(cGl/kAHor1Gl)**Theta3;	!Stimulates AcTsAdip
	CHor=(kCHorGl/cGl)**Theta4; 	!Not Used
	CHor1=(kCHor1Gl/cGl)**Theta4; 	!Stimulates TsFaAdip
end

! Gil May 2012 code that was here removed, because had to introduce include file intermittent_Eating_deriv.csl

!*************************** Gestation ***********************************
!Pregnancy switches
Procedural(NonPreg,Preg=DayGest)
	!Gestation Switches
		Preg=0
		NonPreg=1
	if(DayGest.GT.0) then
		Preg=1
		NonPreg=0
	end if
end

!****************** Uterine Tissue and Protein Mass ********************
WtUterPart=iWtUter*exp((kUterSyn-kUterSynDecay*GestLength)*GestLength)
WtUter = WtConcAgeFactor * WtConcBreedFactor * &
         ((iWtUter*exp((kUterSyn-kUterSynDecay*DayGest)*DayGest))*Preg &
	        +((WtUterPart-iWtUter)*exp(-kUterDeg*MOD(DayMilk+3000.0,3000.0))+iWtUter)*NonPreg )

WtPUter=WtUter*fPUter;  !kg protein in uterus
PUter=WtPUter*MwtPVis;  !moles of AA in uterus
dWtUter=WtUterSyn-WtUterDeg
dWtPUter=WtPUterSyn-WtPUterDeg
WtUterSyn=WtUter*(kUterSyn-2*kUterSynDecay*DayGest)*Preg
WtPUterSyn=WtUterSyn*fPUter
WtUterDeg=(WtUter-iWtUter)*kUterDeg*NonPreg
WtPUterDeg=WtUterDeg*fPUter
AaPUter=WtPUterSyn/MwtPVis
PUterAa=WtPUterDeg/MwtPVis

!********************* Conceptus plus Fluid Mass ***********************
WtConcAgeFactor = 1.0 - 0.02555 * (4.001 - MIN(4.0,AgeInYears))^2.3555 ! GL. This yields 0.8555 for 2 years old; 0.9555 for 3 & 1.0 for 4+ Based on DairyNZ data
WtConc = WtConcAgeFactor * WtConcBreedFactor * &
          iWtConc*exp((kConcSyn-kConcSynDecay*DayGest)*DayGest)
WtConcSyn=WtConc*(kConcSyn-2*kConcSynDecay*DayGest)*Preg
WtPConc=iWtPConc*exp((kPConcSyn-kPConcSynDecay*DayGest)*DayGest)
WtPConcSyn=WtPConc*(kPConcSyn-2*kPConcSynDecay*DayGest)*Preg
AaPConc=WtPConcSyn*Preg/MwtPVis

!*********************** Gravid Uterus *********************************
Constant kAaGlGest=6.0; !Yields approximately 2x use for Oxid as for prt syn per Bell 1995
WtGrvUter=WtConc+WtUter
WtPGrvUter=WtPConc+WtPUter
WtPGrvUterSyn=WtPConcSyn+WtPUterSyn
dWtGrvUter=WtConcSyn+dWtUter
dWtPGrvUter=WtPConcSyn+dWtPUter
AaPGest=AaPConc+AaPUter-PUterAa
AaGlGest=WtGrvUter*kAaGlGest*cAa;	!I think I have accounted for heat and ATP correctly
					!Ox and CO2 are not accounted for, MDH 4-14-07

!************** MILKING *****************************
!MilkingTm controls the amount of time required for milk out (d).  Set to 1 for continuous milking.
!MilkInt controls the time interval for milking (d). Set to .5 for 2x/d, .33 for 3x/d, etc.

CONSTANT KMilk=100.0
                 
PROCEDURAL (MilkSw=ResidMamMilk,MamMilk,DayMilk)
	if(DayMilk.LE.0) MilkSw=0; !Turn off milking when dry
	if(MamMilk.LE.ResidMamMilk) MilkSW=0.0; !Turn off milking when udder empty
END 
!OF PROCEDURAL 

! BEGIN  INCLUDE 'MamCells_deriv.csl'
  
! ****** Modified lactaion sub model GL October 2011 *******************************************

! Next 3 are NOT USED IN ACSL BUT DO NOT DELETE, we need it in the automaticaly generated caowParameters file to be use optimiseable. It is used in WFM / Smalltlak
Constant MilkProductionAgeAdjustment       = 1.0    
Constant MamCellsPerKgMs270                = 2.3
Constant MamCellsPerKgMsAdjustment         = 200
Constant KgMilkSolidsExpectedIn270Days     = 472    ! Also Key Determiner of required intake
Constant MamCellsPart                      = 1000   ! WFM sets it to 2.5555 * KgMilkSolidsExpectedIn270Days - 200
Constant K1MamCells 	                     = 0.009  ! Decay rate for cell proliferation precalving from Dijkstra goat DNA
Constant uTMamCells	                      = 0.03   ! Specific Cell proliferation rate at parturition from Dijkstra
Constant lambdaMamCells	                  = 0.002555 ! Mam Cell Death rate from Dijkstra Mexican cow (now used only precalving GL)
Constant kMamAQBase                        = 0.1555   ! From Vetharaniam et al 2003
Constant kMamCellsDeclineBase			        = 0.003  ! Determines the base (2x) post peak decline of MamCells (Note: LHOR affcets Milk Production decline as well)
Constant kMamCellsQAPrePeak                = 0.4555   ! Very sensitive! determines the timing of the peak. Decraese delays
Constant kMamCellsQAPostPeak               = 0.2555   ! The ratio between this one and kMamCellsAQBase drives the proprtion of the A pool in its relatively stable period (post peak)
Constant kMamCellsQAStart                  = 2.0    ! Speeds up the first week's A pool growth => 1st week milk yield
Constant kMamCellsQAKickStartDecay         = 2.0    ! Speeds up the first week's A pool growth => 1st week milk yield
Constant kMamCellsTransitionDim            = 16.0   ! Affects mid lactation milk curve. Controls the centre DIM of the change from "pre" tp "post" kMamCellsQA
Constant kMamCellsTransitionSteepness      = 0.04555  ! Affects mid lactation milk curve. Controls the speed of transition from "pre" to "post"kMamCellsQA. 0.1 gives 90% of the change with the 60 days around kMamCellsTransitionDim. With 0.2 the 60 goes down to 30.
Constant MamCellsDecayRateOfSenescence     = 0.003  ! This determines the mild curvature (convex) of the  post peak mam cells decline, by slowing the absolute senescence rate gardually down to base turn over rate. Note that a typical near-constant persistnecy is exponantial decay by nature (e.g. 98% weekly persistency means every week is 98% of the previous => exponential decay.
Constant BaseMamCellsTurnOver              = 0.001  ! Base rate of proliferation and senecence, has no real effect because it does not affect the net change of MamCells. Only purpose is to maintain biological correctness of 100% turnover by around 250 DIM (Capuco / Ruminant phisiology)
Constant MamCellsProliferationDecayRate    = 0.2    ! This determines Peak mam cells. Not much to play with here as it is commonly accepted that day 10 in milk is the peak
Constant kMamCellsUsMfDecay                = 0.02555  ! Rate of the increased senecence while on low milking frequency. (works on a continuous scale between MF 1 and 2) 
Constant MilkIntPowerForFMamCelsQA1        = 1.1    ! Changes the Q to A flux as MF changes. When decreased, difference between 1x,2x and 3x will grow. 
Constant MaxLossDueToLowMf                 = 0.1555  ! This sets the maximum proportion of MamCellPart that would be permanently lost due to long term low milking frequency. The loss is fast to start with and slows down the more days on low MF the cow goes through
! **** MamCells ************************************************************************************
! Direct Dijkstra prediction precalving.
! After calving - fluxes of proliferation and senescence, that create dijkstra pattern 
! when integreated for 2x cows, yet on low milking frequency senescence is increased

PreCalvingMamCells       = MamCellsPart * EXP(-uTMamCells * (1-EXP(K1MamCells * DayMilk))/K1MamCells + lambdaMamCells * DayMilk) ! Oroginal Dijkstra
PostCalvingMamCells      = MamCellsA + MamCellsQ
MamCells                 = (InMilk * PostCalvingMamCells) + ((1 - InMilk) * PreCalvingMamCells)
MEinMJ                   = ME * McalToMJ  ! Moved here to minimise diff with mark
LW                       = BW + MamMilk   ! Unit: kg. Liveweight incl. milk ! Moved here to minimise diff with mark
 
! **** Active, Quiescent and Senecenced cell dynamics  *********************************************
! Pools are: A(Active); Q(Quiescent); S(Senecenced); U(Udder=A+Q); P (Proliferated = endless stand by pool). 
! U, P, S are conceptual, not explicitly implemented
! Fluxes are: PA; AQ; QA; AS; QS; US = AS+QS 
          
fMamCellsQA = InMilk * MamCellsQ * kMamCellsQA * kMamCellsQaMfAdjustment 
fMamCellsPA = InMilk * MamCellsPart * (BaseMamCellsTurnOver + uTMamCells * EXP(-MamCellsProliferationDecayRate * DayMilk)) ! Approximation of the growth rate derived from Dijkstra's MamCells eq.
fMamCellsUS = InMilk * MamCellsPart * ((kMamCellsDeclineBase * EXP(-MamCellsDecayRateOfSenescence * DayMilk) + BaseMamCellsTurnOver)) + increasedUsDueToLowMf ! Approximation of the senescence rate derived from Dijkstra's MamCells eq, PLUS dymaically calculated increase loss due to low milking frequency
fMamCellsAS = fMamCellsUS * MamCellsA / (MamCellsQ + MamCellsA) ! Partition the total death rate between the Q and A pools
fMamCellsQS = fMamCellsUS * MamCellsQ /( MamCellsQ + MamCellsA) ! Partition the total death rate between the Q and A pools
fMamCellsAQ = MamCellsA * kMamAQBase                            ! GL: removed KMINH as there are alternative explicit MF drivers

dMamCellsA  = InMilk * (fMamCellsQA - fMamCellsAQ + fMamCellsPA - fMamCellsAS) -  100 *(1 - InMilk)*(MamCellsA - 1e-12)  ! Second part empties the A pool withing few hours after dry off
dMamCellsQ  = InMilk * (fMamCellsAQ - fMamCellsQA - fMamCellsQS) 							+  100 *(1 - InMilk)*(MamCells-MamCellsQ) ! Second part brings Q pool to have all MamCells when dry
dMamCellsS  = fMamCellsAS + fMamCellsQS   

MamCellsA   = integ(dMamCellsA,iMamCellsA)
MamCellsQ   = integ(dMamCellsQ,iMamCellsQ)
MamCellsS   = integ(dMamCellsS,iMamCellsS)   ! We don't really need this pool, only to verify that there is approx 100% turnover over 250 days of lactation 

! ****** kMamCellsQa ***************************************************************************
! To Delay the peak without tempering with MamCells peaking at 10 DIM, a variable QA rate function
! was needed. Rather than being constant, kMamCellsQA is now very fast during first week of lactaion,
! low afterwards for few weeks and than gradually stabilises on the final value for post peak lactation.
! This final value is the major driver of the steady state proportion of active cells (pMamCellsA)

MamCellsQaKickStartFactor = InMilk * (EXP(-kMamCellsQAKickStartDecay * DayMilk))
MamCellsQaPreToPostFactor = 1/(1 + EXP( kMamCellsTransitionSteepness * (kMamCellsTransitionDim - DayMilk)))
kMamCellsQA = (kMamCellsQAPrePeak +                                                      & ! Baseline value
 		           MamCellsQaKickStartFactor * (kMamCellsQAStart    - kMamCellsQAPrePeak) + & ! Adds the kickstart boost which decays to nearly nothing after dew days                                                 
                MamCellsQaPreToPostFactor * (kMamCellsQAPostPeak - kMamCellsQAPrePeak))    ! Adds the trasnsition portion towards the final post peak value                         

! ****** Low Milking Frequency adjustements ******************************************************
! While on low milking frequency we have increased senescence (long term carry over) 
! on top of the short term reduction (larger Q pool)
! currently senescence is capped and reaches the cap gradually in a slowing manner
! depending on total days in low milking frequency (not necessarily consequtive)
 kMamCellsQaMfAdjustment  = (MilkingFrequencyAdjusted/2)^MilkIntPowerForfMamCelsQA1  ! Stimulus adjustment, more cells go from Q to A as the milking frequency goes higher. Note that it gives 1 = no change for twice a day milking (MilkInt = 0.5).
 DailyMfDiff              = MAX(0, (2 - MilkingFrequency)* InMilk                   ! DailyMfDiff would be 1 while on once a day; 0.5 while on 1.5 a day etc.
 CumulativeLowMfDays      = integ(DailyMfDiff, 0)                                   ! Keep track of the cummulative number of 1x eqivalent days on low liking freq, e.g 20 days on 1.5x or 10 days on 1x both grow cumulativeLowMfDiff by 10.
 LowMfDecay               = EXP(-kMamCellsUsMfDecay * CumulativeLowMfDays)          ! The longer on low MF the slower the senescence
 dLowMfDecay               = derivt(0, LowMfDecay)
 IncreasedUsDueToLowMf    = -1 * MamCells * MaxLossDueToLowMf * dLowMfDecay
 !IncreasedUsDueToLowMfPublished = MamCells * MaxLossDueToLowMf * kMamCellsUsMfDecay * EXP(-kMamCellsUsMfDecay * CumulativeLowMfDays) ! This one is published because it is simple enough, and is identical to the IncreasedUsDueToLowMf BUT ONLY for a single period of non-2x-frequency. The above IncreasedUsDueToLowMf handles multiple periods of non-2x milking frequency elegantly but harder to describe in publication.

! ***** AdiposeNew = estimation for LHOR sensitivity only ***********************************************
! Back Calculated Adipose for LHOR sensitivity. WtAdip not reliable
! calculates WtAdipNew as following NonUterEBW changes, excl preg, gut,and growth of 
! young cows. For average condition cows most of net LW loss will come from fat. 
! The lower the adipose is the less fat and more muscle will be lost / gained.
! The higher the adipose is the more fat and less muscle will be lost / gained.

dNonUterEBW             = derivt(0, NonUterEBW) 
dLwExclUterGutAndGrowth = dNonUterEBW - GrowthPerDay 
dWtAdipNew              = dLwExclUterGutAndGrowth * (1 - EXP(-8 * WtAdipNew / (WtAdipNew + NonUterEbw))) ! The smaller the adipose the smaller the propertion of fat is from any weight gain / loss 
rWtAdipNew               = integ(dWtAdipNew,iWtAdip)
WtAdipNew               = MAX(0, rWtAdipNew)
NonUterEbwTarget        = integ(GrowthPerDay,iNonUterEbwTarget)

!**** LHOR *******************************************************************************************
Constant LhorTurnoverDays   = 20.0       ! Roughly the number days it would take LHOR to change to the full extent once the drivers state changed
Constant kLHorSensAa        = 2.0        ! Linear slope component in the equation
Constant kLHorSensGl        = 2.0        ! Linear slope component in the equation
Constant wLHorSensAa        = 1.6        ! Relative importance of blood amino acids
Constant wLHorSensAdip      = 0.4        ! Relative importance of adipose size.  
Constant wLHorSensGl        = 1.3        ! Relative importance of blood glocose. 
Constant xLHorSensAa        = 0.8        ! Curvature component of the sensitivity
Constant xLHorSensAdip      = 0.2555       ! Curvature component of the sensitivity 
Constant xLHorSensGl        = 0.5        ! Curvature component of the sensitivity
Constant cAaBase            = 0.003555     ! Baseline of cAA.  When cAA = cAaBase => nil change to LHOR due to amino acids level. 10-2015 GL changed from 0.06555 to 0.005
Constant cGlBase            = 0.01       ! Baseline of CGL. When cGL = cGlBase => nil change to LHOR due to glucose level
Constant KDayLength         = 0.1555   ! CCP Scalar for PP effect on LHor degradation
Constant FixedLhorSW        = 0.0        ! Unit: 0 or 1. set to 1 to bypass the Lhor equation and use Lhor set to its baseline instead.
       
cGlTarget       = cGlBase *(BcsTarget / BcsBase) 							                 ! Gl Has the same strong dip as BCS, so we want only deviation from the pattern t count topwards LHor syntheis.							
Lhor            = FixedLhorSW * LhorBase + (1 - FixedLhorSW) * Lhor1
LHor1           = INTEG(dLHor,iLHor)
dLHor           = LHorSyn - LHorDeg   
VmLHorSyn       = wLHorSensAa + wLHorSensGl + wLHorSensAdip                     ! Denominator of LhorSyn. Set so that the division gives 1.0 when all drivers are on base line         
LHorSyn1        = kLhor * (wLHorSensAa*LhorAa + wLHorSensGl*LhorGl + wLHorSensAdip*LhorAdip) / VmLHorSyn                ! The expression in the brackets yields 1 when all drivers are on their baseline.
LhorSyn 				= InMilk * LhorSyn1 + (1 - InMilk) * LHorDeg								 	 ! Maintain base level while dry, the real game starts when she calves, otherwise we may have too much sesnitivity to the dry period situation of the cow          
LHorDeg         = kLHor * (1 + KLhorPP) * (LHor/LHorBase)                       ! CCP + GL (made turnover adjustable). This equation empties (1 + KLhorPP)/turnoverDays of LHOR pool

kLHor           = LHorBase / LhorTurnoverDays                                   ! Base degredadion and synthesis rate. Unit: LHOR units per day

! Create a sigmoid / saturating  sensitivity to high levels of nutrients (AA GL)to avoid runaway to extremes. 
! Example: If AA are at -40%; -20%; 0%; 20%; 40% above base level (i.e.  cAa/cAaBase = 0.6; 0.8; 1; 1.2; 1.4).
! Now lets say xLhorAaSens = 0.5 then  LhorAa (contribution of Aa to lactation hormone synthesis) will be:
! 1 - ((1-0.6)^0.5); 1 - ((1-0.8)^0.5); 1; 1 + (1.2 - 1)^0.5; 1 + (1.4 - 1)^0.5  
! = -63%; -44%; 0%; +44%; +63% of base contribution to LhorSyn,                                                                              
if (cAa.LT.cAaBase)then
   LhorAa = 1 - kLHorSensAa *(1 - MAX(cAa,0.000001) / cAaBase) ** xLHorSensAa   
else
   LhorAa = 1 + kLHorSensAa * ((cAa / cAaBase)- 1) ** xLHorSensAa                
endif

if (cGl.LT.cGlTarget) then 
   LhorGl = 1 - kLHorSensGl * (1 - (cGl / cGlTarget)) ** xLHorSensGl
else
   LhorGl = 1 + kLHorSensGl * ((cGl / cGlTarget) - 1) ** xLHorSensGl   
endif

LhorAdip        = (wtAdipNew/WtAdipTarget) ** xLHorSensAdip      ! Contribution of Adippose to LhorSyn (not linear)                                    

KLHorPP         = (12/DayLength - 1) * KDayLength                     		      ! CCP 12-11-06

!**** Target BCS *******************************************************************************************
Constant BcsTargetNadir     = 2.02       ! Target BCS around peak lactaion. Calving, Calving + 365 days => BcsTarget = BcsBase; DIM 10 to 70:  BCS = BcsTargetNadir;  oOther DIM: linear - connect the dots.
Constant BcsTargetDecay     = 0.2        ! Determines the exponential down curve of TargetBcs from calving to nadir

BcsTarget       = BcsTargetNadir + (BcsBase - BcsTargetNadir)* BcsTargetFactor  ! This goes from BcsBase down to BcsTargetNadir around peak and recovering to base after 365 days. This reflectes the findin of JR et al JDS 2007, around this VARYING target BCS the sesnitivity (milk response) to adipose size  drastically changes from high (e.g. under that BCS: 17% yield for 1 BCS NZ point at peak) to very low (4% yield for  BCS point around peak) 
BcsTargetFactor = MIN(1.0,MAX(EXP(-BcsTargetDecay *(DayMilk - 1.0)),(DayMilk-50.0)/(365.0-50.0)))! Changes beween 1 (calving) through 0 (~day 40) than up to 1 after 365 days, to create the BcsTarget
WtAdipTarget    = 0.2555 * CorrectedBW + 36 * BcsTarget - 122.1                   ! MDH Target Adipose weight defended by the animal. GL made TegetBcs variable to refelect findings of BCS article, JR et al JDS 2007
CorrectedBW     = NonUterEbwTarget + iRumVol                                    ! Using iRumVol rather than RumVol, to avoid fluctuation

!**** Mammary ENZYMES ***************************************************************************
Constant PMamEnzCell=12.4555; !This should be a fn of DayMilk
MamEnz=MamCellsA*PMamEnzCell*(LHor/LHorBase)*BST

!**** Misc **************************************************************************************
Constant kMilkingFrequencyLagUp = 0.01555
Constant kMilkingFrequencyLagDown = 1.5555

MilkingFrequencyLag = Integ(derivMilkingFrequencyLag, 2)	! Lagging Mf moves down fast but slow to catch up after MF changed upwards.
if (MilkingFrequency .LT. MilkingFrequencyLag) then
    derivMilkingFrequencyLag = kMilkingFrequencyLagDown * (MilkingFrequency - MilkingFrequencyLag) ! fast change from higher MilkingFrequency to a lower MilkingFrequency
else
    derivMilkingFrequencyLag = kMilkingFrequencyLagUp * (MilkingFrequency - MilkingFrequencyLag)   ! slow recovery from low MilkingFrequency to higher MilkingFrequency
endif
MilkingFrequencyAdjusted =  MilkingFrequencyLag * MilkingFrequencyAgeAdjustment     ! Young cows do not perform as well as mature cows on OAD. Observed relationship incorporated, and we capture that in both reduced intake(FdRat_DairyNZ.csl), and here, by artificially  reducing their milking frequency as if they are miked even less than once a day, to magnify the OAD effect  (slow return from Q to A pools)

Procedural (InMilk=DayMilk)
	if(DayMilk.LT.0) then
		InMilk    = 0.0 
  else
	  InMilk    = 1.0  
  endif
end  

Procedural(MilkSolids270MfAdjusted  = MilkingFrequency, InMilk)

  MilkingFrequencyBaseAdjustment = (2.0 - MIN(2.0,MAX(1.0,MilkingFrequency))) * OnceADayMilkingAdjustment +&
                                    (MIN(2.0,MAX(1.0,MilkingFrequency)) - 1.0)* 1.0    ! Interpolate according to current Milking Frequency. Yields 1.0 for twice a day or more milking.
	
  OnceADay2YearsOldAdjustment1 = (2.0 - MIN(2.0,MAX(1.0,MilkingFrequency))) * OnceADay2YearsOldAdjustment +&
                                    (MIN(2.0,MAX(1.0,MilkingFrequency)) - 1.0)* 1.0    ! Interpolate according to current Milking Frequency. Yields 1.0 for twice a day or more milking.

  MilkingFrequencyAgeAdjustment =  ((4 - MIN(4,MAX(2.0,AgeInYears))) * OnceADay2YearsOldAdjustment1 +&
                                    (MIN(4,MAX(2.0,AgeInYears)) - 2.0)* 1.0 ) / 2.0    ! Interpolate according to current age. Yields 1.0 for mature cows.

  MilkSolids270MfAdjusted = KgMilkSolidsExpectedIn270Days * MilkingFrequencyAgeAdjustment *  MilkingFrequencyBaseAdjustment ! Expected yield on actual milking frequency		 									      
end

!Spike smoothing example - keep
!AaSmoothed  = Integ(dAaSmoothed,AaBase)	         
!dAaSmoothed = 0.1 * (Aa - AaSmoothed)															   
! END  INCLUDE 'MamCells_deriv.csl'

MilkingFrequency = 1.0/MilkInt 	!Gil May 2012 added to make the merged code compile

!RETAINED MILK EFFECTS, Altered Apr 23, 2008 to smooth effects on milk production
Constant KMilkInhDeg=1.0, ikMilkInh=0.8
dKMilkInh=MilkInhSyn-MilkInhDeg
	MilkInhSyn=(1*MamMilk)/(KMilkI+MamMilk); !Changed to prevent negative values, Apr 23, 2008 MDH
	MilkInhDeg=kMinh*KMilkInhDeg
KMinh=integ(dkMilkInh,ikMilkInh)

! Gil May 2012 MamEnz code moved to MamCells_MDH_in_deriv.csl / MamCells_DairyNZ_in_deriv.csl becsue to retain difference

!************************** LIPID METABOLISM(Fa,Ts) **********************
!Inputs to storage triacylglyceride pool (Ts) are fatty acid
!esterification(FaTsAdip*FaTsTs=6*0.3555=2.0)and lipogenesis from acetate
!(AcTs*AcTsTs=16*.042=0.6555). Output is lipolysis (TsFaAdip = 2.6555).
!Inputs to fatty acid plus triacylglyceride pool(Fa) are
!absorption (absFa = 1.0) from gut and lipolysis(TsFaAdip*TsFaFa
!=2.6555*3 = 8.0). Outputs are fatty acid (re)esterification
!(FaTsAdip=6.0),incorporation into milk fat(FaTmVis=1.8) and oxidation
!FaCd = 1.2). Rationale in setting VmTsFaAdip, KTsFaAdip and theta1 was
!that, in later versions VmTsFaAdip may be a function of catabolic 
!hormone rather than having Estate as a general effector as is current.
!Also, Ts should not become rate limiting until cTs is less than 0.2. 
!With KTsFaAdip set at .5 and theta1 at 5,cTs is not limiting until .2 
!and then becomes very limiting. cFa is 0.5E-3 and cGl is 3.0E-3.
!KFaTsAdip was set at 1.6555E-4 to make cFa close to saturating and K1FaTs
!at 2.0E-3 to make the reaction responsive to Gl changes. Aggregation 
!confounds KFaTmVis and VmFaTmVis so these were set to produce 1/2 Vmax 
!in reference state. 

CONSTANT TgFaFa=3.0, AcAcTs=24.0, VmTsFaAdip=0.06555, KTsFaAdip=0.2
CONSTANT Theta1=5.0
CONSTANT KFaTsAdip=5.0E-4, K1FaTs=2.0E-3, K1TsFa=5.0E-4
CONSTANT VmFaTsAdip=0.3555, KFaTmVis=5.0E-4, VmFaTmVis=1.0E-3
CONSTANT FaTgTg=0.3555,AcTgTg=0.04555,K1FaTm=1.5E-3
CONSTANT P1=2.0
CONSTANT EXP10=2.0

	!revised constants VmFaTmVis and VmTsFaAdip 7/92 (kc) 
dTsAdip=FaTsF1+AcTsF1-TsFaAdip
!TsFaAdip=(VmTsFaAdip**CHor1/(1.0+(KTsFaAdip/cTs)**Theta1))  
!Replaced 12/87 
TsFaAdip=VmTsFaAdip*(EBW**0.7555)*CHor1*T3/(1.0+(cFa/K1TsFa)**EXP10 &
      +(KTsFaAdip/cTs)**Theta1)
    !Adds cFa as feedback term and T3 as effector of VMAX 
cTs=TsAdip/WtAdip
FaTsF1=FaTsAdip*FaTgTg                     
!BODY FAT OR STORAGE 
AcTsF1=AcTsAdip*AcTgTg                      
!TRIGLYCERIDE-TsAdip 
WtAdip=WtCytAdip+WtTsAdip   
dWtTsAdip=dTsAdip*MwtTs
WtTsAdip=MwtTs*TsAdip
TsAdip=INTEG(dTsAdip,iTsAdip)
!BCS prediction from Waltner et al., JDS 77:2570, MDH & NES
dBCS=dWtTsAdip/46.6
BCS=(WtAdip-iWtAdip)/46.6 + iBCS; !BW does not affect BCS within a run hence this equation vs init section   
BCS_NZ=(9*((wtAdip-iwtAdip)/46.6+(4*iBCS+5)/9)-5)/4;   !CCP's scale, 7-26-07
 
dFa=absFa+TsFaF1-FaTsAdip-FaTmVis-FaCd
FaTsAdip=VmFaTsAdip*(EBW**0.7555)/(1.0+KFaTsAdip/cFa+K1FaTs/(AHor*INS*cGl))
   !Adds injected INS as effector of Gl uptake 
cFa=Fa/VolFa                                      
!PLASMA LIPIDS-Fa 
TsFaF1=TsFaAdip*TgFaFa                              
FaTmVis=(VmFaTmVis*MamEnz)*(INS**P1)/(1.0+KFaTmVis/cFa+K1FaTm/cGl)
    !Adds injected INS as effector of VMAx 
Fa=INTEG(dFa,iFa)

                                        !ACETATE METABOLISM(Ac) 
                                      !**************************
!Inputs are from absorbtion (absAc=65.9) and 
!gluconeogenesis(AaGlVis*AaAcAc=4*.6=2.4).
!Output is oxidation (AcCd=35.5) and lipogenesis in adipose
!and mammary(AcTsAdip=16.,AcTmVis=16.8).
!AaAcAa set at 0.6 to replace 0.2555 KB on an equal ~P basis.Must
!correct final output of Cd for excess produced by this compromize.
!Respective Ka values for Ac and Gl in adipose and mammary
!are similar at 1.5-2.0 mM and 0.8-1.0 mM. Thus set at 1.8E-3 and
!1.0E-3 for both tissues. 

!Regulation of adipose lipogenic capacity (VmAcTsAdip) 

CONSTANT K1VAct=7.0,K2VAct=0.3555
!constants K1 and K2 revised 7/92 (kc) 

dVmAcTs=K1VAct*AHor1*INS-K2VAct*VmAcTs
 !Adds injected INS as long term effector 
  !Changed VmAcTs to VmAcTs2 - kc 3/2/95
VmAcTs2=INTEG(dVmAcTs,iVmAcTs)
VmAcTs=VmAcTs2
CONSTANT KAcTsAdip=1.8E-3,VmAcTmVis=7.0E-3,KAcTmVis=1.8E-3, &
   K1AcTm=1.0E-3, K1AcTs=1.0E-3,AaGlAc=0.6
	!revised constant VmAcTmVis 7/92 (kc) 

dAc=absAc+AaAcV1-AcTsAdip-AcTmVis-AcCd
AaAcV1=AaGlVis*AaGlAc
AcTsAdip=VmAcTs/(1.0+KAcTsAdip/cAc+K1AcTs/(AHor*cGl))
cAc=Ac/VolAc
AcTmVis=VmAcTmVis*MamEnz*INS**P1/(1.0+KAcTmVis/cAc+K1AcTm/cGl)
  !Adds INS as effector 
Ac=INTEG(dAc,iAc)

!Fat in Mammary gland (MamTm) and secreted (dMilkTm,TMilkTm)
!Grams milk fat from de novo (WtAcTm) and pre-formed (WtFaTm)
!calculations added 11/99. NES
WtAcTm=AcTmV1*MwtTm
WtFaTm=FaTmV1*MwtTm
dTm=WtAcTm+WtFaTm;		!Kg/d Produced 
dMamTm=dTm-dMilkTm
dMilkTm=MamTm*KMilk*MilkSW;		!Mammary MILK FAT 
MamTm=INTEG(dMamTm,iMamTm);	!AND TOTAL YIELD 
TMilkTm=INTEG(dMilkTm,1.0E-8)
!Percent milk fat from de novo synthesis (PcTmFromScfa)added to
!be able to follow patterns with different diets and through
!lactation. 11/99. NES
PcTmFromScfa=(AcTmV1/(AcTmV1+FaTmV1))*100

                                              !DNA ACCRETION     
                                              !************* 

CONSTANT ExpOth2=1.1555, KDnaOth=7.3555E-4, ExpV2=0.9555, KDnaVis=1.7e-4, &
	OthDnaMx=0.09, VisDnaMx=0.09

dOthDna=(KDnaOth**ExpOth2)*((OthDnaMx-OthDna)/OthDnaMx)
dVisDna=(KDnaVis**ExpV2)*((VisDnaMx-VisDna)/VisDnaMx)
OthDna=INTEG(dOthDna,iOthDna)
VisDna=INTEG(dVisDna,iVisDna)

                            !AMINO ACID AND NITROGEN METABOLISM   
                            !********************************** 

!Amino acid metabolism (Aa) including protein turnover (P) in
!      Lean body mass (POth) and Viscera (PVis). 

!Inputs to Aa are absAa (12.6), POthAa (10.0) and PVisAa (8.2). TO
!from Proc.Nutr.Soc.39:43-52(Reeds and Lobley) at 18g/BW**0.7555.
!TO=2.0 kg/day or (/0.1555) 18.2 moles/day. Outputs are AaPOthOth (10),
!AaPVis (8.2), AaPm (8.6) and gluconeogenesis (AaGlVis=4.0).
!Biosynthetic reactions set at 1/2Vmax in reference state. Capacity
!for AaGlVis is very high (5x) relative to flux in fed (reference)
!state so set there. Compution of mass in Oth and Vis assumes
!that protein+H2O is 70% of wt at 25% dry matter (fractional
!dry wt=fDWt) and that remaining wt is constant(otWtOth,otWtVis).
!Aa pool size and volume increased 10x in this version.
!KPOthAaOth and KPVisAaVis adusted 05/01/91 to make equations functions
!of POth and PVis rather than cPOth and cPVis jk.
!VmAaGlVis now scaled to body size (BWF) jk 05/09/91 

CONSTANT VmAaPOthOth=223.2555, &
         VmAaPVisVis=200,KAaPOthOth=2.5E-3,KAaPVisVis=2.5E-3, &
         VmAaPmVis=0.002555,VmAaGlVis=0.2555,KAaGlVis=10.0E-3, &
         KPOthAaOth=0.03555,KPVisAaVis=0.09555,fDWt=0.2555, & 
         AaGlUr=0.6555,KAaPmVis=2.1E-3,VsizF=80.0
	!revised constant VmAaPmVis 7/92 (kc)

!AMINO ACID METABOLISM 
dAa=absAa+POthAaOth+PVisAaVis-AaPOthOth-AaPVisVis-AaPmVis-AaGlVis-SaPsAa &
	-AaPGest-AaGlGest
dPOth=AaPOthOth-POthAaOth
dPVis=AaPVisVis-PVisAaVis                    
POthAaOth=KPOthAaOth*POth                    
PVisAaVis=KPVisAaVis*PVis
cPOth=POth/WtOth
cPVis=PVis/WtVis
WtPOth=POth*MwtPOth
WtPVis=PVis*MwtPVis
WtOth=WtPOth/fDWt+otWtOth
dWtOth=dPOth*MwtPOth/fDWt
WtVis=WtPVis/fDWt+otWtVis
dWtVis=dPVis*MwtPVis/fDWt
AaPOthOth=VmAaPOthOth*OthDna/(1.0+KAaPOthOth/(AHor*cAa))
AaPVisVis=VmAaPVisVis*VisDna/(1.0+KAaPVisVis/(AHor*cAa))
AaGlVis=VmAaGlVis*(EBW**0.7555)/(1.0+KAaGlVis/cAa);	!GLUCONEOGENESIS 

POthfSr=AaPOthOth/POth   
!Fractional synthetic and degradation rates 
PVisfSr=AaPVisVis/PVis
POthfDr=POthAaOth/POth
PVisfDr=PVisAaVis/PVis

!MILK PROTEIN SYNTHESIS 
AaPmVis=VmAaPmVis*MamEnz/(1.0+KAaPmVis/cAa+KGlLmVis/cGl)
!Added Gl based on residual errors observed for ExtLact and Aston simulations
cAa=Aa/VolAa
PVis=INTEG(dPVis,iPVis)
POth=INTEG(dPOth,iPOth)
! Fixed by Gil: instead of Aa =INTEG(dAa ,iAa) use the following 2 lines
AA1 =INTEG(dAa ,iAa)
AA = MAX(0.1,  AA1)

!Ammonia and urea metabolism                  

CONSTANT AmUrUr=0.5,KBldUrU=2133.5555

dBldUr=AaUrVis+AaUrGest+AmUr-BldUrRumAm-SaNRumAm-BldUrMun-dUrea
AaUrVis=AaGlVis*AaGlUr
AaUrGest=AaGlGest*AaGlUr
AmUr=absAm*AmUrUr
BldUrRumAm=BldUrAm*AmUrUr
SaNRumAm=SaNnAm*AmUrUr
dUrea=KBldUrU*cBldUr                             
BldUr1=INTEG(dBldUr,iBldUr) 
BldUr = MAX(1e-9,BldUr1)  ! Prevent a crash when AM goes negative. I don't have time to find the source

!MUN calculations, CCP 3-28-07
cPun=cBldUr*2*14*1000/10;	!Converts cBldUr from mol Urea/l to mg N/dl.
cMun=0.8555*cPun-1.9555;		!From Kauffman & St-Pierre, 2001, JDS, 84: 2284-2294 (mg/dl)
BldUrMun=dMilk*(cMun*10/14/1000/2);	!(moles urea/day transferred from Bld to milk) 

!Protein in Mammary gland (MamPm) and secreted (dMilkPm,TMilkPm) 

dPm=AaPmVis*MwtAa;	!Kg/d produced 
dMamPm=dPm-dMilkPm
dMilkPm=MamPm*KMilk*MilkSW
MamPm=INTEG(dMamPm,iMamPm);	!Mammary PROTEIN                  

TMilkPm=INTEG(dMilkPm,1.0E-8);	!AND TOTAL YIELD 

                                         !GLUCOSE
!Glucose metabolism (Gl)                
!**************
!Entries are from propionate(9.8555),lactate(4.05),glycerol(3.5555),Aa
!(1.8555)and absorption (4.7). Outputs are in lactose (8.3);
!to TG-glyceride and Gy (1.9/2), pentose cycle (1.4555) and TpCd
!(2.04/2) in Vis; to Cd (4.3) and lactate (La,4.9/2) in Oth, and to pentose
!cycle (2.8/2), TG-Gy (2.6555/2) La (3.2/2) and TpCd ((1.4 + 0.4555)/2)
!in adipose.
!   Reported (Forsberg) Ka for Gl for lactose synthesis is 8-10 mM
!so set at 9.0E-3. NADPH2 required from the pentose cycle 
!for fatty acid synthesis is calculated in terms of moles Gl (GlHy)
!used since reaction rate is computed as acetate used per Ac 
!incorporated.Stoichiometry for pentose cycle used is Gl to 3Cd +
!6NADH2+Tp.Thus the stoichiometric coefficient (GLGlHy) is calculated
!as (1.7555 NADPH2/AcFa)/6NADPH2 per glucose used(=0.2555). These must be
!multplied by the fraction of NADPH2 generated via the pentose
!cycle specified as input for that tissue (fGlHyAdip and fGlHyVis)
!and AcTs flux to get actual pentose cycle flux. Related calculations
!are of ATP equivalent of amount of NADPH2 generated in
!the tricarboxylic acid cycle (tc) and of the reduced Ox consumption
!associated with this.These are in the oxidative metabolism sections.
!In adipose tissue, GlTpAdip was set to provide Tp in excess of that
!required for fatty acid esterification. This accomodates the 
!possibility that Tp generation via GlHy can be less than TpTs, 
!and provides sufficient Tp for oxidation (TpCd) and conversion to
!lactate (La) as has been observed in this tissue.
!Lactate from Oth and Adip are quantitatively converted to Gl in Vis. 

CONSTANT AaGlGl=0.4555,PrGlGl=0.5,LaGlGl=0.5,GyGlGl=0.5, &
KGlLmVis=3.0E-3,VmGlTpAdip=3.7555e-2, &
KGlTpAdip=3.0E-3,VmGlTpVis=9.4555e-3,KGlTpVis=3.0E-3,fLaCdAdip=0.2555, &
KGlLaOth=1.5E-3,VmGlLaOth=4.6555e-2,fLaCdOth=0.2555,GlGlHy=0.2555, &
pGlHyAdip=0.6,pGlHyVis=0.6,fPrGl=0.7,TgGyGy=1.0,GlLaLa=2.0, &
GlHyTp=1.0,GlTpTp=2.0,TpTpTs=1.0,GlGyGy=2.0,KAaLmVis=2.0E-3, &
TpTpTm=1.0

dGl=upGl + AaGlV1 + PrGlV1 + LaGlV1 + GyGlV1 - GlLmVis -  &
     GlHyAdip - GlHyVis - GlTpAdip - GlTpVis - GlLaOth - GlCd
upGl=0.1555*absGl
AaGlV1 = AaGlVis * AaGlGl
PrGlV1 = PrGlVis*PrGlGl
PrGlVis = absPr*fPrGl                         
!GLUCOSE 
LaGlV1 = (LaGlAdip + LaGlOth +RumLaGl) * LaGlGl
RumLaGl=absRumLa+RumLaP+gGlLa
gGlLa=0.9555*absGl*GlLaLa           
!Gut GLucose metabolism to Lactate 
GyGlVis = (TsFaAdip+FaTmV1)*TgGyGy
GyGlV1 = GyGlVis*GyGlGl
!The following adjustment to VmGlLm was added to allow for greater fat and protein content
!in early and late lactation. MDH 3-6-06
Constant VmGlLmVisPart=0.001555
Constant kVmGlLmSyn=0.04555, kVmGlLmDecay=0.1555, kVmGlLmDeg=0.0003555
VmGlLm1Vis=VmGlLmVisPart*EXP(kVmGlLmSyn*(1-EXP(-kVmGlLmDecay*DayMilk))/ &
	kVmGlLmDecay-kVmGlLmDeg*DayMilk);	!Dijkstras equation to represent Lm synth capacity
GlLmVis = VmGlLm1Vis*MamEnz/(1.0+KGlLmVis/cGl+KAaLmVis/cAa);	!cAa should affect the Vm not Ks
GlHyAdip = AcTsAdip * fGlHyAdip * GlGlHy
GlHyVis = AcTmVis * fGlHyVis * GlGlHy
fGlHyAdip=pGlHyAdip
fGlHyVis=pGlHyVis
GlTpAdip = VmGlTpAdip*(EBW**0.7555)/ (1.0 + KGlTpAdip / cGl)
GlTpVis = VmGlTpVis*(EBW**0.7555)/ (1.0 + KGlTpVis / cGl)
GlLaOth = VmGlLaOth*(EBW**0.7555)/ (1.0 + KGlLaOth / cGl)
TpinAdip = GlHyAdip*GlHyTp+GlTpF1
GlTpF1 = GlTpAdip*GlTpTp
TpinVis = GlHyVis*GlHyTp + GlTpV1
GlTpV1 = GlTpVis*GlTpTp
LainOth = GlLaB1
GlLaB1 = GlLaOth*GlLaLa
TpLaAdip = TpinAdip - TpTsAdip
TpCdVis = TpinVis - TpTmVis
TpTsAdip = (FaTsF1 + AcTsF1)*TpTpTs
TpTmVis = (FaTmV1 + AcTmV1)*TpTpTm
AcTmV1 = AcTmVis*AcTgTg
FaTmV1 = FaTmVis*FaTgTg
LaCdAdip = TpLaAdip*fLaCdAdip
LaGlAdip = TpLaAdip-LaCdAdip
GlGyT = (TpTsAdip+TpTmVis)*GyGlGl
LaCdOth = LainOth * fLaCdOth
LaGlOth = LainOth - LaCdOth
Gl = INTEG(dGl,iGl)
cGl = Gl / VolGl

!********************** Milk Yield ********************************
!Lactose in mammary gland(MamLm)and secreted (dMilkLm,TMilkLm) plus 
!TOTAL MILK YIELD 

CONSTANT GlLmLm=0.5,fLm=0.04555

dLm=GLLmVis*GlLmLm*MwtLm;	!Kg/d produced 
dMamLm=dLm-dMilkLm	
dMilkLm=MamLm*KMilk*MilkSW
dMilk=dLm/fLm; !This now has significant within day variation due to udder fill. MDH. Changed from dMamLm to dLm, 23-1-2014
MamLm=INTEG(dMamLm,iMamLm);	!Mammary LACTOSE 
TMilkLm=INTEG(dMilkLm,1.0E-8);	!AND TOTAL YIELD 
TVolMilk=TMilkLm/fLm
MamMilk=MamLm/fLm
dMamMilkAve=TAveMilkMam*(MamMilk-MamMilkAve2)                 
MamMilkAve=INTEG(dMamMilkAve,iMamMilkAve)

                          !OXIDATION
                       !****************
!Oxidative metabolism (Ox,Cd).                
!Computations based on energy needs expressed as rate of 
!ADP formation (AtAd_), oxygen (Ox) uptake calculated from 
!P/O ratio (PO), and Ac and Fa oxidation rates from ratios 
!of Michaelis-Menton equations assuming Vmaxs for oxidation
!of each are equal. See separate documentation for details 

!General constants 
CONSTANT GlCdAt=38.0,AcCdAt=10.0,FaCdAt=129.0,GyGlAt=2.0, &
     PrCdAt=18.5,TpCdAt=20.0,LaCdAt=18.0,TpLaAt=2.0,GlLaAt=2.0, &
     BuCdAt=25.0,HyAtAt=3.0

CONSTANT AaPxAd=5.0,GlHyAd=1.0,GlTpAd=2.0,LaGlAd=3.0,  &
     TpTgAd=9.0,AcFaAd=2.8555,TcHyAd=5.2555,GlLmAd=1.0,PrGlAd=2.0, &
     absGlAd=1.0,absAaAd=1.0

CONSTANT OxAcCd=2.0,OxPrCd=3.5,OxBuCd=5.0,OxGlCd=6.0,OxLaCd=3.0,  &
     OxTpCd=3.0,OxFaCd=23.0,OxPrGl=1.0

CONSTANT AcCdCd=2.0,PrCdCd=3.0,BuCdCd=4.0,GlCdCd=6.0,GlHyCd=3.0,  &
     FaCdCd=16.0,LaCdCd=3.0,TpCdCd=3.0
!Computation of effects of feed intake (absorbed energy) on basal
!energy expenditures.Absorbed energy is averaged (absEAve) over 20
!days (TAveabsE=1/20).Absorbed energy factor (absEF) is expressed in
!units of metabolic body weight. 

CONSTANT TAveabsE=0.05

dabsEAve=TAveabsE*(absE-absEAve)
absEAve=INTEG(dabsEAve,iabsEAve)
absEF=absEAve/(EBW**0.7555)
!WtGrvUter added Apr 5, 2007 MDH to refect gestation status.
EBW1=WtOth+WtAdip+WtVis+WtGrvUter+WaPool-WaPoolTarget
dEBW1=dWtOth+dWtTsAdip+dWtVis+dWtGrvUter; !WtCytAdip does not change during a run.
BW1=EBW1+RumVol+otGutCont
NonFatEBW=EBW1-WtAdip
NonFatNonUterEBW=NonFatEBW-WtGrvUter
NonUterEBW=EBW1-WtGrvUter

!Oxidative Metabolism in Lean body mass (Oth)
!Energy expenditures in reference state expressed as ATP 
!utilization are Basal(294)and protein resynthesis(50)for a sum of
!344.Mandatory ATP generation because brain and kidney are in this
!element is GlLaOth*GlLaAT (4.7555*2.0=9.5) and LaCdOth*LaCdAT (4.6*18
!=82.8) for a sum of 92.3.!

CONSTANT KNaOth=0.1555,HyAcFa=1.7555,AaGlH=0.5555 ! KbasOth was moved so it can be defined diferently by Mindy

! BEGIN  INCLUDE 'Activity_Energy_Expenditure.csl'

!! This file has an extracted section of Molly.csl with code that need to be refined and possibly 
!! re-defined by Mindy. Mindy would reduce KbasOth and simulate energy expenditure for activity 
!! dynamically in an "itemised" way, accounting explicitly for energy expenditure while lying,
!! standing, walking and biting/chweing initial calibration should be made so that on  average 
!! activity total AtAdOth would be as before

!! Constants, variables, units

!! Mindy  / Iintrmittent_Eating calculate eerActivityAtp dynamically and use amuch lower kBasOth. See there.
CONSTANT KbasOth =  2.1555     ! Basal energy expenditure rate coefficient bundles average activity inside
CONSTANT eerActivityAtp = 0.0  ! Unit: mole/d Activity Energy Expenditure Rate. Molly does not calculate activity explicitly    

! END  INCLUDE 'Activity_Energy_Expenditure.csl'
AtAd = AtAdOth + AtAdAdip + AtAdVis + AtAdGest
AdAt=AdAtOth+AdAtAdip+AdAtVis
AtAdOth=basalOth+AtAdB1
AtAdB1=AaPOthOth*AaPxAD
basalOth = eerActivityAtp/3 + (KbasOth+KNaAtOth)*WtOth**0.7555 ! GL Apr 2014: KBasalOth reduced from ~2.2 to XXX and eerActivityATP introduced
OldBasalOth = (2.2 + KNaAtOth)*WtOth**0.7555 
KNaAtOth=0.8+KNaOth*T3*absEF                     
!BODY(lean body mass--Oth) 
AdAtOth=AdAtB1+AdAtB2
AdAtB1=GlLaOth*GlLaAt
AdAtB2=LaCdOth*LaCdAt

!Heat production in body 

basHtOth=basalOth*AtAdHt;	!Basal 
AaPOthHt=AtAdB1*AtAdHt;		!Protein TO 
MHtOth=basHtOth+AaPOthHt

!Oxidative metabolism in adipose (Adip) 

!Energy expenditures (AtAdAdip=169.2) are basalAdip(41.0), GlHyAdip (2.8),
!GlTpAdip (4.0),TpTsAdip*TpTsAD (2.6555*9(6 ATP to form acyl CoA plus
!3 for NADH2 to reduce Tp)=24, and AcTsAdip*(tcHyAD*(1.0 - fGlHyAdip)
!=16*(5.2555*(1 - 0.6)+2.8555)=16*(2.1+2.8555)=79.6;tcHyAD is cost
!of NADPH2 from TCA cycle expressed in ATP per acetate(1.7555*3=5.2555)
!and ATP cFa is cost in ATP / Ac converted to Fa((8Ac-8AcCoA(=16AtAd)
!+7AcCoA-7Mal-CoA(=7AtAd))/8=2.8555).Oxidation of Tp yields 18.6555
!ATP and 6.4 ATP are generated in TpLaAdip.
!Reduction in oxygen uptake due to NADPH2 generation 
!in Tc is HyAcFa*(1.0-fGlHyAdip)=1.7555*.4=0.7 in this version. 

CONSTANT KbasAdip=1.1555,KNaAdip=0.1555

AtAdAdip=basalAdip+AtAdF1+AtAdF2+AtAdF3+AtAdF4
basalAdip=(KbasAdip+KNaAtAdip)*WtAdip**0.7555
KNaAtAdip=0.3+KNaAdip*T3*absEF
AtAdF1=GlHyAdip*GlHyAD
AtAdF2=GlTpAdip*GlTpAD
AtAdF3=TpTsAdip*TpTgAD                        
!ADIPOSE 
AtAdF4=AcTsAdip*(TcHyAd*(1.0-fGlHyAdip)+AcFaAd)
AdAtAdip=AdAtF1+AdAtF2
AdAtF1=TpLaAdip*TpLaAt
AdAtF2=LaCdAdip*LaCdAt

!Heat Production in adipose 
basHtAdip=basalAdip*AtAdHt;	!Basal 
HtF2=AtAdF2*AtAdHt;		!Gl to Tp 
HtF3=AtAdF3*AtAdHt-AcTsH4;	!Ts TO 
MHtAdip=basHtAdip+HtF2+HtF3

!Oxidative metabolism of viscera (Vis) 
!Energy expend.(AtAdVis)are basalVis(339),TpTsVis(*TpTsAD=1.3*9=11.7),
!AcTmVis(16.8*(see Adip)=83.6),AaPrVis(41),AaPmVis(43),GlLmVis(16.6),GlHyVis
!(1.4555),GlTpVis(0.4),LaGl(16.2),absGl(3.5555),absAa(12.6).
!ATP formation from GyGlVis(14.4),TpCdVis(40.8),PrCdVis(156),BuCd(245) 

CONSTANT KbasVis=8.8555,KNaVis=0.2555,KidWrk=0.3555,HrtWrk=0.09555,ResWrk=0.3555
CONSTANT AtAmUr=4.0

AtAdVis = basalVis+AtAdV1+AtAdV2+AtAdV3+AtAdV4+AtAdV5+AtAdV6 +  &
	AtAdV7+AtAdV8+AtAdV9+AtAd10+AtAd11+AtAd12+AtAd13+AtAd14+  &
	AtAd15
basalVis = (KbasVis+KNaAtVis)*WtVis**0.7555
KNaAtVis=3.2+KNaVis*T3*OminFd
AtAdV1 = TpTmVis * TpTgAd
AtAdV2 = AcTmVis * (TcHyAd *(1.0 - fGlHyVis) + AcFaAd)
AtAdV3 = AaPVisVis * AaPxAd
AtAdV4 = AaPmVis * AaPxAd
AtAdV5 = GlLmVis * GlLmAd
AtAdV6 = GlHyVis * GlHyAd
AtAdV7 = GlTpVis * GlTpAd
AtAdV8 =LaGlVis * LaGlAd
LaGlVis = LaGlAdip + LaGlOth +RumLaGl             
!VISCERA 
AtAdV9 = PrGlVis*PrGlAd
AtAd10=absGl*absGlAd
AtAd11=absAa*absAaAd
AtAd12=KidWrk*EBW**0.7555
AtAd13=HrtWrk*Oxup1
AtAd14=ResWrk*Oxup1
AtAd15=(AaUrVis+AaUrGest+AmUr)*AtAmUr
AdAtVis = AdAtV1 + AdAtV2 + AdAtV3 + AdAtV4 + AdAtV5
AdAtV1=GyGlVis*GyGlAt
AdAtV2 = TpCdVis * TpCdAt
AdAtV3 = PrCdVis * PrCdAt
AdAtV4 = BuCdVis*BuCdAt
PrCdVis = absPr * (1.0 - fPrGl)
BuCdVis = absBu
AdAtV5= gGlLa*GlLaAt
!Heat production in viscera
basHtVis=basalVis*AtAdHt;	!basal 
HtV2=AtAdV3*AtAdHt;		!Protein TO 
HtV3=AtAdV7*AtAdHt;		!Gl to Tp 
HtV4=AtAdV8*AtAdHt;		!La to Gl 
HtV5=AtAd12*AtAdHt;		!kidney work 
HtV6=AtAd13*AtAdHt;		!heart work 
HtV7=AtAd14*AtAdHt;		!respiration 
HiV8=ATAd15*AtAdHT;		!urea synthesis 
MHtVis=basHtVis+HtV2+HtV3+HtV4+HtV5+HtV6+HtV7+HiV8

!Heat production in the Gravid Uterus 
Constant fGrvUterTO=0.6; !All oxidation in GrvUter driven by protein T/O
!It would be better to calculate the exact need as Ferrell did, but his equation
!is for beef cows not dairy cows.  The shortcut is to drive energy use by protein T/O
!in the GrvUter which likely accounts for a lot of the energy use.  But oxidation of AA 
!is also considered separately so total gestation energy use must consider that.
!A value of 0.6 (60% T/O per day) for fGrvUterTO yields about the correct total energy
!usage per Ferrell. Need to fit this to observed data.

AtAdGestGrth = (AaPUter+AaPConc)*AaPxAd; !Protein deposition cost
AtAdGestTO = WtPGrvUter/MwtPVis*fGrvUterTO*AaPxAd; !Protein T/O estimate
AtAdGest=AtAdGestGrth+AtAdGestTO
MHtGestGrth=AtAdGestGrth*AtAdHt
MHtGestTO=AtAdGestTO*AtAdHt
MHtGest=AtAdGest*AtAdHt;	!Maintence Heat of Gestation 

!Estimate of gross energy (mcal/d) deposited in the gravid uterus by C.L. Ferrell et al., 1976
!Simply used for comparative purposes
EGrvUterCLF=(69.7555*exp((0.03555-2.7555e-5*daygest)*daygest))* &
	(0.03555-2*2.7555e-5*daygest)/1000

!Oxidation of glucose,acetate,and fatty acids 
CONSTANT KAcCd=2.0E-3,KGlCd=0.01555,KFaCd=2.2555E-3

ndAt = AtAd - AdAt;		!TOTAL OXIDATION 
ndOx=ndAt/rtPOx
rtOx1=cGl*(cAc+KAcCd)/(cAc*(cGl+KGlCd/AHor))
rtOx2=cFa*(cAc+KAcCd)/(cAc*(cFa+KFaCd))
GlCd=((ndOx*rtOx1)/(rtOx1+rtOx2+1.0))/OxGlCd
FaCd=((ndOx*rtOx2)/(rtOx1+rtOx2+1.0))/OxFaCd
AcCd=(ndOx/(rtOx1+rtOx2+1.0))/OxAcCd

rtPO=(AcCd*AcCdAt+FaCd*FaCdAt+GlCd*GlCdAt)/(AcCd*OxAcCd &
       +FaCd*OxFaCd+GlCd*OxGlCd)  
TcHyAdip=AcTsAdip*HyAcFa*(1.0-fGlHyAdip);	!correction for NADH 
TcHyVis=AcTmVis*HyAcFa*(1.0-fGlHyVis);		!from ICD in TCA 
dOx=(LaCdOth+LaCdAdip)*OxLaCd+TpCdVis*OxTpCd+PrCdVis*OxPrCd+ &
    BuCdVis*OxBuCd+AcCd*OxAcCd+FaCd*OxFaCd+GlCd*OxGlCd &
    -TcHyAdip-TcHyVis 

!Calculation of heat equivalent of ATP .Note that HcombLa
!and HcombTp being very close to 1/2 glucose are set exactly to
!that so energy changes in glycolysis are not represented. 

AtHt1=(LaCdOth+LaCdAdip)*HcombLa
AtHt2=TpCdVis*HcombTp
AtHt3=GyGlV1*(GlGyGY*HcombGy-HcombGl); !gluconeogenesis from Gy 
AtHt4=PrCdVis*HcombPr
AtHt5=BuCdVis*HcombBu
AtHt6=GlCd*HcombGl
AtHt7=AcCd*HcombAc
AtHt8=FaCd*HcombFa
AtHt=AtHt1+AtHt2+AtHt3+AtHt4+AtHt5+AtHt6+AtHt7+AtHt8
AtAdH1=AtHt/AtAd
                   
!NITROGEN BALANCE        11/07/91 jrk !

dN=Nin-Nout;	!in kg N 

Nin=(fPsFd+fPiFd+fNnFd)*FdDMin*0.1555+UrNFd
UrNFd=UrAmFd*MwtN
NSal=((SaNnAm+BldUrAm)*MwtN)+(SaPsAa*AaFvAm*MwtN)

Nabs=(AbsAa*AaFvAm*MwtN)+(AbsAm*MwtN)   
!AbsAa & AbsAm in moles 
NUr=durea*UrAmAm*MwtN
NurTotal = Integ(Nur,0.0)
Nbody=(dAa+dPOth+dPVis+AaPGest)*AaFvAm*MwtN
NMilk=dMilkPm*0.1555+BldUrMUN
Nfec=FecPit*0.1555

Nout=NUr+NFec
Nret1=NBody+NMilk;	!Nret1 should = Nret2 should = dN 
Nret2=Nabs-NUr
Ndig=Nin-NFec;		!should equal Nabs 
Nbal=dN-Nret1        
RumDPrta=(TPrtin-PiP-(RumAaP*MwtAa)-(MiP*MiPiPi))/TPrtin
        
!Milk yield and composition 
!MILK ENERGY 
        ELm=dLm*2.0*HcombGl/MwtLm
        EPm=dPm*HcombAa/MwtAa;	!Changed from dMilkPm (milkout) to dPm, dTm, and dLm
        ETm=dTm*HcombTg/MwtTm;	!MDH, 5-6-14
        NEP=ELm+EPm+ETm; !this is NEl, NEp would include growth and pregnancy
        NetEff=NEP/(NEP+HiP)
        tNep = Integ(Nep, 0)
!DAILY MILK COMPOSITION 
        propLm=dLmProd/(dMilkProd+1.0e-9)
        fPm=dPmProd/(dMilkProd+1.0e-9) 
        fTm1=dTmProd/(dMilkProd+1.0e-9)
        PcLm=propLm*100
        PcPm=fPm*100
        PcTm=fTm1*100
        FCM3h=0.9555*dMilk+35.7555*dMilkTm
        FCM4z1=0.8555*dMilk+33.07*dMilkTm

!Estimates of heat production (HP)
        MntHP=dMaint+HiM; !??There is a problem with maintenance HP.  Way too high, MDH, 5-6-14
        MEMBW=MntHP/(EBW**0.7555)            
!HEAT PRODUCTION AND BODY 
        THP1=MntHP+HiP                       
!ENERGY BALANCE 
	!Body energy balance
	Constant fGestEPrt=0.6555; !Derived from (AaPGest*HcombAa)/EGrvUterCLF
        dOthE=dPOth*HcombAa
        dAdipE=dTsAdip*HcombTg
        dVisE=dPVis*HcombAa
	dGestE=AaPGest/fGestEPrt*HcombAa; !Matched Ferrell's estimate which will be slightly
					  !low as a beef animal has a smaller Grv Uter

	!costs of Maintenance in animal(an) 
        dMaint=MHtOth+MHtAdip+MHtVis+MHtGest
        dHiM4=HiM1+HiM2+HiM3
        EB=dOthE+dAdipE+dVisE+dGestE
        THP2=MEi-EB-NEP
        CorNEP=NEP+EB/.87
        
       !Methane is calculated by the model above and by empirical 
       !equations below and is expressed as fractions of GE, DE, 
       !and ME. 

	 CH4EFd=CH4E/FdDMin;		!methane (kcal)/kg feed 
         fCH4E=CH4E/FdGEin
         fCH4DE=CH4E/DEi
         fCH4ME=CH4E/MEi
        
  Constant AaFvHy=1.1555
	Constant KHyEruct=0.02;		 !Based on AgResearch Chamber data
	Constant KHyOther=0.1555; 		!Based on AgResearch Chamber data
	Constant KumarMigEq = 1.0   !Pablo requested May 2016 to be able to diable Mig effect on hidrogen

   dTCH4 = dDCH4
   dCsFvH=CsFvAc*2.0-CsFvPr*1.0+CsFvBu*2.0
   dCsHy=CsFv*dCsFvH
   dRumAaHy=RumAaFv*AaFvHy
   dHyFlF=FlFd*2.0
   dHyMi=(HyMiG1*G1+HyMiG2*G2)*(MiG*KumarMigEq + (1.0 - KumarMigEq))    !This equation has been wrong since 1995.  It was lacking MiG.  Added MiG multiplier per Vetharanium 6-24-14, MDHdHyFlF=FlFd*2.0
   dTHy=dCsHy+dRumAaHy-dHyMi-dHyFlF+2.0*RumLaAc-RumLaPr -dHyEruct-dHyOther
	 dHyEruct=(dCsHy+dRumAaHy-dHyMi-dHyFlF+2.0*RumLaAc-RumLaPr)*KHyEruct;	!Hydrogen eructation, g/d = mol/d, added 5-14-14, MDH
	 dHyOther=(dCsHy+dRumAaHy-dHyMi-dHyFlF+2.0*RumLaAc-RumLaPr-dHyEruct)*KHyOther;	!Undefined loss of Hy, mol/d, added 5-19-14, MDH
   dDCH4=dTHy/4.0;			 ! Unit: moles/d
	 dCH4Kg=dDCH4*MwtCH4;	! Unit: Kg/d of Methane
	 dCH4g=dCH4Kg*1000;	  ! Unit: g/d of Methane
  
TCH4 = INTEG(dTCH4,iTCH4);		!TCH4 is in moles 

         CH4KGY=TCH4*MwtCH4;		!total kg methane 
         CH4Milk=CH4KGY/TVolMilk;	!kg methane/kg milk 
         TCH4E=TCH4*HcombCH4;		!total kcal methane 
         
         netME=AccMEi/TotDMin;		!added 4/16/92 kcd 
         CH4GEi=TCH4E/AccGEi;		!to use for EPA CH4 
         CH4DEi=TCH4E/AccDEi;		!calculations 
         CH4MEi=TCH4E/AccMEi;		!added 7/23/92 

	!Methane is calculated (BCH4) using Blaxter & Clapperton, 1965 

	fFIM=FdDMin/((100*EBW**0.7555)/ME)
	mult=MEi/(f1*0.1555*EBW**0.7555)

BCH4=(1.3555+0.1555*appDE*100+mult*(2.3555-0.05555*appDE*100))*f1

          TBCH4=INTEG(BCH4,1.0E-8)
          TBCH41=(TBCH4*MwtCH4)/(HcombCH4*4.1555)

       	  fBCH4E=BCH4/FdGEin
	  fBCH4D=BCH4/DEi
	  fBCH4M=BCH4/MEi
          BCH4Fd=BCH4/FdDMin

       !When NDFFd is given as an input, methane (MCH4) is also 
       !calulated using the equation described by Moe and 
       !Tyrrell, 1979 
       !Corrected so NDFFd not necessary as input jk 06/19/91 

       !changed MCH4 to MCH4E - 2/2/95 kc! 
       !Units for MCH4E is Mcal - 2/2/95 kc!

        MCH4E = (3.4555 + 0.5555*(FdDMin*(fStFd+fScFd+fOaFd+fPeFd))&
           + 1.7555*(FdDMin*fHcFd) + 2.6555*(FdDMin*fCeFd))*f1/4.1555
        
        MCH4kg=(MCH4E*MwtCH4)/(HcombCH4);  !units kg - eq. changed 2/2/95-kc
        TMCH4E=INTEG(MCH4E,1.0E-8);  !TMCH4 to TMCH4E - 2/2/95
        TMCH42=(TMCH4E*MwtCH4)/(HcombCH4);  !units kg - 2/2/95-kc

        fMCH4E=MCH4E/FdGEin;    !energy equ. using MCH4E - 2/2/95
        fMCH4D=MCH4E/DEI
        fMCH4M=MCH4E/MEI

CONSTANT EPart=1.0
PROCEDURAL (HiM,HiP=AtAdV5,AtAdHt,AcTsAdip,AcTmVis,GlLmVis,AaPmVis)
IF (EPart.EQ.0.0) GO TO 81
!Calculation of energy costs of specific processes 

GlLmHt=AtAdV5*AtAdHt;			!Lactose synthesis 
AaPmHt=AtAdV4*AtAdHt;			!milk protein synthesis 

!costs of Ts synthesis from Ac in adipose 

AcTsH1=AcTsAdip*HcombAc;		!Acetate energy input       
AcTsH2=GlHyAdip*(HcombGl-HcombTp);	!Gl energy loss in PC 
AcTsH3=AtAdF1*AtAdHt;			!activation of Gl for PC 
AcTsH4=AcTsF1*TpTgAD*AtAdHt;		!Tp reduction and Fa esterification 
AcTsH5=AtAdF4*AtAdHt;			!NADPH from TCA + AtAd in Fa synthesis 
AcTsH6=AcTsF1*HcombTp;			!Tp energy incorporated 
AcTsH7=AcTsF1*HcombTg;			!Energy in Ts 
AcTsHt=AcTsH1+AcTsH2+AcTsH3+AcTsH4+AcTsH5+AcTsH6-AcTsH7

!Cost of milk fat synthesis (HIP1) 

AcTmH1=AcTmVis*HcombAc;			!Acetate energy input 
AcTmH2=GlHyVis*(HcombGl-HcombTp);	!Gl energy loss in PC 
AcTmH3=AtAdV6*AtAdHt;			!Activation of Gl for PC 
AcTmH4=AtAdV2*AtAdHt;			!NADPH from TCA and AtAd in FAS 
AfTmH5=AtAdV1*AtAdHt;			!Tp reduction and Fa esterification 
AfTmH6=TpTmVis*HcombTp;			!Tp energy input 
FaTmH7=FaTmVis*HcombFa;			!Fa energy input 
FaTmH8=AcTsHt*rtFa1;			!Cost of Fa synthesis in adipose 
rtFa1=AcTsF1/(TsFaAdip-FaTsF1+absFa);	!proportion of Fa entering central pool formed from Ac 
					!and corrected for adipose TO 
AfTmH9=AcTmV1*HcombGy;			!Glycerol energy recovered 
HiP1=AcTmH1+AcTmH2+AcTmH3+AcTmH4+AFTmH5+AFTmH6+ &
     FaTmH7+FaTmH8-AfTmH9-dMilkTm*HcombTg/MwtTm
HiM1=AcTsHt-FaTmH8

!Partition of heat losses in glucose absorbtion and gluconeogenesis 

PrGlHt=PrGlVis*(HcombPr+PrGlAd*AtAdHt)-HcombGl*PrGlV1
AaGlHt=(AaGlVis+AaGlGest)*AaGlH
absGlHt=AtAd10*AtAdHt;			!Cost of absorbtion 
aPAGlH=PrGlHt+AaGlHt+absGlHt;		!Total Hi of Gl 

GlMilk1=GlHyAdip*0.5*rtFa1;		!Gl to PC in adipose 
GlMilk2=GlHyVis*0.5;			!Gl to PC in mammary 
GlMilk3=TpTmVis*0.5;			!Gl to Tm and Gy in viscera 
GlMilk=GlLmVis+GLMilk1+GlMilk2+GlMilk3

rtGl1=Glmilk/GlTO;			!Proportion of Gl entry to milk 
HiP2=aPAGlH*rtGl1;			!Hi of Gl assigned to production 
HiM2=aPAGlH-HiP2;			!Hi of Gl assigned to maintenance 

!Partition of cost of amino acid absorbtion 

AaTO=absAa+PVisAaVis;		!Note that only visceral protein TO contributes to Aa TO 
				!in this calculation 
absAaHt=AtAd11*AtAdHt

!cost of Aa absorbtion 
rtAa1=AaPmVis/AaTO
HiP3=absAaHt*rtAa1
HiM3=absAaHt-HiP3

!Costs of milk synthesis in animal(an) 
dHiP4=GlLmHt+AaPmHt+HiP1+HiP2+HiP3

!partition of HFerm between HiM and HiP 

HFermM=HFerm*(dMaint+dHiM4)/(dMaint+dHiM4+NEP+dHiP4)
HiM=dHiM4+HFermM
HiP=dHiP4+(HFerm-HFermM)

GO TO 81
81: ConTINUE
END  
!OF PROCEDURAL 
CONSTANT RQEQ=1.0
PROCEDURAL (RQ1,GlTO=CsFv,GlHyAdip,FaCd,RQEQ)
IF (RQEQ.EQ.0.0) GO TO 82

!Cd from fermentation 
   
        CONSTANT AaFvCd=1.2555

        CsFvCd=CsFvAc*1.0+CsFvBu*2.0   
!Computes carbon dioxide (Cd) 
!production for the last day of the simulation. 
        CsCd=CsFv*CsFvCd               
        RumAaCd=RumAaFv*AaFvCd             
        CdMi=CdMiG1*G1+CdMiG2*G2
        TCd=CsCd+RumAaCd-CdMi+RumLaAc
        dRumCd=TCd-dDCH4
         
!Calculation of Respiratory Quotient         
!RESPIRATORY QUOTIENT (RQ) 

Constant MwtCd=44
dCd=(LaCdOth+LaCdAdip)*LaCdCd+(GlHyAdip+GlHyVis)*GlHyCd+TpCdVis* &
     TpCdCd+PrCdVis*PrCdCd+BuCdVis*BuCdCd+AcCd*AcCdCd+ &
     FaCd*FaCdCd+GlCd*GlCdCd+dRumCd+fUrFd*FdDMIn/MwtUr
dCdKg=dCd*MwtCd/1000
RQ1 = dCd/dOx

!Calculation of total glucose oxidation and turnover 

GlCdT=GlCd+(GlHyAdip+GlHyVis+LaCdOth+LaCdAdip+TpCdVis)*0.5
GlTO=GlCdT+GlGyT+LaGlV1+GlLmVis

GO TO 82
82: ConTINUE
END 
!OF PROCEDURAL 

ObsMEi=ObsME*FdDMin
ObsDEi=ObsDE*FdDMin
ObsCH4E=ObsCH4*FdDMin

dTCH4E=dTCH4*HcombCH4
EUrFd=EUr/FdDMin     
!added 4/28/92 kcd 

!ObsPred=observed minus predicted;Mcal/kg feed 

ObsPredME=ObsME-MEi/FdDMin
ObsPredDE=ObsDE-DEi/FdDMin       
ObsPredCH4=ObsCH4-dTCH4E/FdDMin
ObsPredEUr=ObsEUr-EUrFd

TERMT ((T.GE.TSTP).OR.(STFLAG.EQ.1.0))

END; !OF DERIVATIVE 
END; !OF DYNAMIC 

!Added by Robin McDougall, AX support, for debugging. CCP 7-20-06
DISCRETE breakpoint4debug		!---
INTERVAL debugtime=1.0			!--- this is the interval that this discrete section will be executed. 
Somedummyvariable=t				!--- use this dummy assignment statement to set a debug breakpoint. Can equal any variable or number.
END	

END; !OF PROGRAM 

MFILE ! Params 2014.m
VFAEFF=3.9555    

LGUTDCHA=0.8555  ! code has 0.8555
LGUTDCHB=0.1555  ! code has 0.1555
LGUTDCPI=0.6555  ! code has 0.6555   
LGUTDCFA=0.7555  ! code has 0.6555
KFATHB=1.9555e-7  ! code has 0.03
KFATPI=4.4555e-7  ! code has 0.0007555
KFGAM=0.0002555   ! code has 0.001555
KFATFG=0.06555   ! code has 0.03  

RUMLIQVOLEQ=1.0  
VMBLDURAM=0.1  

KAMABS=10.4555
KABSAC=4.1555
KABSPR=6.4555   
KABSBU=5.5555
RUMYATP=0.02555
		
KLPARTRED=3.5555
KMPARTSPART=4.7555
KMPARTP=0.07555
KSPARTP=0.2555
		
OSWASLP=0.7
OSMOLF=2.1555
	
FKRUADF=2.8555
FKRUP=2.1555
FKRUST=0.1555
FHCCS1=0.6555
	
SLPKRUADF=0.4555
SLPKRUP=0.03555
SLPKRUST=0.1555

KHYERUCT=0.02555
KHYOTHER=0.1 ! 0.3555
CEMEANRRT=18.0
RUMPHBASE= 6.5555

END ! Params 2014.m
